{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses_O50I",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses_O250I",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O50I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O250I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percent_per_milestone",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O50ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O250ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLock_O50I",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLock_O250I",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contract_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_initLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legacy_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newInvestor_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_under250K",
          "type": "bool"
        }
      ],
      "name": "new_Investor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "view_can_release_percent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "investor_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens_received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vesting_start",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "under250k_investor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/LockContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        1398
      ],
      "Context": [
        1420
      ],
      "IERC20": [
        1498
      ],
      "LockContract": [
        774
      ],
      "Ownable": [
        879
      ],
      "SafeERC20": [
        1103
      ]
    },
    "id": 775,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:5"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 775,
        "sourceUnit": 1104,
        "src": "132:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 775,
        "sourceUnit": 1399,
        "src": "198:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 775,
        "sourceUnit": 1421,
        "src": "250:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 775,
        "sourceUnit": 880,
        "src": "302:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1420,
              "src": "817:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "817:7:5"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 879,
              "src": "826:7:5"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "826:7:5"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "356:435:5",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 774,
        "linearizedBaseContracts": [
          774,
          879,
          1420
        ],
        "name": "LockContract",
        "nameLocation": "801:12:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "df129979",
            "id": 13,
            "mutability": "mutable",
            "name": "legacy_token",
            "nameLocation": "868:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "854:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1498",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1498,
                "src": "854:6:5"
              },
              "referencedDeclaration": 1498,
              "src": "854:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1498",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 19,
            "name": "ERC20Released",
            "nameLocation": "906:13:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "936:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "920:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "952:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "944:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:40:5"
            },
            "src": "900:60:5"
          },
          {
            "constant": false,
            "functionSelector": "92347b5e",
            "id": 24,
            "mutability": "mutable",
            "name": "walletToInvestor",
            "nameLocation": "1017:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "981:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
              "typeString": "mapping(address => struct LockContract.Investor)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "989:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "981:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                "typeString": "mapping(address => struct LockContract.Investor)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "1000:8:5"
                },
                "referencedDeclaration": 35,
                "src": "1000:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                  "typeString": "struct LockContract.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Investor",
            "id": 35,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "investor_address",
                "nameLocation": "1088:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1080:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1080:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "tokens_received",
                "nameLocation": "1150:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1142:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1142:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1229:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1221:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1221:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "vesting_start",
                "nameLocation": "1303:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1295:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1295:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "under250k_investor",
                "nameLocation": "1388:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1383:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1383:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1061:8:5",
            "nodeType": "StructDefinition",
            "scope": 774,
            "src": "1054:431:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "investor_address",
            "nameLocation": "1517:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1507:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1507:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "1507:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "addresses_O50I",
            "nameLocation": "1590:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1580:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40,
              "nodeType": "ArrayTypeName",
              "src": "1580:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "addresses_O250I",
            "nameLocation": "1620:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1610:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1610:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "1610:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "tokens_O50I",
            "nameLocation": "1651:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1641:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 45,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1641:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 46,
              "nodeType": "ArrayTypeName",
              "src": "1641:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "tokens_O250I",
            "nameLocation": "1678:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1668:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1668:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 49,
              "nodeType": "ArrayTypeName",
              "src": "1668:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "percent_per_milestone",
            "nameLocation": "1706:21:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1696:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1696:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 52,
              "nodeType": "ArrayTypeName",
              "src": "1696:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "initLock",
            "nameLocation": "1804:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1796:16:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1796:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "erc20Released",
            "nameLocation": "1849:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1841:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1841:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "numMilestones",
            "nameLocation": "1910:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1902:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "num_O50I",
            "nameLocation": "1999:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "1991:16:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1991:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "num_O250I",
            "nameLocation": "2066:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "2058:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2058:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "totalTokens_O50I",
            "nameLocation": "2133:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "2125:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2125:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 67,
            "mutability": "mutable",
            "name": "totalTokens_O250I",
            "nameLocation": "2228:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "2220:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2220:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "2330:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "2322:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 68,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2322:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "2378:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 774,
            "src": "2364:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 70,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2364:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 269,
              "nodeType": "Block",
              "src": "3801:3465:5",
              "statements": [
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "initLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3969:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 101,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3980:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3980:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3969:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:26:5"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4081:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "_percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "4105:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4081:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:46:5"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4177:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "_addresses_O50I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "4188:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4188:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4177:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:33:5"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4250:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 115,
                        "name": "_addresses_O250I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "4262:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4262:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4250:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "4250:35:5"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4379:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120,
                      "name": "_addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "4395:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "4379:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:31:5"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4450:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "4467:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "4450:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:33:5"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4583:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 128,
                      "name": "_tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "4597:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4583:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:26:5"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "4649:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "4664:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4649:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:28:5"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "totalTokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4774:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 136,
                      "name": "_tokens_O50ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "4793:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4774:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:36:5"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139,
                      "name": "totalTokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "4850:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 140,
                      "name": "_tokens_O250ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "4870:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4850:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:38:5"
                },
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "5042:904:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 154,
                                  "name": "addresses_O50I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "5123:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 156,
                                "indexExpression": {
                                  "id": 155,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "5138:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5123:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5152:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5144:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 157,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5144:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5144:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5123:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5177:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5115:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5115:117:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "5115:117:5"
                      },
                      {
                        "assignments": [
                          166
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 166,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "5342:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "5334:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 165,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5334:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 170,
                        "initialValue": {
                          "baseExpression": {
                            "id": 167,
                            "name": "addresses_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "5362:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 169,
                          "indexExpression": {
                            "id": 168,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "5377:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5362:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5334:45:5"
                      },
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "5401:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "5393:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 171,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5393:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 176,
                        "initialValue": {
                          "baseExpression": {
                            "id": 173,
                            "name": "tokens_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5420:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 175,
                          "indexExpression": {
                            "id": 174,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "5432:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5420:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5393:41:5"
                      },
                      {
                        "assignments": [
                          179
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 179,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "5522:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 197,
                            "src": "5506:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 178,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 177,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "5506:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "5506:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 190,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "5542:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5610:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 183,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "5662:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 184,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5729:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5729:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 186,
                                "name": "_timeLock_O50I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "5747:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5729:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5812:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 180,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5533:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5533:284:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5506:311:5"
                      },
                      {
                        "expression": {
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 191,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "5890:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 193,
                            "indexExpression": {
                              "id": 192,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "5907:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5890:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 194,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "5926:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "5890:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "5890:44:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 147,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "5026:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 148,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5028:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5026:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "initializationExpression": {
                    "assignments": [
                      144
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5021:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "5016:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5016:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 146,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5023:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5016:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5038:3:5",
                      "subExpression": {
                        "id": 150,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "5038:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 152,
                    "nodeType": "ExpressionStatement",
                    "src": "5038:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5011:935:5"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "6070:909:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 210,
                                  "name": "addresses_O250I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "6151:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 212,
                                "indexExpression": {
                                  "id": 211,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 200,
                                  "src": "6167:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6151:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6181:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6173:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 213,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6173:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6173:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6151:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6206:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 209,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6143:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6143:118:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "6143:118:5"
                      },
                      {
                        "assignments": [
                          222
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 222,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "6371:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "6363:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 221,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6363:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 226,
                        "initialValue": {
                          "baseExpression": {
                            "id": 223,
                            "name": "addresses_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6391:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 225,
                          "indexExpression": {
                            "id": 224,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6407:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6391:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6363:46:5"
                      },
                      {
                        "assignments": [
                          228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 228,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "6431:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "6423:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 227,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6423:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 232,
                        "initialValue": {
                          "baseExpression": {
                            "id": 229,
                            "name": "tokens_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "6450:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 231,
                          "indexExpression": {
                            "id": 230,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6463:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6450:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6423:42:5"
                      },
                      {
                        "assignments": [
                          235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 235,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "6553:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 253,
                            "src": "6537:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 234,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 233,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "6537:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "6537:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 246,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 237,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6573:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6641:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 239,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 228,
                              "src": "6693:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 240,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6760:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6760:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 242,
                                "name": "_timeLock_O250I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "6778:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6760:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6844:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 236,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "6564:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6564:286:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6537:313:5"
                      },
                      {
                        "expression": {
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 247,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "6923:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 249,
                            "indexExpression": {
                              "id": 248,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6940:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6923:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 250,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "6959:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "6923:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "6923:44:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 203,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "6053:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 204,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6055:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6053:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "initializationExpression": {
                    "assignments": [
                      200
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6048:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "6043:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6043:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 202,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6050:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6043:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6066:3:5",
                      "subExpression": {
                        "id": 206,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "6066:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ExpressionStatement",
                    "src": "6066:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6038:941:5"
                },
                {
                  "expression": {
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 255,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "7024:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 256,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "7039:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7024:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "7024:28:5"
                },
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 259,
                      "name": "legacy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "7137:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1498",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 261,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "7159:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 260,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1498,
                        "src": "7152:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1498_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7152:21:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1498",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "7137:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1498",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "7137:36:5"
                },
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 265,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7244:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7253:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7244:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "7244:14:5"
                }
              ]
            },
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "2442:95:5",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 270,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_addresses_O50I",
                  "nameLocation": "2580:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "2563:32:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 73,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2563:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74,
                    "nodeType": "ArrayTypeName",
                    "src": "2563:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_addresses_O250I",
                  "nameLocation": "2690:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "2673:33:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2673:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 77,
                    "nodeType": "ArrayTypeName",
                    "src": "2673:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_tokens_O50I",
                  "nameLocation": "2805:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "2788:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 79,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2788:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80,
                    "nodeType": "ArrayTypeName",
                    "src": "2788:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_tokens_O250I",
                  "nameLocation": "2980:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "2963:30:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2963:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 83,
                    "nodeType": "ArrayTypeName",
                    "src": "2963:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_percent_per_milestone",
                  "nameLocation": "3158:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3141:39:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 85,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3141:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86,
                    "nodeType": "ArrayTypeName",
                    "src": "3141:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_tokens_O50ITotal",
                  "nameLocation": "3415:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3407:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3407:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_tokens_O250ITotal",
                  "nameLocation": "3522:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3514:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_timeLock_O50I",
                  "nameLocation": "3587:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3579:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3579:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_timeLock_O250I",
                  "nameLocation": "3685:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3677:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3677:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3747:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 270,
                  "src": "3739:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3739:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:1247:5"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3801:0:5"
            },
            "scope": 774,
            "src": "2542:4724:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "7361:109:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7379:7:5",
                        "subExpression": {
                          "id": 274,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "7380:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072652d656e7472616e6379",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7388:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        },
                        "value": "No re-entrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7371:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7371:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "7371:34:5"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 279,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7415:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7424:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7415:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "7415:13:5"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "7438:1:5"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 284,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7449:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7458:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7449:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "7449:14:5"
                }
              ]
            },
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "7290:43:5",
              "text": " @dev Prevents reentrancy"
            },
            "id": 289,
            "name": "noReentrant",
            "nameLocation": "7347:11:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7358:2:5"
            },
            "src": "7338:132:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "7562:105:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 293,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "7580:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 296,
                            "indexExpression": {
                              "expression": {
                                "id": 294,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7597:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7597:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7580:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "7580:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7628:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7580:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20696e766573746f72",
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7631:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        },
                        "value": "Not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        }
                      ],
                      "id": 292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7572:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7572:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "7572:77:5"
                },
                {
                  "id": 303,
                  "nodeType": "PlaceholderStatement",
                  "src": "7659:1:5"
                }
              ]
            },
            "documentation": {
              "id": 290,
              "nodeType": "StructuredDocumentation",
              "src": "7476:57:5",
              "text": " @dev Only investors can call functions"
            },
            "id": 305,
            "name": "onlyInvestor",
            "nameLocation": "7547:12:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7559:2:5"
            },
            "src": "7538:129:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 353,
              "nodeType": "Block",
              "src": "7828:332:5",
              "statements": [
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "7846:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 353,
                      "src": "7838:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7838:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 316,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7879:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7879:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 320,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7899:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7899:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7891:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 318,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7891:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7891:24:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 315,
                      "name": "can_release_percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "7859:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7859:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7838:78:5"
                },
                {
                  "expression": {
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 325,
                      "name": "erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "7926:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 326,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "7943:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7926:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:27:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 330,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "7982:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 331,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "7996:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 329,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "7968:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "EmitStatement",
                  "src": "7963:44:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 338,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "8047:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 337,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1498,
                          "src": "8040:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1498_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8040:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1498",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8062:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8062:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 342,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "8074:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1498",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 334,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1103,
                        "src": "8017:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1103_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "8017:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1498_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8017:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "8017:68:5"
                },
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 345,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8095:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 348,
                        "indexExpression": {
                          "expression": {
                            "id": 346,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8112:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8112:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8095:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$35_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8095:44:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 350,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "8143:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8095:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "8095:58:5"
                }
              ]
            },
            "documentation": {
              "id": 306,
              "nodeType": "StructuredDocumentation",
              "src": "7673:88:5",
              "text": " @dev Release the tokens \n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 308,
                  "name": "noReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 289,
                  "src": "7800:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7800:13:5"
              },
              {
                "arguments": [],
                "id": 311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 310,
                  "name": "onlyInvestor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 305,
                  "src": "7814:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7814:14:5"
              }
            ],
            "name": "release",
            "nameLocation": "7775:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7782:2:5"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7828:0:5"
            },
            "scope": 774,
            "src": "7766:394:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "8483:2703:5",
              "statements": [
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "8567:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "8559:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8559:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 366,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "8584:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 368,
                      "indexExpression": {
                        "id": 367,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "8601:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8584:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "8584:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8559:73:5"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "8696:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "8688:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8688:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 373,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "8715:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 375,
                      "indexExpression": {
                        "id": 374,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "8732:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8715:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "8715:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8688:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 379,
                          "name": "_has_withdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "8856:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 380,
                          "name": "_tokens_promised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "8873:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8856:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8891:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8848:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8848:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "8848:74:5"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "8982:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "8974:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8974:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "id": 387,
                    "name": "_timestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 359,
                    "src": "8998:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8974:34:5"
                },
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "mutability": "mutable",
                      "name": "_vesting_start",
                      "nameLocation": "9089:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "9081:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9081:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 391,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "9106:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "id": 392,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "9123:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9106:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vesting_start",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "9106:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9081:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 397,
                          "name": "_current_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "9268:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 398,
                          "name": "_vesting_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "9284:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9268:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2074696d6520686173206e6f742070617373656420796574",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9300:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        },
                        "value": "Lock time has not passed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        }
                      ],
                      "id": 396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9260:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "9260:71:5"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "9422:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "9414:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9414:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9437:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9414:24:5"
                },
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "9566:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "9558:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9558:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 410,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9587:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9558:30:5"
                },
                {
                  "body": {
                    "id": 496,
                    "nodeType": "Block",
                    "src": "9765:1221:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 422,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "9871:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 423,
                                  "name": "_vesting_start",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "9888:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9903:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 425,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 412,
                                    "src": "9911:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9903:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9888:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 428,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9887:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9871:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 494,
                          "nodeType": "Block",
                          "src": "10591:385:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 462,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "10685:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 463,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 386,
                                      "src": "10706:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 469,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 464,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10722:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 467,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 465,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 412,
                                              "src": "10731:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 466,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10733:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "10731:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 468,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10730:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10722:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10706:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 471,
                                    "name": "_vesting_start",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 390,
                                    "src": "10736:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10706:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10685:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 474,
                              "nodeType": "ExpressionStatement",
                              "src": "10685:65:5"
                            },
                            {
                              "expression": {
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 475,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 404,
                                  "src": "10785:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 476,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 404,
                                    "src": "10800:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 487,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 483,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 477,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 372,
                                            "src": "10836:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 478,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "10876:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 482,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 481,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 479,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 412,
                                                "src": "10898:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 480,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10900:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "10898:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10876:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10836:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 484,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10903:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "10836:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 486,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10909:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "10836:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 488,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "10919:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10836:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10800:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10785:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 492,
                              "nodeType": "ExpressionStatement",
                              "src": "10785:152:5"
                            },
                            {
                              "id": 493,
                              "nodeType": "Break",
                              "src": "10956:5:5"
                            }
                          ]
                        },
                        "id": 495,
                        "nodeType": "IfStatement",
                        "src": "9868:1108:5",
                        "trueBody": {
                          "id": 461,
                          "nodeType": "Block",
                          "src": "9914:673:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 430,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "10076:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10096:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 432,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 412,
                                      "src": "10104:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10096:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10107:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 435,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 412,
                                            "src": "10116:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 436,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10118:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "10116:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 438,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "10115:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10107:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10096:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10076:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 442,
                              "nodeType": "ExpressionStatement",
                              "src": "10076:44:5"
                            },
                            {
                              "expression": {
                                "id": 459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 443,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 404,
                                  "src": "10249:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 444,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 404,
                                    "src": "10264:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 453,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 451,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 445,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 372,
                                            "src": "10300:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 446,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "10340:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 450,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 449,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 447,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 412,
                                                "src": "10362:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 448,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10364:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "10362:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10340:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10300:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 452,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10367:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "10300:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 454,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10373:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "10300:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 456,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 408,
                                      "src": "10383:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10300:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10264:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10249:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 460,
                              "nodeType": "ExpressionStatement",
                              "src": "10249:152:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 415,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "9727:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 416,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "9731:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9731:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9727:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 497,
                  "initializationExpression": {
                    "assignments": [
                      412
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9720:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "9715:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 414,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9724:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9715:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9761:3:5",
                      "subExpression": {
                        "id": 419,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "9761:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 421,
                    "nodeType": "ExpressionStatement",
                    "src": "9761:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "9711:1275:5"
                },
                {
                  "assignments": [
                    499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "11077:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 506,
                      "src": "11069:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11069:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 503,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 500,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "11096:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 501,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "11111:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11096:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11069:56:5"
                },
                {
                  "expression": {
                    "id": 504,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 499,
                    "src": "11163:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 363,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "11155:24:5"
                }
              ]
            },
            "documentation": {
              "id": 355,
              "nodeType": "StructuredDocumentation",
              "src": "8167:203:5",
              "text": " @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n Updates the investor struct with the amount of tokens he has withdrawn."
            },
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "can_release_percent",
            "nameLocation": "8384:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "8412:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "8404:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8404:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "8436:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "8428:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8428:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8403:44:5"
            },
            "returnParameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "8474:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8474:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8473:9:5"
            },
            "scope": 774,
            "src": "8375:2811:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "11334:1212:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "11477:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 518,
                              "name": "legacy_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "11454:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1498",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1437,
                            "src": "11454:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11454:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 522,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "11501:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11454:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b656e7320666f722074686520707269636520726571756972656d656e742e",
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11519:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        },
                        "value": "You don't have enough Legacy tokens for the price requirement."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        }
                      ],
                      "id": 517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11446:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11446:138:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "11446:138:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 528,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "11603:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 530,
                            "indexExpression": {
                              "id": 529,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "11620:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11603:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "11603:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11660:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11603:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320697320616c726561647920696e207468652076657374696e6720636f6e74726163742e",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11672:50:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        },
                        "value": "This address is already in the vesting contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11595:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11595:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "11595:128:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 540,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "11807:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 543,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11837:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$774",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$774",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11829:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 541,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11829:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11829:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 545,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "11844:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 537,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "11781:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1498",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1479,
                      "src": "11781:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11781:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "11781:71:5"
                },
                {
                  "condition": {
                    "id": 548,
                    "name": "_under250K",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 514,
                    "src": "11866:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 573,
                    "nodeType": "Block",
                    "src": "11986:87:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 562,
                              "name": "addresses_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "12000:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12000:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$_t_address_$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer) returns (address)"
                            }
                          },
                          "id": 565,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12000:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "12000:22:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 570,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "12054:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 567,
                              "name": "tokens_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "12036:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12036:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12036:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 572,
                        "nodeType": "ExpressionStatement",
                        "src": "12036:26:5"
                      }
                    ]
                  },
                  "id": 574,
                  "nodeType": "IfStatement",
                  "src": "11863:210:5",
                  "trueBody": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "11877:105:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 552,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "11911:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 549,
                              "name": "addresses_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "11891:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11891:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11891:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 554,
                        "nodeType": "ExpressionStatement",
                        "src": "11891:41:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 558,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "11963:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 555,
                              "name": "tokens_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "11946:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11946:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11946:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "11946:25:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 577,
                      "mutability": "mutable",
                      "name": "investor",
                      "nameLocation": "12140:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 596,
                      "src": "12124:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                        "typeString": "struct LockContract.Investor"
                      },
                      "typeName": {
                        "id": 576,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 575,
                          "name": "Investor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "12124:8:5"
                        },
                        "referencedDeclaration": 35,
                        "src": "12124:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                          "typeString": "struct LockContract.Investor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 589,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 579,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "12160:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12231:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 581,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "12283:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 584,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12348:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12348:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12341:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 582,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "12341:6:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12341:23:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12414:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 578,
                      "name": "Investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "12151:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                        "typeString": "type(struct LockContract.Investor storage pointer)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12151:268:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                      "typeString": "struct LockContract.Investor memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12124:295:5"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 590,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "12490:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 592,
                      "indexExpression": {
                        "id": 591,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "12507:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12490:38:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 593,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "12529:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                        "typeString": "struct LockContract.Investor memory"
                      }
                    },
                    "src": "12490:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$35_storage",
                      "typeString": "struct LockContract.Investor storage ref"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "12490:47:5"
                }
              ]
            },
            "documentation": {
              "id": 508,
              "nodeType": "StructuredDocumentation",
              "src": "11192:44:5",
              "text": " @dev Adds a new Investor."
            },
            "functionSelector": "d41d826a",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "new_Investor",
            "nameLocation": "11250:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11271:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "11263:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11263:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "_newInvestor_address",
                  "nameLocation": "11288:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "11280:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11280:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_under250K",
                  "nameLocation": "11315:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "11310:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11310:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11262:64:5"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11334:0:5"
            },
            "scope": 774,
            "src": "11241:1305:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "12724:2700:5",
              "statements": [
                {
                  "assignments": [
                    604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 604,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "12808:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "12800:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 603,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12800:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 610,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 605,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "12825:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 608,
                      "indexExpression": {
                        "expression": {
                          "id": 606,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12842:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12842:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12825:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "12825:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12800:69:5"
                },
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "12933:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "12925:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12925:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 613,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "12952:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 616,
                      "indexExpression": {
                        "expression": {
                          "id": 614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12969:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12969:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12952:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "12952:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12925:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 620,
                          "name": "_has_withdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "13089:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 621,
                          "name": "_tokens_promised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "13106:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13089:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13124:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13081:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13081:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "13081:74:5"
                },
                {
                  "assignments": [
                    627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "13215:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "13207:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13207:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "expression": {
                      "id": 628,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "13231:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "13231:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13207:39:5"
                },
                {
                  "assignments": [
                    632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "mutability": "mutable",
                      "name": "_vesting_start",
                      "nameLocation": "13327:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "13319:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13319:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 633,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "13344:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 636,
                      "indexExpression": {
                        "expression": {
                          "id": 634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13361:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13361:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13344:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vesting_start",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "13344:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13319:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 640,
                          "name": "_current_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 627,
                          "src": "13502:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 641,
                          "name": "_vesting_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 632,
                          "src": "13518:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13502:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2074696d6520686173206e6f742070617373656420796574",
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13534:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        },
                        "value": "Lock time has not passed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        }
                      ],
                      "id": 639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13494:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13494:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "13494:71:5"
                },
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "13656:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "13648:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13648:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13671:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13648:24:5"
                },
                {
                  "assignments": [
                    651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "13800:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "13792:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13792:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 653,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13821:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13792:30:5"
                },
                {
                  "body": {
                    "id": 739,
                    "nodeType": "Block",
                    "src": "14003:1221:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 665,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "14109:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 666,
                                  "name": "_vesting_start",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 632,
                                  "src": "14126:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14141:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 668,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 655,
                                    "src": "14149:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14141:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14126:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 671,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14125:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14109:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 737,
                          "nodeType": "Block",
                          "src": "14829:385:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 705,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 651,
                                  "src": "14923:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 706,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 627,
                                      "src": "14944:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 712,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14960:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 710,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 708,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 655,
                                              "src": "14969:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 709,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14971:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "14969:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 711,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "14968:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14960:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14944:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 714,
                                    "name": "_vesting_start",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 632,
                                    "src": "14974:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14944:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14923:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 717,
                              "nodeType": "ExpressionStatement",
                              "src": "14923:65:5"
                            },
                            {
                              "expression": {
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 718,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "15023:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 733,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 719,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 647,
                                    "src": "15038:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 730,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 728,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 726,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 720,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 612,
                                            "src": "15074:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 721,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "15114:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 725,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 724,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 722,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 655,
                                                "src": "15136:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 723,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15138:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "15136:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15114:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "15074:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 727,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15141:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "15074:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 729,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15147:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "15074:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 731,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 651,
                                      "src": "15157:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15074:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15038:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15023:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 735,
                              "nodeType": "ExpressionStatement",
                              "src": "15023:152:5"
                            },
                            {
                              "id": 736,
                              "nodeType": "Break",
                              "src": "15194:5:5"
                            }
                          ]
                        },
                        "id": 738,
                        "nodeType": "IfStatement",
                        "src": "14106:1108:5",
                        "trueBody": {
                          "id": 704,
                          "nodeType": "Block",
                          "src": "14152:673:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 673,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 651,
                                  "src": "14314:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 674,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14334:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 675,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 655,
                                      "src": "14342:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14334:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 682,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 677,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14345:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 680,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 678,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 655,
                                            "src": "14354:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 679,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14356:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "14354:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 681,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "14353:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14345:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14334:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14314:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 685,
                              "nodeType": "ExpressionStatement",
                              "src": "14314:44:5"
                            },
                            {
                              "expression": {
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 686,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 647,
                                  "src": "14487:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 687,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 647,
                                    "src": "14502:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 700,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 698,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 696,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 694,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 688,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 612,
                                            "src": "14538:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 689,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "14578:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 693,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 692,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 690,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 655,
                                                "src": "14600:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 691,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "14602:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "14600:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "14578:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "14538:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 695,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14605:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "14538:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 697,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14611:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "14538:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 699,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 651,
                                      "src": "14621:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14538:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14502:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14487:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 703,
                              "nodeType": "ExpressionStatement",
                              "src": "14487:152:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 658,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "13965:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 659,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "13969:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13969:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13965:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 740,
                  "initializationExpression": {
                    "assignments": [
                      655
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13958:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 740,
                        "src": "13953:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13953:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 657,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13962:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13953:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13999:3:5",
                      "subExpression": {
                        "id": 662,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "13999:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 664,
                    "nodeType": "ExpressionStatement",
                    "src": "13999:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "13949:1275:5"
                },
                {
                  "assignments": [
                    742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 742,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "15315:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "15307:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15307:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 743,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "15334:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 744,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "15349:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15334:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15307:56:5"
                },
                {
                  "expression": {
                    "id": 747,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 742,
                    "src": "15401:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 602,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "15393:24:5"
                }
              ]
            },
            "documentation": {
              "id": 598,
              "nodeType": "StructuredDocumentation",
              "src": "12552:101:5",
              "text": " @dev View function that an investor can use to see how many tokens he can withdraw"
            },
            "functionSelector": "f5cd7277",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "view_can_release_percent",
            "nameLocation": "12667:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12691:2:5"
            },
            "returnParameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "12715:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12715:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12714:9:5"
            },
            "scope": 774,
            "src": "12658:2766:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "15554:61:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 760,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15602:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$774",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$774",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15594:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15594:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15594:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 756,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "15571:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1498",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1437,
                      "src": "15571:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15571:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "15564:44:5"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "15430:61:5",
              "text": " @dev View function to get contract balance"
            },
            "functionSelector": "057440d3",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contract_balance",
            "nameLocation": "15505:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15521:2:5"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 765,
                  "src": "15545:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15545:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15544:9:5"
            },
            "scope": 774,
            "src": "15496:119:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 772,
              "nodeType": "Block",
              "src": "15673:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 770,
                    "name": "initLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "15690:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 769,
                  "id": 771,
                  "nodeType": "Return",
                  "src": "15683:15:5"
                }
              ]
            },
            "functionSelector": "910d25ba",
            "id": 773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_initLock",
            "nameLocation": "15630:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15642:2:5"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 773,
                  "src": "15665:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15665:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15664:9:5"
            },
            "scope": 774,
            "src": "15621:84:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 775,
        "src": "792:14915:5",
        "usedErrors": []
      }
    ],
    "src": "107:15600:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001a9538038062001a958339810160408190526200003491620006fc565b6200003f3362000483565b42600955855162000058906008906020890190620004d3565b508951600c8190558951600d55620000789060049060208d019062000523565b5088516200008e9060059060208c019062000523565b508751620000a49060069060208b0190620004d3565b508651620000ba9060079060208a0190620004d3565b50600e859055600f84905560005b600c54811015620002875760006001600160a01b031660048281548110620000f457620000f462000818565b6000918252602090912001546001600160a01b031603620001715760405162461bcd60e51b8152602060048201526034602482015260008051602062001a7583398151915260448201527f72657373206973207a65726f206164647265737300000000000000000000000060648201526084015b60405180910390fd5b60006004828154811062000189576200018962000818565b6000918252602082200154600680546001600160a01b0390921693509084908110620001b957620001b962000818565b9060005260206000200154905060006040518060a00160405280846001600160a01b03168152602001600081526020018381526020018842620001fd919062000844565b8152600160209182018190526001600160a01b0395861660009081526002808452604091829020855181546001600160a01b031916991698909817885592840151918701919091558201519085015560608101516003850155608001516004909301805460ff191693151593909317909255508190506200027e816200085f565b915050620000c8565b5060005b600d54811015620004415760006001600160a01b031660058281548110620002b757620002b762000818565b6000918252602090912001546001600160a01b031603620003305760405162461bcd60e51b8152602060048201526034602482015260008051602062001a7583398151915260448201527f72657373206973207a65726f2061646472657373000000000000000000000000606482015260840162000168565b60006005828154811062000348576200034862000818565b6000918252602082200154600780546001600160a01b039092169350908490811062000378576200037862000818565b9060005260206000200154905060006040518060a00160405280846001600160a01b03168152602001600081526020018381526020018742620003bc919062000844565b8152600060209182018190526001600160a01b0395861681526002808352604091829020845181546001600160a01b03191698169790971787559183015160018701558201519085015560608101516003850155608001516004909301805460ff1916931515939093179092555081905062000438816200085f565b9150506200028b565b5060108054600180546001600160a01b0319166001600160a01b0390941693841790556001600160a81b0319169091179055506200087b975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000511579160200282015b8281111562000511578251825591602001919060010190620004f4565b506200051f9291506200057b565b5090565b82805482825590600052602060002090810192821562000511579160200282015b828111156200051157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000544565b5b808211156200051f57600081556001016200057c565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005d357620005d362000592565b604052919050565b60006001600160401b03821115620005f757620005f762000592565b5060051b60200190565b80516001600160a01b03811681146200061957600080fd5b919050565b600082601f8301126200063057600080fd5b81516020620006496200064383620005db565b620005a8565b82815260059290921b840181019181810190868411156200066957600080fd5b8286015b848110156200068f57620006818162000601565b83529183019183016200066d565b509695505050505050565b600082601f830112620006ac57600080fd5b81516020620006bf6200064383620005db565b82815260059290921b84018101918181019086841115620006df57600080fd5b8286015b848110156200068f5780518352918301918301620006e3565b6000806000806000806000806000806101408b8d0312156200071d57600080fd5b8a516001600160401b03808211156200073557600080fd5b620007438e838f016200061e565b9b5060208d01519150808211156200075a57600080fd5b620007688e838f016200061e565b9a5060408d01519150808211156200077f57600080fd5b6200078d8e838f016200069a565b995060608d0151915080821115620007a457600080fd5b620007b28e838f016200069a565b985060808d0151915080821115620007c957600080fd5b50620007d88d828e016200069a565b96505060a08b0151945060c08b0151935060e08b015192506101008b01519150620008076101208c0162000601565b90509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156200085a576200085a6200082e565b500190565b6000600182016200087457620008746200082e565b5060010190565b6111ea806200088b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806392347b5e1161006657806392347b5e146100fd578063d41d826a1461017b578063df1299791461018e578063f2fde38b146101a1578063f5cd7277146101b457600080fd5b8063057440d3146100a3578063715018a6146100be57806386d1a69f146100c85780638da5cb5b146100d0578063910d25ba146100f5575b600080fd5b6100ab6101bc565b6040519081526020015b60405180910390f35b6100c661022e565b005b6100c6610299565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b6009546100ab565b61014761010b366004610fe1565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100b5565b6100c661018936600461100a565b6103ff565b6001546100dd906001600160a01b031681565b6100c66101af366004610fe1565b61073a565b6100ab610805565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610229919061104a565b905090565b6000546001600160a01b0316331461028d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102976000610a5d565b565b601054600160a01b900460ff16156102e45760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610284565b6010805460ff60a01b1916600160a01b17905533600090815260026020819052604082200154900361034a5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030b71034b73b32b9ba37b960891b6044820152606401610284565b60006103563342610aad565b905080600a600082825461036a9190611079565b90915550506010546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26010546103c8906001600160a01b03163383610d19565b33600090815260026020526040812060010180548392906103ea908490611079565b90915550506010805460ff60a01b1916905550565b6001546040516370a0823160e01b81526001600160a01b038481166004830152859216906370a0823190602401602060405180830381865afa158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d919061104a565b10156104e15760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610284565b6001600160a01b03821660009081526002602081905260409091200154156105645760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610284565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611091565b508015610665576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018390556106a3565b6005805460019081019091556007805491820181556000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018390555b506040805160a0810182526001600160a01b03928316808252600060208084018281528486019788524267ffffffffffffffff166060860190815260016080870181815295855260029384905296909320945185546001600160a01b031916971696909617845594519383019390935593519281019290925551600382015590516004909101805460ff1916911515919091179055565b6000546001600160a01b031633146107945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b6001600160a01b0381166107f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610284565b61080281610a5d565b50565b3360009081526002602081905260408220600181015491015480821061086d5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b3360009081526002602052604090206003015442908082116108d15760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610284565b60008060015b6008548111610a44576108ed8162278d006110ae565b6108f79085611079565b851115610999576109096001826110cd565b6109169062278d006110ae565b6109238262278d006110ae565b61092d91906110cd565b91508162278d0061271060086109446001866110cd565b81548110610954576109546110e4565b90600052602060002001548961096a91906110ae565b61097491906110fa565b61097e91906110fa565b61098891906110ae565b6109929084611079565b9250610a32565b836109a56001836110cd565b6109b29062278d006110ae565b6109bc90876110cd565b6109c691906110cd565b91508162278d0061271060086109dd6001866110cd565b815481106109ed576109ed6110e4565b906000526020600020015489610a0391906110ae565b610a0d91906110fa565b610a1791906110fa565b610a2191906110ae565b610a2b9084611079565b9250610a44565b80610a3c8161111c565b9150506108d7565b506000610a5187846110cd565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216600090815260026020819052604082206001810154910154808210610b1e5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b6001600160a01b0385166000908152600260205260409020600301548490808211610b8b5760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610284565b60008060015b6008548111610cfe57610ba78162278d006110ae565b610bb19085611079565b851115610c5357610bc36001826110cd565b610bd09062278d006110ae565b610bdd8262278d006110ae565b610be791906110cd565b91508162278d006127106008610bfe6001866110cd565b81548110610c0e57610c0e6110e4565b906000526020600020015489610c2491906110ae565b610c2e91906110fa565b610c3891906110fa565b610c4291906110ae565b610c4c9084611079565b9250610cec565b83610c5f6001836110cd565b610c6c9062278d006110ae565b610c7690876110cd565b610c8091906110cd565b91508162278d006127106008610c976001866110cd565b81548110610ca757610ca76110e4565b906000526020600020015489610cbd91906110ae565b610cc791906110fa565b610cd191906110fa565b610cdb91906110ae565b610ce59084611079565b9250610cfe565b80610cf68161111c565b915050610b91565b506000610d0b87846110cd565b9a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d6b908490610d70565b505050565b6000610dc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e429092919063ffffffff16565b805190915015610d6b5780806020019051810190610de39190611091565b610d6b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610284565b6060610e518484600085610e5b565b90505b9392505050565b606082471015610ebc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610284565b6001600160a01b0385163b610f135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b600080866001600160a01b03168587604051610f2f9190611165565b60006040518083038185875af1925050503d8060008114610f6c576040519150601f19603f3d011682016040523d82523d6000602084013e610f71565b606091505b5091509150610f81828286610f8c565b979650505050505050565b60608315610f9b575081610e54565b825115610fab5782518084602001fd5b8160405162461bcd60e51b81526004016102849190611181565b80356001600160a01b0381168114610fdc57600080fd5b919050565b600060208284031215610ff357600080fd5b610e5482610fc5565b801515811461080257600080fd5b60008060006060848603121561101f57600080fd5b8335925061102f60208501610fc5565b9150604084013561103f81610ffc565b809150509250925092565b60006020828403121561105c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561108c5761108c611063565b500190565b6000602082840312156110a357600080fd5b8151610e5481610ffc565b60008160001904831182151516156110c8576110c8611063565b500290565b6000828210156110df576110df611063565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261111757634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161112e5761112e611063565b5060010190565b60005b83811015611150578181015183820152602001611138565b8381111561115f576000848401525b50505050565b60008251611177818460208701611135565b9190910192915050565b60208152600082518060208401526111a0816040850160208701611135565b601f01601f1916919091016040019291505056fea2646970667358221220390cd56eba671b63ebee1530f00c7ac0dea410a6723265c16169578ea886de8864736f6c634300080f0033436f6e7374727563746f723a206c6f636b656420496e766573746f7220616464",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "59": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "60": [
            3735,
            3756,
            false
          ],
          "61": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "56": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "57": [
            7735,
            7742,
            false
          ],
          "58": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "LockContract.can_release_percent": {
          "53": [
            8856,
            8889,
            true
          ],
          "54": [
            9268,
            9298,
            true
          ],
          "55": [
            9871,
            9913,
            false
          ]
        },
        "LockContract.new_Investor": {
          "47": [
            11454,
            11508,
            true
          ],
          "48": [
            11603,
            11661,
            true
          ],
          "49": [
            11866,
            11876,
            false
          ]
        },
        "LockContract.release": {
          "46": [
            7580,
            7629,
            true
          ]
        },
        "LockContract.view_can_release_percent": {
          "50": [
            13089,
            13122,
            true
          ],
          "51": [
            13502,
            13532,
            true
          ],
          "52": [
            14109,
            14151,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "27": [
            2378,
            2395
          ],
          "28": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "17": [
            1998,
            2071
          ],
          "18": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "38": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "37": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "39": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "40": [
            5137,
            5218
          ],
          "42": [
            5228,
            5288
          ],
          "43": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "41": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "44": [
            7758,
            7775
          ],
          "45": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "5": {
        "LockContract.can_release_percent": {
          "29": [
            8848,
            8922
          ],
          "30": [
            9260,
            9331
          ],
          "31": [
            10076,
            10120
          ],
          "32": [
            10249,
            10401
          ],
          "33": [
            10685,
            10750
          ],
          "34": [
            10785,
            10937
          ],
          "35": [
            10956,
            10961
          ],
          "36": [
            9761,
            9764
          ]
        },
        "LockContract.contract_balance": {
          "2": [
            15564,
            15608
          ]
        },
        "LockContract.get_initLock": {
          "1": [
            15683,
            15698
          ]
        },
        "LockContract.new_Investor": {
          "9": [
            11446,
            11584
          ],
          "10": [
            11595,
            11723
          ],
          "11": [
            11781,
            11852
          ],
          "12": [
            11891,
            11932
          ],
          "13": [
            11946,
            11971
          ],
          "14": [
            12000,
            12022
          ],
          "15": [
            12036,
            12062
          ],
          "16": [
            12490,
            12537
          ]
        },
        "LockContract.release": {
          "5": [
            7926,
            7953
          ],
          "6": [
            7963,
            8007
          ],
          "7": [
            8017,
            8085
          ],
          "8": [
            8095,
            8153
          ]
        },
        "LockContract.view_can_release_percent": {
          "19": [
            13081,
            13155
          ],
          "20": [
            13494,
            13565
          ],
          "21": [
            14314,
            14358
          ],
          "22": [
            14487,
            14639
          ],
          "23": [
            14923,
            14988
          ],
          "24": [
            15023,
            15175
          ],
          "25": [
            15194,
            15199
          ],
          "26": [
            13999,
            14002
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806392347b5e1161006657806392347b5e146100fd578063d41d826a1461017b578063df1299791461018e578063f2fde38b146101a1578063f5cd7277146101b457600080fd5b8063057440d3146100a3578063715018a6146100be57806386d1a69f146100c85780638da5cb5b146100d0578063910d25ba146100f5575b600080fd5b6100ab6101bc565b6040519081526020015b60405180910390f35b6100c661022e565b005b6100c6610299565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b6009546100ab565b61014761010b366004610fe1565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100b5565b6100c661018936600461100a565b6103ff565b6001546100dd906001600160a01b031681565b6100c66101af366004610fe1565b61073a565b6100ab610805565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610229919061104a565b905090565b6000546001600160a01b0316331461028d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102976000610a5d565b565b601054600160a01b900460ff16156102e45760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610284565b6010805460ff60a01b1916600160a01b17905533600090815260026020819052604082200154900361034a5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030b71034b73b32b9ba37b960891b6044820152606401610284565b60006103563342610aad565b905080600a600082825461036a9190611079565b90915550506010546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26010546103c8906001600160a01b03163383610d19565b33600090815260026020526040812060010180548392906103ea908490611079565b90915550506010805460ff60a01b1916905550565b6001546040516370a0823160e01b81526001600160a01b038481166004830152859216906370a0823190602401602060405180830381865afa158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d919061104a565b10156104e15760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610284565b6001600160a01b03821660009081526002602081905260409091200154156105645760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610284565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611091565b508015610665576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018390556106a3565b6005805460019081019091556007805491820181556000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018390555b506040805160a0810182526001600160a01b03928316808252600060208084018281528486019788524267ffffffffffffffff166060860190815260016080870181815295855260029384905296909320945185546001600160a01b031916971696909617845594519383019390935593519281019290925551600382015590516004909101805460ff1916911515919091179055565b6000546001600160a01b031633146107945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b6001600160a01b0381166107f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610284565b61080281610a5d565b50565b3360009081526002602081905260408220600181015491015480821061086d5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b3360009081526002602052604090206003015442908082116108d15760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610284565b60008060015b6008548111610a44576108ed8162278d006110ae565b6108f79085611079565b851115610999576109096001826110cd565b6109169062278d006110ae565b6109238262278d006110ae565b61092d91906110cd565b91508162278d0061271060086109446001866110cd565b81548110610954576109546110e4565b90600052602060002001548961096a91906110ae565b61097491906110fa565b61097e91906110fa565b61098891906110ae565b6109929084611079565b9250610a32565b836109a56001836110cd565b6109b29062278d006110ae565b6109bc90876110cd565b6109c691906110cd565b91508162278d0061271060086109dd6001866110cd565b815481106109ed576109ed6110e4565b906000526020600020015489610a0391906110ae565b610a0d91906110fa565b610a1791906110fa565b610a2191906110ae565b610a2b9084611079565b9250610a44565b80610a3c8161111c565b9150506108d7565b506000610a5187846110cd565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216600090815260026020819052604082206001810154910154808210610b1e5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b6001600160a01b0385166000908152600260205260409020600301548490808211610b8b5760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610284565b60008060015b6008548111610cfe57610ba78162278d006110ae565b610bb19085611079565b851115610c5357610bc36001826110cd565b610bd09062278d006110ae565b610bdd8262278d006110ae565b610be791906110cd565b91508162278d006127106008610bfe6001866110cd565b81548110610c0e57610c0e6110e4565b906000526020600020015489610c2491906110ae565b610c2e91906110fa565b610c3891906110fa565b610c4291906110ae565b610c4c9084611079565b9250610cec565b83610c5f6001836110cd565b610c6c9062278d006110ae565b610c7690876110cd565b610c8091906110cd565b91508162278d006127106008610c976001866110cd565b81548110610ca757610ca76110e4565b906000526020600020015489610cbd91906110ae565b610cc791906110fa565b610cd191906110fa565b610cdb91906110ae565b610ce59084611079565b9250610cfe565b80610cf68161111c565b915050610b91565b506000610d0b87846110cd565b9a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d6b908490610d70565b505050565b6000610dc5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e429092919063ffffffff16565b805190915015610d6b5780806020019051810190610de39190611091565b610d6b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610284565b6060610e518484600085610e5b565b90505b9392505050565b606082471015610ebc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610284565b6001600160a01b0385163b610f135760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b600080866001600160a01b03168587604051610f2f9190611165565b60006040518083038185875af1925050503d8060008114610f6c576040519150601f19603f3d011682016040523d82523d6000602084013e610f71565b606091505b5091509150610f81828286610f8c565b979650505050505050565b60608315610f9b575081610e54565b825115610fab5782518084602001fd5b8160405162461bcd60e51b81526004016102849190611181565b80356001600160a01b0381168114610fdc57600080fd5b919050565b600060208284031215610ff357600080fd5b610e5482610fc5565b801515811461080257600080fd5b60008060006060848603121561101f57600080fd5b8335925061102f60208501610fc5565b9150604084013561103f81610ffc565b809150509250925092565b60006020828403121561105c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561108c5761108c611063565b500190565b6000602082840312156110a357600080fd5b8151610e5481610ffc565b60008160001904831182151516156110c8576110c8611063565b500290565b6000828210156110df576110df611063565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261111757634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161112e5761112e611063565b5060010190565b60005b83811015611150578181015183820152602001611138565b8381111561115f576000848401525b50505050565b60008251611177818460208701611135565b9190910192915050565b60208152600082518060208401526111a0816040850160208701611135565b601f01601f1916919091016040019291505056fea2646970667358221220390cd56eba671b63ebee1530f00c7ac0dea410a6723265c16169578ea886de8864736f6c634300080f0033",
  "deployedSourceMap": "792:14915:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15496:119;;;:::i;:::-;;;160:25:6;;;148:2;133:18;15496:119:5;;;;;;;;1668:101:0;;;:::i;:::-;;7766:394:5;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;360:32:6;;;342:51;;330:2;315:18;1036:85:0;196:203:6;15621:84:5;15690:8;;15621:84;;981:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;981:52:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;1044:32:6;;;1026:51;;1108:2;1093:18;;1086:34;;;;1136:18;;;1129:34;;;;1194:2;1179:18;;1172:34;1250:14;1243:22;1237:3;1222:19;;1215:51;1013:3;998:19;981:52:5;773:499:6;11241:1305:5;;;;;;:::i;:::-;;:::i;854:26::-;;;;;-1:-1:-1;;;;;854:26:5;;;1918:198:0;;;;;;:::i;:::-;;:::i;12658:2766:5:-;;;:::i;15496:119::-;15571:12;;:37;;-1:-1:-1;;;15571:37:5;;15602:4;15571:37;;;342:51:6;15545:7:5;;-1:-1:-1;;;;;15571:12:5;;:22;;315:18:6;;15571:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15564:44;;15496:119;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:6;1240:68:0;;;2384:21:6;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7766:394:5:-;7380:6;;-1:-1:-1;;;7380:6:5;;;;7379:7;7371:34;;;;-1:-1:-1;;;7371:34:5;;2763:2:6;7371:34:5;;;2745:21:6;2802:2;2782:18;;;2775:30;-1:-1:-1;;;2821:18:6;;;2814:44;2875:18;;7371:34:5;2561:338:6;7371:34:5;7415:6;:13;;-1:-1:-1;;;;7415:13:5;-1:-1:-1;;;7415:13:5;;;7597:10:::1;7415:13:::0;7580:28;;;:16:::1;:28;::::0;;;;;;:44:::1;::::0;:49;;7572:77:::1;;;::::0;-1:-1:-1;;;7572:77:5;;3106:2:6;7572:77:5::1;::::0;::::1;3088:21:6::0;3145:2;3125:18;;;3118:30;-1:-1:-1;;;3164:18:6;;;3157:45;3219:18;;7572:77:5::1;2904:339:6::0;7572:77:5::1;7838:18:::2;7859:57;7879:10;7899:15;7859:19;:57::i;:::-;7838:78;;7943:10;7926:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7982:12:5::2;::::0;7968:39:::2;::::0;160:25:6;;;-1:-1:-1;;;;;7982:12:5;;::::2;::::0;7968:39:::2;::::0;148:2:6;133:18;7968:39:5::2;;;;;;;8047:12;::::0;8017:68:::2;::::0;-1:-1:-1;;;;;8047:12:5::2;8062:10;8074::::0;8017:22:::2;:68::i;:::-;8112:10;8095:28;::::0;;;:16:::2;:28;::::0;;;;:44:::2;;:58:::0;;8143:10;;8095:28;:58:::2;::::0;8143:10;;8095:58:::2;:::i;:::-;::::0;;;-1:-1:-1;;7449:6:5;:14;;-1:-1:-1;;;;7449:14:5;;;-1:-1:-1;7766:394:5:o;11241:1305::-;11454:12;;:44;;-1:-1:-1;;;11454:44:5;;-1:-1:-1;;;;;360:32:6;;;11454:44:5;;;342:51:6;11501:7:5;;11454:12;;:22;;315:18:6;;11454:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;11446:138;;;;-1:-1:-1;;;11446:138:5;;3715:2:6;11446:138:5;;;3697:21:6;3754:2;3734:18;;;3727:30;3793:34;3773:18;;;3766:62;3864:32;3844:18;;;3837:60;3914:19;;11446:138:5;3513:426:6;11446:138:5;-1:-1:-1;;;;;11603:38:5;;;;;;:16;:38;;;;;;;;:54;;:58;11595:128;;;;-1:-1:-1;;;11595:128:5;;4146:2:6;11595:128:5;;;4128:21:6;4185:2;4165:18;;;4158:30;4224:34;4204:18;;;4197:62;-1:-1:-1;;;4275:18:6;;;4268:46;4331:19;;11595:128:5;3944:412:6;11595:128:5;11781:12;;:71;;-1:-1:-1;;;11781:71:5;;-1:-1:-1;;;;;4619:15:6;;;11781:71:5;;;4601:34:6;11837:4:5;4651:18:6;;;4644:43;4703:18;;;4696:34;;;11781:12:5;;;;:25;;4536:18:6;;11781:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11866:10;11863:210;;;11891:14;:41;;;;;;;;;;;;;-1:-1:-1;;;;;;11891:41:5;-1:-1:-1;;;;;11891:41:5;;;;;11946:11;:25;;;;;;;-1:-1:-1;11946:25:5;;;;;;11863:210;;;12000:15;:22;;;;;;;;;12036:12;:26;;;;;;;-1:-1:-1;12036:26:5;;;;;;11863:210;-1:-1:-1;12151:268:5;;;;;;;;-1:-1:-1;;;;;12151:268:5;;;;;;-1:-1:-1;12151:268:5;;;;;;;;;;;;;12348:15;12151:268;;;;;;;;12414:4;12151:268;;;;;;12490:38;;;:16;:38;;;;;;;;:47;;;;-1:-1:-1;;;;;;12490:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12490:47:5;;;;;;;;;;11241:1305::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:6;1240:68:0;;;2384:21:6;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;2200:356:6;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5193:2:6;1998:73:0::1;::::0;::::1;5175:21:6::0;5232:2;5212:18;;;5205:30;5271:34;5251:18;;;5244:62;-1:-1:-1;;;5322:18:6;;;5315:36;5368:19;;1998:73:0::1;4991:402:6::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;12658:2766:5:-;12842:10;12715:7;12825:28;;;:16;:28;;;;;;;:44;;;;12952;;;13089:33;;;13081:74;;;;-1:-1:-1;;;13081:74:5;;5600:2:6;13081:74:5;;;5582:21:6;5639:2;5619:18;;;5612:30;5678;5658:18;;;5651:58;5726:18;;13081:74:5;5398:352:6;13081:74:5;13361:10;13207:21;13344:28;;;:16;:28;;;;;:42;;;13231:15;;13502:30;;;13494:71;;;;-1:-1:-1;;;13494:71:5;;5957:2:6;13494:71:5;;;5939:21:6;5996:2;5976:18;;;5969:30;6035;6015:18;;;6008:58;6083:18;;13494:71:5;5755:352:6;13494:71:5;13648:20;;13962:1;13949:1275;13969:21;:28;13965:32;;13949:1275;;14141:9;14149:1;14141:7;:9;:::i;:::-;14126:24;;:14;:24;:::i;:::-;14109:13;:42;14106:1108;;;14354:3;14356:1;14354;:3;:::i;:::-;14345:13;;:7;:13;:::i;:::-;14334:9;14342:1;14334:7;:9;:::i;:::-;:24;;;;:::i;:::-;14314:44;-1:-1:-1;14314:44:5;14611:7;14605:5;14578:21;14600:3;14602:1;14600;:3;:::i;:::-;14578:26;;;;;;;;:::i;:::-;;;;;;;;;14538:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;14502:137;;:12;:137;:::i;:::-;14487:152;;14106:1108;;;14974:14;14969:3;14971:1;14969;:3;:::i;:::-;14960:13;;:7;:13;:::i;:::-;14944:29;;:13;:29;:::i;:::-;:44;;;;:::i;:::-;14923:65;-1:-1:-1;14923:65:5;15147:7;15141:5;15114:21;15136:3;15138:1;15136;:3;:::i;:::-;15114:26;;;;;;;;:::i;:::-;;;;;;;;;15074:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;15038:137;;:12;:137;:::i;:::-;15023:152;;15194:5;;14106:1108;13999:3;;;;:::i;:::-;;;;13949:1275;;;-1:-1:-1;15307:24:5;15334:29;15349:14;15334:12;:29;:::i;:::-;15307:56;12658:2766;-1:-1:-1;;;;;;;;12658:2766:5:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;8375:2811:5:-;-1:-1:-1;;;;;8584:32:5;;8474:7;8584:32;;;:16;:32;;;;;;;:48;;;;8715;;;8856:33;;;8848:74;;;;-1:-1:-1;;;8848:74:5;;5600:2:6;8848:74:5;;;5582:21:6;5639:2;5619:18;;;5612:30;5678;5658:18;;;5651:58;5726:18;;8848:74:5;5398:352:6;8848:74:5;-1:-1:-1;;;;;9106:32:5;;8974:21;9106:32;;;:16;:32;;;;;:46;;;8998:10;;9268:30;;;9260:71;;;;-1:-1:-1;;;9260:71:5;;5957:2:6;9260:71:5;;;5939:21:6;5996:2;5976:18;;;5969:30;6035;6015:18;;;6008:58;6083:18;;9260:71:5;5755:352:6;9260:71:5;9414:20;;9724:1;9711:1275;9731:21;:28;9727:32;;9711:1275;;9903:9;9911:1;9903:7;:9;:::i;:::-;9888:24;;:14;:24;:::i;:::-;9871:13;:42;9868:1108;;;10116:3;10118:1;10116;:3;:::i;:::-;10107:13;;:7;:13;:::i;:::-;10096:9;10104:1;10096:7;:9;:::i;:::-;:24;;;;:::i;:::-;10076:44;-1:-1:-1;10076:44:5;10373:7;10367:5;10340:21;10362:3;10364:1;10362;:3;:::i;:::-;10340:26;;;;;;;;:::i;:::-;;;;;;;;;10300:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;10264:137;;:12;:137;:::i;:::-;10249:152;;9868:1108;;;10736:14;10731:3;10733:1;10731;:3;:::i;:::-;10722:13;;:7;:13;:::i;:::-;10706:29;;:13;:29;:::i;:::-;:44;;;;:::i;:::-;10685:65;-1:-1:-1;10685:65:5;10909:7;10903:5;10876:21;10898:3;10900:1;10898;:3;:::i;:::-;10876:26;;;;;;;;:::i;:::-;;;;;;;;;10836:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;10800:137;;:12;:137;:::i;:::-;10785:152;;10956:5;;9868:1108;9761:3;;;;:::i;:::-;;;;9711:1275;;;-1:-1:-1;11069:24:5;11096:29;11111:14;11096:12;:29;:::i;:::-;11069:56;8375:2811;-1:-1:-1;;;;;;;;;;8375:2811:5:o;701:205:2:-;840:58;;;-1:-1:-1;;;;;7101:32:6;;840:58:2;;;7083:51:6;7150:18;;;;7143:34;;;840:58:2;;;;;;;;;;7056:18:6;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;7390:2:6;3811:85:2;;;7372:21:6;7429:2;7409:18;;;7402:30;7468:34;7448:18;;;7441:62;-1:-1:-1;;;7519:18:6;;;7512:40;7569:19;;3811:85:2;7188:406:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;7801:2:6;5137:81:3;;;7783:21:6;7840:2;7820:18;;;7813:30;7879:34;7859:18;;;7852:62;-1:-1:-1;;;7930:18:6;;;7923:36;7976:19;;5137:81:3;7599:402:6;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;8208:2:6;5228:60:3;;;8190:21:6;8247:2;8227:18;;;8220:30;8286:31;8266:18;;;8259:59;8335:18;;5228:60:3;8006:353:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;404:173:6:-;472:20;;-1:-1:-1;;;;;521:31:6;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;1277:118::-;1363:5;1356:13;1349:21;1342:5;1339:32;1329:60;;1385:1;1382;1375:12;1400:383;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1595:9;1582:23;1572:33;;1624:38;1658:2;1647:9;1643:18;1624:38;:::i;:::-;1614:48;;1712:2;1701:9;1697:18;1684:32;1725:28;1747:5;1725:28;:::i;:::-;1772:5;1762:15;;;1400:383;;;;;:::o;2011:184::-;2081:6;2134:2;2122:9;2113:7;2109:23;2105:32;2102:52;;;2150:1;2147;2140:12;2102:52;-1:-1:-1;2173:16:6;;2011:184;-1:-1:-1;2011:184:6:o;3248:127::-;3309:10;3304:3;3300:20;3297:1;3290:31;3340:4;3337:1;3330:15;3364:4;3361:1;3354:15;3380:128;3420:3;3451:1;3447:6;3444:1;3441:13;3438:39;;;3457:18;;:::i;:::-;-1:-1:-1;3493:9:6;;3380:128::o;4741:245::-;4808:6;4861:2;4849:9;4840:7;4836:23;4832:32;4829:52;;;4877:1;4874;4867:12;4829:52;4909:9;4903:16;4928:28;4950:5;4928:28;:::i;6112:168::-;6152:7;6218:1;6214;6210:6;6206:14;6203:1;6200:21;6195:1;6188:9;6181:17;6177:45;6174:71;;;6225:18;;:::i;:::-;-1:-1:-1;6265:9:6;;6112:168::o;6285:125::-;6325:4;6353:1;6350;6347:8;6344:34;;;6358:18;;:::i;:::-;-1:-1:-1;6395:9:6;;6285:125::o;6415:127::-;6476:10;6471:3;6467:20;6464:1;6457:31;6507:4;6504:1;6497:15;6531:4;6528:1;6521:15;6547:217;6587:1;6613;6603:132;;6657:10;6652:3;6648:20;6645:1;6638:31;6692:4;6689:1;6682:15;6720:4;6717:1;6710:15;6603:132;-1:-1:-1;6749:9:6;;6547:217::o;6769:135::-;6808:3;6829:17;;;6826:43;;6849:18;;:::i;:::-;-1:-1:-1;6896:1:6;6885:13;;6769:135::o;8364:258::-;8436:1;8446:113;8460:6;8457:1;8454:13;8446:113;;;8536:11;;;8530:18;8517:11;;;8510:39;8482:2;8475:10;8446:113;;;8577:6;8574:1;8571:13;8568:48;;;8612:1;8603:6;8598:3;8594:16;8587:27;8568:48;;8364:258;;;:::o;8627:274::-;8756:3;8794:6;8788:13;8810:53;8856:6;8851:3;8844:4;8836:6;8832:17;8810:53;:::i;:::-;8879:16;;;;;8627:274;-1:-1:-1;;8627:274:6:o;8906:383::-;9055:2;9044:9;9037:21;9018:4;9087:6;9081:13;9130:6;9125:2;9114:9;9110:18;9103:34;9146:66;9205:6;9200:2;9189:9;9185:18;9180:2;9172:6;9168:15;9146:66;:::i;:::-;9273:2;9252:15;-1:-1:-1;;9248:29:6;9233:45;;;;9280:2;9229:54;;8906:383;-1:-1:-1;;8906:383:6:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "contract_balance()": {
        "details": "View function to get contract balance"
      },
      "new_Investor(uint256,address,bool)": {
        "details": "Adds a new Investor."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release()": {
        "details": "Release the tokens  Emits a {ERC20Released} event."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "view_can_release_percent()": {
        "details": "View function that an investor can use to see how many tokens he can withdraw"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    792,
    15707
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92347B5E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x92347B5E EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xD41D826A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xDF129979 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF5CD7277 EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57440D3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x910D25BA EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xAB JUMP JUMPDEST PUSH2 0x147 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xDD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0xAB PUSH2 0x805 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x297 PUSH1 0x0 PUSH2 0xA5D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F2072652D656E7472616E6379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SUB PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030B71034B73B32B9BA37B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x356 CALLER TIMESTAMP PUSH2 0xAAD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1079 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x10 SLOAD PUSH2 0x3C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xD19 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3EA SWAP1 DUP5 SWAP1 PUSH2 0x1079 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E7320666F722074686520707269636520726571756972656D656E742E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320616C726561647920696E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B9BA34B7339031B7B73A3930B1BA17 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP4 SWAP1 SSTORE PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP4 SWAP1 SSTORE JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD SWAP8 DUP9 MSTORE TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE SWAP6 DUP6 MSTORE PUSH1 0x2 SWAP4 DUP5 SWAP1 MSTORE SWAP7 SWAP1 SWAP4 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP5 SSTORE SWAP5 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP4 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0xA5D JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP1 DUP3 LT PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP SWAP1 DUP1 DUP3 GT PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xA44 JUMPI PUSH2 0x8ED DUP2 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x8F7 SWAP1 DUP6 PUSH2 0x1079 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x999 JUMPI PUSH2 0x909 PUSH1 0x1 DUP3 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x916 SWAP1 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x923 DUP3 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x92D SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x944 PUSH1 0x1 DUP7 PUSH2 0x10CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x954 JUMPI PUSH2 0x954 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0x96A SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x97E SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x988 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x992 SWAP1 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 POP PUSH2 0xA32 JUMP JUMPDEST DUP4 PUSH2 0x9A5 PUSH1 0x1 DUP4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x9B2 SWAP1 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x9BC SWAP1 DUP8 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x9DD PUSH1 0x1 DUP7 PUSH2 0x10CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9ED JUMPI PUSH2 0x9ED PUSH2 0x10E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xA17 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xA2B SWAP1 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 POP PUSH2 0xA44 JUMP JUMPDEST DUP1 PUSH2 0xA3C DUP2 PUSH2 0x111C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA51 DUP8 DUP5 PUSH2 0x10CD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP1 DUP3 LT PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 SWAP1 DUP1 DUP3 GT PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xCFE JUMPI PUSH2 0xBA7 DUP2 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xBB1 SWAP1 DUP6 PUSH2 0x1079 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xBC3 PUSH1 0x1 DUP3 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xBD0 SWAP1 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xBDD DUP3 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xBE7 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xBFE PUSH1 0x1 DUP7 PUSH2 0x10CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC0E JUMPI PUSH2 0xC0E PUSH2 0x10E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xC2E SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xC4C SWAP1 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 POP PUSH2 0xCEC JUMP JUMPDEST DUP4 PUSH2 0xC5F PUSH1 0x1 DUP4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xC6C SWAP1 PUSH3 0x278D00 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xC76 SWAP1 DUP8 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xC97 PUSH1 0x1 DUP7 PUSH2 0x10CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xCA7 JUMPI PUSH2 0xCA7 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xCC7 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xCD1 SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0xCE5 SWAP1 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 POP PUSH2 0xCFE JUMP JUMPDEST DUP1 PUSH2 0xCF6 DUP2 PUSH2 0x111C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xD0B DUP8 DUP5 PUSH2 0x10CD JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD6B SWAP1 DUP5 SWAP1 PUSH2 0xD70 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE42 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD6B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x1091 JUMP JUMPDEST PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE51 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE5B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xF13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xF81 DUP3 DUP3 DUP7 PUSH2 0xF8C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF9B JUMPI POP DUP2 PUSH2 0xE54 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFAB JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE54 DUP3 PUSH2 0xFC5 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x102F PUSH1 0x20 DUP6 ADD PUSH2 0xFC5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x103F DUP2 PUSH2 0xFFC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x108C JUMPI PUSH2 0x108C PUSH2 0x1063 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE54 DUP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x1063 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10DF JUMPI PUSH2 0x10DF PUSH2 0x1063 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x112E JUMPI PUSH2 0x112E PUSH2 0x1063 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1150 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1138 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1177 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1135 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11A0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1135 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC 0xD5 PUSH15 0xBA671B63EBEE1530F00C7AC0DEA410 0xA6 PUSH19 0x3265C16169578EA886DE8864736F6C63430008 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x92347B5E"
    },
    "38": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x92347B5E"
    },
    "49": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD"
    },
    "53": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD41D826A"
    },
    "60": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17B"
    },
    "64": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDF129979"
    },
    "71": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E"
    },
    "75": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A1"
    },
    "86": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF5CD7277"
    },
    "93": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4"
    },
    "97": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "REVERT",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x57440D3"
    },
    "109": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE"
    },
    "124": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x86D1A69F"
    },
    "131": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC8"
    },
    "135": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0"
    },
    "146": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x910D25BA"
    },
    "153": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5"
    },
    "157": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        792,
        15707
      ],
      "op": "REVERT",
      "path": "5"
    },
    "163": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "164": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "167": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BC"
    },
    "170": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMP",
      "path": "5"
    },
    "171": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "172": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "174": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "175": {
      "op": "SWAP1"
    },
    "176": {
      "op": "DUP2"
    },
    "177": {
      "op": "MSTORE"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "180": {
      "op": "ADD"
    },
    "181": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "182": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "184": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "185": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "187": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "SUB",
      "path": "5"
    },
    "188": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "189": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "RETURN",
      "path": "5"
    },
    "190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22E"
    },
    "197": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "200": {
      "fn": "LockContract.release",
      "offset": [
        7766,
        8160
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "201": {
      "fn": "LockContract.release",
      "offset": [
        7766,
        8160
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6"
    },
    "204": {
      "fn": "LockContract.release",
      "offset": [
        7766,
        8160
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "207": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        7766,
        8160
      ],
      "op": "JUMP",
      "path": "5"
    },
    "208": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "221": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "224": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "SUB"
    },
    "233": {
      "op": "SWAP1"
    },
    "234": {
      "op": "SWAP2"
    },
    "235": {
      "op": "AND"
    },
    "236": {
      "op": "DUP2"
    },
    "237": {
      "op": "MSTORE"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "240": {
      "op": "ADD"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "244": {
      "op": "JUMP"
    },
    "245": {
      "fn": "LockContract.get_initLock",
      "offset": [
        15621,
        15705
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "246": {
      "fn": "LockContract.get_initLock",
      "offset": [
        15690,
        15698
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x9"
    },
    "248": {
      "fn": "LockContract.get_initLock",
      "offset": [
        15690,
        15698
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "249": {
      "fn": "LockContract.get_initLock",
      "offset": [
        15621,
        15705
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "252": {
      "fn": "LockContract.get_initLock",
      "offset": [
        15621,
        15705
      ],
      "op": "JUMP",
      "path": "5"
    },
    "253": {
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "254": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x147"
    },
    "257": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B"
    },
    "260": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "261": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "263": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFE1"
    },
    "266": {
      "fn": "LockContract.get_initLock",
      "jump": "i",
      "offset": [
        981,
        1033
      ],
      "op": "JUMP",
      "path": "5"
    },
    "267": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "268": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "270": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "272": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP2",
      "path": "5"
    },
    "273": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "274": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "275": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "277": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "278": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "279": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "280": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "282": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "283": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "284": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "285": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP1",
      "path": "5"
    },
    "286": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "287": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "289": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "290": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "291": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "292": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "293": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "294": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "295": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "296": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "298": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP4",
      "path": "5"
    },
    "299": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "300": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "301": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "303": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "304": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "305": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "306": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "SUB"
    },
    "315": {
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "316": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "317": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "AND",
      "path": "5"
    },
    "318": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "319": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "320": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "321": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "322": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "324": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "AND",
      "path": "5"
    },
    "325": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP6",
      "path": "5"
    },
    "326": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMP",
      "path": "5"
    },
    "327": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "328": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "330": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP1",
      "path": "5"
    },
    "331": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "SWAP7"
    },
    "342": {
      "op": "AND"
    },
    "343": {
      "op": "DUP7"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "347": {
      "op": "DUP7"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "op": "SWAP5"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "SWAP5"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "SWAP3"
    },
    "354": {
      "op": "DUP5"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "SWAP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "362": {
      "op": "DUP4"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "ISZERO"
    },
    "366": {
      "op": "ISZERO"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "369": {
      "op": "DUP3"
    },
    "370": {
      "op": "ADD"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6"
    },
    "383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x189"
    },
    "386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "389": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100A"
    },
    "392": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMP",
      "path": "5"
    },
    "393": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "394": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FF"
    },
    "397": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMP",
      "path": "5"
    },
    "398": {
      "offset": [
        854,
        880
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "399": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "401": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "402": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD"
    },
    "405": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "offset": [
        854,
        880
      ],
      "op": "AND",
      "path": "5"
    },
    "415": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "416": {
      "fn": "LockContract.new_Investor",
      "offset": [
        854,
        880
      ],
      "op": "JUMP",
      "path": "5"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE1"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73A"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12658,
        15424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "437": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12658,
        15424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12658,
        15424
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x805"
    },
    "443": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12658,
        15424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "444": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "445": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15583
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x1"
    },
    "447": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "448": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "450": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "451": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP2",
      "path": "5"
    },
    "460": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "461": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15602,
        15606
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "462": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "464": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP3",
      "path": "5"
    },
    "465": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ADD",
      "path": "5"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15545,
        15552
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "469": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15545,
        15552
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15583
      ],
      "op": "AND",
      "path": "5"
    },
    "479": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "480": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15593
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "485": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "491": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "493": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "494": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP1",
      "path": "5"
    },
    "495": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP4",
      "path": "5"
    },
    "496": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "SUB",
      "path": "5"
    },
    "497": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP2",
      "path": "5"
    },
    "498": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP7",
      "path": "5"
    },
    "499": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "GAS",
      "path": "5"
    },
    "500": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "501": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "502": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP1",
      "path": "5"
    },
    "503": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "504": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x205"
    },
    "507": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "508": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "509": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "511": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP1",
      "path": "5"
    },
    "512": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "513": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "514": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "516": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "REVERT",
      "path": "5"
    },
    "517": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "518": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "519": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "520": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "521": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "522": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "524": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "525": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "526": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "528": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "NOT",
      "path": "5"
    },
    "529": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "531": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP3",
      "path": "5"
    },
    "532": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ADD",
      "path": "5"
    },
    "533": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "AND",
      "path": "5"
    },
    "534": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP3",
      "path": "5"
    },
    "535": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ADD",
      "path": "5"
    },
    "536": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP1",
      "path": "5"
    },
    "537": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "539": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "540": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "541": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "DUP2",
      "path": "5"
    },
    "542": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "ADD",
      "path": "5"
    },
    "543": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "544": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x229"
    },
    "547": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "548": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "549": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104A"
    },
    "552": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        15571,
        15608
      ],
      "op": "JUMP",
      "path": "5"
    },
    "553": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15571,
        15608
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "554": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15564,
        15608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "555": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15564,
        15608
      ],
      "op": "POP",
      "path": "5"
    },
    "556": {
      "fn": "LockContract.contract_balance",
      "offset": [
        15496,
        15615
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "557": {
      "fn": "LockContract.contract_balance",
      "jump": "o",
      "offset": [
        15496,
        15615
      ],
      "op": "JUMP",
      "path": "5"
    },
    "558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "559": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "op": "SUB"
    },
    "570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "571": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 3
    },
    "572": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "573": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "576": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "591": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "595": {
      "op": "DUP2"
    },
    "596": {
      "op": "SWAP1"
    },
    "597": {
      "op": "MSTORE"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "638": {
      "op": "DUP3"
    },
    "639": {
      "op": "ADD"
    },
    "640": {
      "op": "MSTORE"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x297"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5D"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "665": {
      "fn": "LockContract.release",
      "offset": [
        7766,
        8160
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "666": {
      "offset": [
        7380,
        7386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "668": {
      "fn": "LockContract.release",
      "offset": [
        7380,
        7386
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "offset": [
        7380,
        7386
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "675": {
      "fn": "LockContract.release",
      "offset": [
        7380,
        7386
      ],
      "op": "DIV",
      "path": "5"
    },
    "676": {
      "fn": "LockContract.release",
      "offset": [
        7380,
        7386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "678": {
      "fn": "LockContract.release",
      "offset": [
        7380,
        7386
      ],
      "op": "AND",
      "path": "5"
    },
    "679": {
      "offset": [
        7379,
        7386
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "680": {
      "offset": [
        7371,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "683": {
      "offset": [
        7371,
        7405
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "684": {
      "fn": "LockContract.release",
      "offset": [
        7371,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "686": {
      "fn": "LockContract.release",
      "offset": [
        7371,
        7405
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "offset": [
        7371,
        7405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "695": {
      "fn": "LockContract.release",
      "offset": [
        7371,
        7405
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "offset": [
        7371,
        7405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "700": {
      "fn": "LockContract.release",
      "offset": [
        7371,
        7405
      ],
      "op": "DUP3",
      "path": "5"
    },
    "701": {
      "fn": "LockContract.release",
      "offset": [
        7371,
        7405
      ],
      "op": "ADD",
      "path": "5"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH14",
      "value": "0x4E6F2072652D656E7472616E6379"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "730": {
      "op": "DUP3"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "MSTORE"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "offset": [
        7371,
        7405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "739": {
      "op": "JUMP"
    },
    "740": {
      "offset": [
        7371,
        7405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "741": {
      "offset": [
        7415,
        7421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "743": {
      "offset": [
        7415,
        7428
      ],
      "op": "DUP1",
      "path": "5"
    },
    "744": {
      "fn": "LockContract.release",
      "offset": [
        7415,
        7428
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "NOT"
    },
    "751": {
      "offset": [
        7415,
        7428
      ],
      "op": "AND",
      "path": "5"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "offset": [
        7415,
        7428
      ],
      "op": "OR",
      "path": "5"
    },
    "758": {
      "fn": "LockContract.release",
      "offset": [
        7415,
        7428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "759": {
      "fn": "LockContract.release",
      "offset": [
        7415,
        7428
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "760": {
      "offset": [
        7597,
        7607
      ],
      "op": "CALLER",
      "path": "5"
    },
    "761": {
      "offset": [
        7415,
        7428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "763": {
      "offset": [
        7580,
        7608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "764": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "DUP2",
      "path": "5"
    },
    "765": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "766": {
      "offset": [
        7580,
        7596
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "768": {
      "offset": [
        7580,
        7608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "770": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "DUP2",
      "path": "5"
    },
    "771": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "772": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "773": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "775": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "DUP3",
      "path": "5"
    },
    "776": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7608
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "777": {
      "offset": [
        7580,
        7624
      ],
      "op": "ADD",
      "path": "5"
    },
    "778": {
      "fn": "LockContract.release",
      "offset": [
        7580,
        7624
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "779": {
      "offset": [
        7580,
        7629
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "780": {
      "branch": 46,
      "fn": "LockContract.release",
      "offset": [
        7580,
        7629
      ],
      "op": "SUB",
      "path": "5"
    },
    "781": {
      "offset": [
        7572,
        7649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34A"
    },
    "784": {
      "branch": 46,
      "offset": [
        7572,
        7649
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "785": {
      "fn": "LockContract.release",
      "offset": [
        7572,
        7649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "787": {
      "fn": "LockContract.release",
      "offset": [
        7572,
        7649
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "offset": [
        7572,
        7649
      ],
      "op": "DUP2",
      "path": "5"
    },
    "796": {
      "fn": "LockContract.release",
      "offset": [
        7572,
        7649
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "799": {
      "offset": [
        7572,
        7649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "801": {
      "fn": "LockContract.release",
      "offset": [
        7572,
        7649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "802": {
      "fn": "LockContract.release",
      "offset": [
        7572,
        7649
      ],
      "op": "ADD",
      "path": "5"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "808": {
      "op": "DUP3"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH15",
      "value": "0x2737BA1030B71034B73B32B9BA37B9"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "offset": [
        7572,
        7649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "841": {
      "op": "JUMP"
    },
    "842": {
      "offset": [
        7572,
        7649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "843": {
      "fn": "LockContract.release",
      "offset": [
        7838,
        7856
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "845": {
      "fn": "LockContract.release",
      "offset": [
        7859,
        7916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x356"
    },
    "848": {
      "fn": "LockContract.release",
      "offset": [
        7879,
        7889
      ],
      "op": "CALLER",
      "path": "5"
    },
    "849": {
      "fn": "LockContract.release",
      "offset": [
        7899,
        7914
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "850": {
      "fn": "LockContract.release",
      "offset": [
        7859,
        7878
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAD"
    },
    "853": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        7859,
        7916
      ],
      "op": "JUMP",
      "path": "5"
    },
    "854": {
      "fn": "LockContract.release",
      "offset": [
        7859,
        7916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "855": {
      "fn": "LockContract.release",
      "offset": [
        7838,
        7916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "856": {
      "fn": "LockContract.release",
      "offset": [
        7838,
        7916
      ],
      "op": "POP",
      "path": "5"
    },
    "857": {
      "fn": "LockContract.release",
      "offset": [
        7943,
        7953
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 5
    },
    "858": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "860": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "862": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "863": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "DUP3",
      "path": "5"
    },
    "864": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "865": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36A"
    },
    "868": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "869": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "870": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "873": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        7926,
        7953
      ],
      "op": "JUMP",
      "path": "5"
    },
    "874": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "875": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "876": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "877": {
      "fn": "LockContract.release",
      "offset": [
        7926,
        7953
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x10"
    },
    "882": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "883": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "885": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "DUP2"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "898": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "899": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "AND",
      "path": "5"
    },
    "900": {
      "fn": "LockContract.release",
      "offset": [
        7982,
        7994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "901": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "934": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "940": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "941": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "DUP1",
      "path": "5"
    },
    "942": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "943": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "SUB",
      "path": "5"
    },
    "944": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "945": {
      "fn": "LockContract.release",
      "offset": [
        7968,
        8007
      ],
      "op": "LOG2",
      "path": "5"
    },
    "946": {
      "fn": "LockContract.release",
      "offset": [
        8047,
        8059
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x10"
    },
    "948": {
      "fn": "LockContract.release",
      "offset": [
        8047,
        8059
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "949": {
      "fn": "LockContract.release",
      "offset": [
        8017,
        8085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C8"
    },
    "952": {
      "fn": "LockContract.release",
      "offset": [
        8017,
        8085
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "fn": "LockContract.release",
      "offset": [
        8047,
        8059
      ],
      "op": "AND",
      "path": "5"
    },
    "962": {
      "fn": "LockContract.release",
      "offset": [
        8062,
        8072
      ],
      "op": "CALLER",
      "path": "5"
    },
    "963": {
      "fn": "LockContract.release",
      "offset": [
        8074,
        8084
      ],
      "op": "DUP4",
      "path": "5"
    },
    "964": {
      "fn": "LockContract.release",
      "offset": [
        8017,
        8039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD19"
    },
    "967": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8017,
        8085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "968": {
      "fn": "LockContract.release",
      "offset": [
        8017,
        8085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "969": {
      "fn": "LockContract.release",
      "offset": [
        8112,
        8122
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 8
    },
    "970": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "972": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "973": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "DUP2",
      "path": "5"
    },
    "974": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "975": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8111
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "977": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "979": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "980": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "982": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "DUP2",
      "path": "5"
    },
    "983": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "984": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "986": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8139
      ],
      "op": "ADD",
      "path": "5"
    },
    "987": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "DUP1",
      "path": "5"
    },
    "988": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "989": {
      "fn": "LockContract.release",
      "offset": [
        8143,
        8153
      ],
      "op": "DUP4",
      "path": "5"
    },
    "990": {
      "fn": "LockContract.release",
      "offset": [
        8143,
        8153
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "991": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8123
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "992": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EA"
    },
    "995": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "996": {
      "fn": "LockContract.release",
      "offset": [
        8143,
        8153
      ],
      "op": "DUP5",
      "path": "5"
    },
    "997": {
      "fn": "LockContract.release",
      "offset": [
        8143,
        8153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "998": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "1001": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8095,
        8153
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1002": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1003": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1004": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1005": {
      "fn": "LockContract.release",
      "offset": [
        8095,
        8153
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "offset": [
        7449,
        7455
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "1010": {
      "offset": [
        7449,
        7463
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1011": {
      "fn": "LockContract.release",
      "offset": [
        7449,
        7463
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "NOT"
    },
    "1018": {
      "offset": [
        7449,
        7463
      ],
      "op": "AND",
      "path": "5"
    },
    "1019": {
      "fn": "LockContract.release",
      "offset": [
        7449,
        7463
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1020": {
      "fn": "LockContract.release",
      "offset": [
        7449,
        7463
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        7766,
        8160
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1023": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1024": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11466
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x1"
    },
    "1026": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11466
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1027": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1029": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1030": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1039": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "op": "DUP5"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "AND"
    },
    "1051": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1053": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1054": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ADD",
      "path": "5"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11501,
        11508
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1057": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11501,
        11508
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1058": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11466
      ],
      "op": "AND",
      "path": "5"
    },
    "1059": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11466
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1060": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11476
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "1065": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11476
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1071": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1073": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1074": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1075": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1076": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "SUB",
      "path": "5"
    },
    "1077": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1078": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1079": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "GAS",
      "path": "5"
    },
    "1080": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "1081": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1082": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1083": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1084": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x449"
    },
    "1087": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1088": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1089": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1091": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1092": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1093": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1094": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1096": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1097": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1098": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "POP",
      "path": "5"
    },
    "1099": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "POP",
      "path": "5"
    },
    "1100": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "POP",
      "path": "5"
    },
    "1101": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "POP",
      "path": "5"
    },
    "1102": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1104": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1105": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1106": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1108": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "NOT",
      "path": "5"
    },
    "1109": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1111": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1112": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ADD",
      "path": "5"
    },
    "1113": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "AND",
      "path": "5"
    },
    "1114": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1115": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ADD",
      "path": "5"
    },
    "1116": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1117": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1119": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1120": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "POP",
      "path": "5"
    },
    "1121": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1122": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "ADD",
      "path": "5"
    },
    "1123": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1124": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46D"
    },
    "1127": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1128": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1129": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x104A"
    },
    "1132": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11454,
        11498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1133": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1134": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11508
      ],
      "op": "LT",
      "path": "5"
    },
    "1135": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        11454,
        11508
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1136": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E1"
    },
    "1139": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1140": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1142": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1151": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1156": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1157": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "ADD",
      "path": "5"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH32",
      "value": "0x656E7320666F722074686520707269636520726571756972656D656E742E0000"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1239": {
      "op": "DUP3"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1248": {
      "op": "JUMP"
    },
    "1249": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11446,
        11584
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 10
    },
    "1259": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "AND",
      "path": "5"
    },
    "1260": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1262": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1263": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1264": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1265": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11619
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1267": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1269": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1270": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1271": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1272": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1274": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1275": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1276": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11641
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1277": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11657
      ],
      "op": "ADD",
      "path": "5"
    },
    "1278": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1279": {
      "branch": 48,
      "fn": "LockContract.new_Investor",
      "offset": [
        11603,
        11661
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1280": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x564"
    },
    "1283": {
      "branch": 48,
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1284": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1286": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1295": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1298": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1300": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1301": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "ADD",
      "path": "5"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320697320616C726561647920696E207468652076"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH16",
      "value": "0x32B9BA34B7339031B7B73A3930B1BA17"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1370": {
      "op": "DUP3"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "1379": {
      "op": "JUMP"
    },
    "1380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11595,
        11723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1381": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x1"
    },
    "1383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1384": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1387": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1396": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "SUB"
    },
    "1405": {
      "op": "DUP5"
    },
    "1406": {
      "op": "DUP2"
    },
    "1407": {
      "op": "AND"
    },
    "1408": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1410": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1411": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ADD",
      "path": "5"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11837,
        11841
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1416": {
      "op": "DUP4"
    },
    "1417": {
      "op": "ADD"
    },
    "1418": {
      "op": "MSTORE"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1421": {
      "op": "DUP3"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "DUP7"
    },
    "1424": {
      "op": "SWAP1"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1427": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1428": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "AND",
      "path": "5"
    },
    "1429": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11793
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1430": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11806
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "1435": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1441": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1443": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1444": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1445": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1446": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "SUB",
      "path": "5"
    },
    "1447": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1448": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1450": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1451": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "GAS",
      "path": "5"
    },
    "1452": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "CALL",
      "path": "5"
    },
    "1453": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1454": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1455": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1456": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BD"
    },
    "1459": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1460": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1461": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1463": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1464": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1465": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1466": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1468": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1469": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1470": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1471": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1472": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1473": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1474": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1476": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1477": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1478": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1480": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "NOT",
      "path": "5"
    },
    "1481": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1483": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1484": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ADD",
      "path": "5"
    },
    "1485": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "AND",
      "path": "5"
    },
    "1486": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1487": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ADD",
      "path": "5"
    },
    "1488": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1489": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1491": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1492": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1493": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1494": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "ADD",
      "path": "5"
    },
    "1495": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1496": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E1"
    },
    "1499": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1500": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1501": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1091"
    },
    "1504": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11781,
        11852
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1505": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1506": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11781,
        11852
      ],
      "op": "POP",
      "path": "5"
    },
    "1507": {
      "branch": 49,
      "fn": "LockContract.new_Investor",
      "offset": [
        11866,
        11876
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1508": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1509": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x665"
    },
    "1512": {
      "branch": 49,
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1513": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11905
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x4"
    },
    "1515": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1516": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1517": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1519": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1520": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1521": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "ADD",
      "path": "5"
    },
    "1522": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1523": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1524": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1525": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1558": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "ADD",
      "path": "5"
    },
    "1559": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1560": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "op": "NOT"
    },
    "1570": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "AND",
      "path": "5"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1580": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "AND",
      "path": "5"
    },
    "1581": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "OR",
      "path": "5"
    },
    "1582": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1583": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11891,
        11932
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1584": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11957
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x6"
    },
    "1586": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1587": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1588": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1589": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1590": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "ADD",
      "path": "5"
    },
    "1591": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1592": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1596": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1629": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "ADD",
      "path": "5"
    },
    "1630": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1631": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1632": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11946,
        11971
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1633": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A3"
    },
    "1636": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1637": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1638": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12015
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x5"
    },
    "1640": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1641": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1642": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1644": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1645": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1646": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "ADD",
      "path": "5"
    },
    "1647": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1648": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1649": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12000,
        12022
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1650": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12048
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x7"
    },
    "1652": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1653": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1654": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1655": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1656": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "ADD",
      "path": "5"
    },
    "1657": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1658": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1661": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1662": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1695": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "ADD",
      "path": "5"
    },
    "1696": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1697": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1698": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12036,
        12062
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1699": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11863,
        12073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1703": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1704": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1705": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1707": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1708": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "ADD",
      "path": "5"
    },
    "1709": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1710": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1720": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1721": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "AND",
      "path": "5"
    },
    "1722": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1723": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1724": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1727": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1729": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1730": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1731": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "ADD",
      "path": "5"
    },
    "1732": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1733": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1734": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1735": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1736": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1737": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "ADD",
      "path": "5"
    },
    "1738": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1739": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1740": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1741": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12348,
        12363
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1742": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1751": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "AND",
      "path": "5"
    },
    "1752": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1754": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1755": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "ADD",
      "path": "5"
    },
    "1756": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1757": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1758": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1759": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12414,
        12418
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1761": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1763": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1764": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "ADD",
      "path": "5"
    },
    "1765": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1766": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1767": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12151,
        12419
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1768": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 16
    },
    "1769": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1770": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1771": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1773": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1774": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1775": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1776": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1777": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1778": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1779": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1780": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12528
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1781": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1782": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1783": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1784": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "op": "NOT"
    },
    "1794": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "AND",
      "path": "5"
    },
    "1795": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1796": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "AND",
      "path": "5"
    },
    "1797": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1798": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1799": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1800": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "OR",
      "path": "5"
    },
    "1801": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1802": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1803": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1804": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1805": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1806": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1807": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ADD",
      "path": "5"
    },
    "1808": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1809": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1810": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1811": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1812": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1813": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1814": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1815": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1816": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ADD",
      "path": "5"
    },
    "1817": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1818": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1819": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1820": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1821": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1822": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1824": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1825": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ADD",
      "path": "5"
    },
    "1826": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1827": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1828": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1829": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1831": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1832": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1833": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ADD",
      "path": "5"
    },
    "1834": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1835": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1838": {
      "op": "NOT"
    },
    "1839": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "AND",
      "path": "5"
    },
    "1840": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1841": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1842": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1843": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1844": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1845": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1846": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "OR",
      "path": "5"
    },
    "1847": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1848": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12490,
        12537
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1849": {
      "fn": "LockContract.new_Investor",
      "jump": "o",
      "offset": [
        11241,
        12546
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1851": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1853": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "SUB"
    },
    "1862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1864": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1865": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1868": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1887": {
      "op": "DUP2"
    },
    "1888": {
      "op": "SWAP1"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1892": {
      "op": "DUP3"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1930": {
      "op": "DUP3"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "1939": {
      "op": "JUMP"
    },
    "1940": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "1950": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "1954": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1978": {
      "op": "DUP3"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "MSTORE"
    },
    "1981": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2016": {
      "op": "DUP3"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "MSTORE"
    },
    "2019": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2031": {
      "op": "DUP3"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "2040": {
      "op": "JUMP"
    },
    "2041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x802"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5D"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2052": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2053": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12658,
        15424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2054": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12842,
        12852
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2055": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12715,
        12722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2057": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2058": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2059": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2060": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12841
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2062": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2064": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2065": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2066": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2067": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2069": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2070": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12853
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2071": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2073": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2074": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12869
      ],
      "op": "ADD",
      "path": "5"
    },
    "2075": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12825,
        12869
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2076": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12952,
        12996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2077": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12952,
        12996
      ],
      "op": "ADD",
      "path": "5"
    },
    "2078": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12952,
        12996
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2079": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13089,
        13122
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 19
    },
    "2080": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13089,
        13122
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2081": {
      "branch": 50,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13089,
        13122
      ],
      "op": "LT",
      "path": "5"
    },
    "2082": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86D"
    },
    "2085": {
      "branch": 50,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2086": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2088": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2097": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2100": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2102": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2103": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2109": {
      "op": "DUP3"
    },
    "2110": {
      "op": "ADD"
    },
    "2111": {
      "op": "MSTORE"
    },
    "2112": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "2156": {
      "op": "JUMP"
    },
    "2157": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13081,
        13155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2158": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13361,
        13371
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2159": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13207,
        13228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2161": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2162": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2163": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2164": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13360
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2166": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2168": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2169": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2171": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2172": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13372
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2173": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2175": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13386
      ],
      "op": "ADD",
      "path": "5"
    },
    "2176": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13344,
        13386
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2177": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13231,
        13246
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2178": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13231,
        13246
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2179": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13502,
        13532
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 20
    },
    "2180": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13502,
        13532
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2181": {
      "branch": 51,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13502,
        13532
      ],
      "op": "GT",
      "path": "5"
    },
    "2182": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8D1"
    },
    "2185": {
      "branch": 51,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2186": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2188": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2197": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2200": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2202": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2203": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "ADD",
      "path": "5"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2209": {
      "op": "DUP3"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "MSTORE"
    },
    "2212": {
      "op": "PUSH32",
      "value": "0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2247": {
      "op": "DUP3"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "op": "MSTORE"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "2256": {
      "op": "JUMP"
    },
    "2257": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13494,
        13565
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2258": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13648,
        13668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2260": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13648,
        13668
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2261": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13962,
        13963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2263": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2264": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13969,
        13990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2266": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13969,
        13997
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2267": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13965,
        13997
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2268": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13965,
        13997
      ],
      "op": "GT",
      "path": "5"
    },
    "2269": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA44"
    },
    "2272": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2273": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14141,
        14150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8ED"
    },
    "2276": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14149,
        14150
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2277": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14141,
        14148
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2281": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14141,
        14150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2284": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14141,
        14150
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2285": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14141,
        14150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2286": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14126,
        14150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F7"
    },
    "2289": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14126,
        14150
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2290": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14126,
        14140
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2291": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14126,
        14150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "2294": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14126,
        14150
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2295": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14126,
        14150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2296": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14109,
        14122
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2297": {
      "branch": 52,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14109,
        14151
      ],
      "op": "GT",
      "path": "5"
    },
    "2298": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2299": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x999"
    },
    "2302": {
      "branch": 52,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2303": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14354,
        14357
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0x909"
    },
    "2306": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14356,
        14357
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2308": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14354,
        14355
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2309": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14354,
        14357
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2312": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14354,
        14357
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2313": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14354,
        14357
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2314": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14345,
        14358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x916"
    },
    "2317": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14345,
        14358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2318": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14345,
        14352
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2322": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14345,
        14358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2325": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14345,
        14358
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2326": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14345,
        14358
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2327": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14343
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x923"
    },
    "2330": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14342,
        14343
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2331": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14341
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2335": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14343
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2338": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14334,
        14343
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2339": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14343
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2340": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92D"
    },
    "2343": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14358
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2344": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14358
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2345": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2348": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14334,
        14358
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2349": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14334,
        14358
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2350": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14314,
        14358
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14314,
        14358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2353": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14611,
        14618
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 22,
      "value": "0x278D00"
    },
    "2357": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14605,
        14610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "2360": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2362": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14600,
        14603
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x944"
    },
    "2365": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14602,
        14603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2367": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14600,
        14601
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2368": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14600,
        14603
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2371": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14600,
        14603
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2372": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14600,
        14603
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2373": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2374": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2375": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2376": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "LT",
      "path": "5"
    },
    "2377": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x954"
    },
    "2380": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2381": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x954"
    },
    "2384": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E4"
    },
    "2387": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14578,
        14604
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2388": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2389": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2390": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2392": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2393": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2395": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2397": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2398": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "ADD",
      "path": "5"
    },
    "2399": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14578,
        14604
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2400": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14554
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2401": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x96A"
    },
    "2404": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14604
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2405": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14604
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2406": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14604
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2409": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14538,
        14604
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2410": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14604
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2411": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x974"
    },
    "2414": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2415": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2416": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "2419": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14538,
        14610
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2420": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2421": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97E"
    },
    "2424": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14618
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2425": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14618
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2426": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "2429": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14538,
        14618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2430": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2431": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x988"
    },
    "2434": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14639
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2435": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2439": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14538,
        14639
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14538,
        14639
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2441": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14502,
        14639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x992"
    },
    "2444": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14502,
        14639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2445": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14502,
        14514
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2446": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14502,
        14639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "2449": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14502,
        14639
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2450": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14502,
        14639
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2451": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14487,
        14639
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2452": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14487,
        14639
      ],
      "op": "POP",
      "path": "5"
    },
    "2453": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA32"
    },
    "2456": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2457": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2458": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14974,
        14988
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 23
    },
    "2459": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14969,
        14972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A5"
    },
    "2462": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14971,
        14972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2464": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14969,
        14970
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2465": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14969,
        14972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2468": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14969,
        14972
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2469": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14969,
        14972
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2470": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14960,
        14973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B2"
    },
    "2473": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14960,
        14973
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2474": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14960,
        14967
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2478": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14960,
        14973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2481": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14960,
        14973
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2482": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14960,
        14973
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2483": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BC"
    },
    "2486": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14973
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2487": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14957
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2488": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2491": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14944,
        14973
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2492": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14973
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2493": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C6"
    },
    "2496": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2497": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14988
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2498": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2501": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14944,
        14988
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2502": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14944,
        14988
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2503": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14923,
        14988
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2504": {
      "op": "POP"
    },
    "2505": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14923,
        14988
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2506": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15147,
        15154
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 24,
      "value": "0x278D00"
    },
    "2510": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15141,
        15146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "2513": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15135
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2515": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15136,
        15139
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9DD"
    },
    "2518": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15138,
        15139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2520": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15136,
        15137
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2521": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15136,
        15139
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2524": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15136,
        15139
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2525": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15136,
        15139
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2526": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2527": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2528": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2529": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "LT",
      "path": "5"
    },
    "2530": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9ED"
    },
    "2533": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2534": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9ED"
    },
    "2537": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E4"
    },
    "2540": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15114,
        15140
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2541": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2542": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2543": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2545": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2546": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2548": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2550": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2551": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "ADD",
      "path": "5"
    },
    "2552": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15114,
        15140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2553": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15090
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2554": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA03"
    },
    "2557": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15140
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2558": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15140
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2559": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15140
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2562": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15074,
        15140
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2563": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15140
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2564": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0D"
    },
    "2567": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2568": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2569": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "2572": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15074,
        15146
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2573": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15146
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2574": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15154
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA17"
    },
    "2577": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15154
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2578": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2579": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15154
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "2582": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15074,
        15154
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2583": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15154
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2584": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15175
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA21"
    },
    "2587": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15175
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2588": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15175
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2589": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15175
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2592": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15074,
        15175
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2593": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15074,
        15175
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2594": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15038,
        15175
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2B"
    },
    "2597": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15038,
        15175
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2598": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15038,
        15050
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2599": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15038,
        15175
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "2602": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15038,
        15175
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2603": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15038,
        15175
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2604": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15023,
        15175
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2605": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15023,
        15175
      ],
      "op": "POP",
      "path": "5"
    },
    "2606": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15194,
        15199
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 25,
      "value": "0xA44"
    },
    "2609": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15194,
        15199
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2610": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14106,
        15214
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2611": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 26
    },
    "2612": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3C"
    },
    "2615": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2616": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111C"
    },
    "2619": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        13999,
        14002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2620": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2621": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2622": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "2623": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13999,
        14002
      ],
      "op": "POP",
      "path": "5"
    },
    "2624": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8D7"
    },
    "2627": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2628": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13949,
        15224
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15307,
        15331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2632": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15334,
        15363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA51"
    },
    "2635": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15349,
        15363
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2636": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15334,
        15346
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2637": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15334,
        15363
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "2640": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15334,
        15363
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2641": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15334,
        15363
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2642": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15307,
        15363
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "2643": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12658,
        15424
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        12658,
        15424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "op": "SUB"
    },
    "2666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 27
    },
    "2667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "op": "NOT"
    },
    "2678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2681": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2682": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2683": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x40"
    },
    "2686": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2689": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2692": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2693": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2727": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2728": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2731": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2732": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2733": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8375,
        11186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "op": "SUB"
    },
    "2742": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2743": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "AND",
      "path": "5"
    },
    "2744": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8474,
        8481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2746": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2747": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2748": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2749": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8600
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2751": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2753": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2754": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2755": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2756": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2758": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2759": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8616
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2760": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8632
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2762": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8632
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2763": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8632
      ],
      "op": "ADD",
      "path": "5"
    },
    "2764": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8584,
        8632
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2765": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8715,
        8763
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2766": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8715,
        8763
      ],
      "op": "ADD",
      "path": "5"
    },
    "2767": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8715,
        8763
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2768": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8856,
        8889
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 29
    },
    "2769": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8856,
        8889
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2770": {
      "branch": 53,
      "fn": "LockContract.can_release_percent",
      "offset": [
        8856,
        8889
      ],
      "op": "LT",
      "path": "5"
    },
    "2771": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1E"
    },
    "2774": {
      "branch": 53,
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2775": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2777": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2784": {
      "op": "SHL"
    },
    "2785": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2786": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2789": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2791": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2792": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "ADD",
      "path": "5"
    },
    "2793": {
      "op": "MSTORE"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2798": {
      "op": "DUP3"
    },
    "2799": {
      "op": "ADD"
    },
    "2800": {
      "op": "MSTORE"
    },
    "2801": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2836": {
      "op": "DUP3"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "MSTORE"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "2845": {
      "op": "JUMP"
    },
    "2846": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8848,
        8922
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2853": {
      "op": "SHL"
    },
    "2854": {
      "op": "SUB"
    },
    "2855": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2856": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "AND",
      "path": "5"
    },
    "2857": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8974,
        8995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2859": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2860": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2861": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2862": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9122
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2864": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2866": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2867": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2869": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2870": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9138
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2871": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9152
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2873": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9152
      ],
      "op": "ADD",
      "path": "5"
    },
    "2874": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9106,
        9152
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2875": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8998,
        9008
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2876": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8998,
        9008
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2877": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9268,
        9298
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 30
    },
    "2878": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9268,
        9298
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2879": {
      "branch": 54,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9268,
        9298
      ],
      "op": "GT",
      "path": "5"
    },
    "2880": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB8B"
    },
    "2883": {
      "branch": 54,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2884": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2886": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2895": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2898": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2900": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2901": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "ADD",
      "path": "5"
    },
    "2902": {
      "op": "MSTORE"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2907": {
      "op": "DUP3"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "MSTORE"
    },
    "2910": {
      "op": "PUSH32",
      "value": "0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2945": {
      "op": "DUP3"
    },
    "2946": {
      "op": "ADD"
    },
    "2947": {
      "op": "MSTORE"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x284"
    },
    "2954": {
      "op": "JUMP"
    },
    "2955": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9260,
        9331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2956": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9414,
        9434
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2958": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9414,
        9434
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2959": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9724,
        9725
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2961": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2962": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9731,
        9752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2964": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9731,
        9759
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2965": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9727,
        9759
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2966": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9727,
        9759
      ],
      "op": "GT",
      "path": "5"
    },
    "2967": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFE"
    },
    "2970": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2971": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9903,
        9912
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA7"
    },
    "2974": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9911,
        9912
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2975": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9903,
        9910
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2979": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9903,
        9912
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "2982": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9903,
        9912
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2983": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9903,
        9912
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2984": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9888,
        9912
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB1"
    },
    "2987": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9888,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2988": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9888,
        9902
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2989": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9888,
        9912
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "2992": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9888,
        9912
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2993": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9888,
        9912
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2994": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9871,
        9884
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2995": {
      "branch": 55,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9871,
        9913
      ],
      "op": "GT",
      "path": "5"
    },
    "2996": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2997": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC53"
    },
    "3000": {
      "branch": 55,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3001": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10116,
        10119
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0xBC3"
    },
    "3004": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10118,
        10119
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3006": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10116,
        10117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3007": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10116,
        10119
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3010": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10116,
        10119
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3011": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10116,
        10119
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3012": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10107,
        10120
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD0"
    },
    "3015": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10107,
        10120
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3016": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10107,
        10114
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3020": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10107,
        10120
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3023": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10107,
        10120
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3024": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10107,
        10120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3025": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBDD"
    },
    "3028": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10104,
        10105
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3029": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10103
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3033": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10105
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3036": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10096,
        10105
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3037": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10105
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3038": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10120
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE7"
    },
    "3041": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10120
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3042": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10120
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3043": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10120
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3046": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10096,
        10120
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3047": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10096,
        10120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3048": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10076,
        10120
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10076,
        10120
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3051": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10373,
        10380
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 32,
      "value": "0x278D00"
    },
    "3055": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10367,
        10372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "3058": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3060": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10362,
        10365
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFE"
    },
    "3063": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10364,
        10365
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3065": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10362,
        10363
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3066": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10362,
        10365
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3069": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10362,
        10365
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3070": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10362,
        10365
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3071": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3072": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3073": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3074": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "LT",
      "path": "5"
    },
    "3075": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0E"
    },
    "3078": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3079": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0E"
    },
    "3082": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E4"
    },
    "3085": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10340,
        10366
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3086": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3087": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3088": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3090": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3091": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3093": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3095": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3096": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "ADD",
      "path": "5"
    },
    "3097": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10340,
        10366
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3098": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10316
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3099": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC24"
    },
    "3102": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10366
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3103": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10366
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3104": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3107": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10300,
        10366
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3108": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10366
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3109": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC2E"
    },
    "3112": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10372
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3113": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3114": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "3117": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10300,
        10372
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3118": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3119": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10380
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC38"
    },
    "3122": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10380
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3123": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10380
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3124": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10380
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "3127": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10300,
        10380
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3128": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10380
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3129": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC42"
    },
    "3132": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10401
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3133": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3134": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3137": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10300,
        10401
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3138": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10300,
        10401
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3139": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10264,
        10401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4C"
    },
    "3142": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10264,
        10401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3143": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10264,
        10276
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3144": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10264,
        10401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "3147": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10264,
        10401
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3148": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10264,
        10401
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3149": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10249,
        10401
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3150": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10249,
        10401
      ],
      "op": "POP",
      "path": "5"
    },
    "3151": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCEC"
    },
    "3154": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3155": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3156": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10736,
        10750
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 33
    },
    "3157": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10731,
        10734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5F"
    },
    "3160": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10733,
        10734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3162": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10731,
        10732
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3163": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10731,
        10734
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3166": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10731,
        10734
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3167": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10731,
        10734
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3168": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10722,
        10735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6C"
    },
    "3171": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10722,
        10735
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3172": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10722,
        10729
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3176": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10722,
        10735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3179": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10722,
        10735
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3180": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10722,
        10735
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3181": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC76"
    },
    "3184": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10735
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3185": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10719
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3186": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10735
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3189": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10706,
        10735
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3190": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10735
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3191": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10750
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC80"
    },
    "3194": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10750
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3195": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10750
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3196": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10750
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3199": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10706,
        10750
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3200": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10706,
        10750
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3201": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10685,
        10750
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10685,
        10750
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3204": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10909,
        10916
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 34,
      "value": "0x278D00"
    },
    "3208": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10903,
        10908
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "3211": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10897
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3213": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10898,
        10901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC97"
    },
    "3216": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10901
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3218": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10898,
        10899
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3219": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10898,
        10901
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3222": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10898,
        10901
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3223": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10898,
        10901
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3224": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3225": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3226": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3227": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "LT",
      "path": "5"
    },
    "3228": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA7"
    },
    "3231": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3232": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA7"
    },
    "3235": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E4"
    },
    "3238": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10876,
        10902
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3239": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3240": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3241": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3243": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3244": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3246": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3248": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3249": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "ADD",
      "path": "5"
    },
    "3250": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10876,
        10902
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3251": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10852
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3252": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCBD"
    },
    "3255": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10902
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3256": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10902
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3257": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10902
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3260": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10836,
        10902
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3261": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10902
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3262": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10908
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC7"
    },
    "3265": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10908
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3266": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10908
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3267": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10908
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "3270": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10836,
        10908
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3271": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10908
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3272": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD1"
    },
    "3275": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10916
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3276": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3277": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10FA"
    },
    "3280": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10836,
        10916
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3281": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3282": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDB"
    },
    "3285": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10937
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3286": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3287": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AE"
    },
    "3290": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10836,
        10937
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3291": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10836,
        10937
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3292": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10800,
        10937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE5"
    },
    "3295": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10800,
        10937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3296": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10800,
        10812
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3297": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10800,
        10937
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1079"
    },
    "3300": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10800,
        10937
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3301": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10800,
        10937
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3302": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10785,
        10937
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3303": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10785,
        10937
      ],
      "op": "POP",
      "path": "5"
    },
    "3304": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10956,
        10961
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 35,
      "value": "0xCFE"
    },
    "3307": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10956,
        10961
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3308": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        10976
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3309": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 36
    },
    "3310": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF6"
    },
    "3313": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3314": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111C"
    },
    "3317": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9761,
        9764
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3318": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3319": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3320": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "POP",
      "path": "5"
    },
    "3321": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9761,
        9764
      ],
      "op": "POP",
      "path": "5"
    },
    "3322": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB91"
    },
    "3325": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3326": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9711,
        10986
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3327": {
      "op": "POP"
    },
    "3328": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3330": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11096,
        11125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0B"
    },
    "3333": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11111,
        11125
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3334": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11096,
        11108
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3335": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11096,
        11125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10CD"
    },
    "3338": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11096,
        11125
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3339": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11096,
        11125
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3340": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11069,
        11125
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "3341": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8375,
        11186
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "POP"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "fn": "LockContract.can_release_percent",
      "jump": "o",
      "offset": [
        8375,
        11186
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x40"
    },
    "3356": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3357": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "op": "DUP5"
    },
    "3367": {
      "op": "AND"
    },
    "3368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3372": {
      "op": "MSTORE"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3375": {
      "op": "DUP1"
    },
    "3376": {
      "op": "DUP3"
    },
    "3377": {
      "op": "ADD"
    },
    "3378": {
      "op": "DUP5"
    },
    "3379": {
      "op": "SWAP1"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3383": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3384": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3385": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "3386": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3389": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3390": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3393": {
      "op": "SWAP1"
    },
    "3394": {
      "op": "SWAP2"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3399": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3401": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3402": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "op": "SUB"
    },
    "3413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3414": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3421": {
      "op": "SHL"
    },
    "3422": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3424": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6B"
    },
    "3428": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3429": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3430": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3431": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD70"
    },
    "3434": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3435": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3436": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3437": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3438": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3439": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3443": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDC5"
    },
    "3446": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3449": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3450": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3451": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3453": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3460": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3461": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3462": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3465": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "3501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "3511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE42"
    },
    "3514": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3517": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3518": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3523": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "3524": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3525": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3526": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3527": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "branch": 60,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3532": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6B"
    },
    "3535": {
      "branch": 60,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3536": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 38
    },
    "3537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3538": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3540": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3541": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3543": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3544": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3545": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE3"
    },
    "3549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1091"
    },
    "3554": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3555": {
      "branch": 61,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6B"
    },
    "3559": {
      "branch": 61,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "3578": {
      "op": "MSTORE"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3583": {
      "op": "DUP3"
    },
    "3584": {
      "op": "ADD"
    },
    "3585": {
      "op": "MSTORE"
    },
    "3586": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3640": {
      "op": "DUP3"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "MSTORE"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3645": {
      "op": "ADD"
    },
    "3646": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "3649": {
      "op": "JUMP"
    },
    "3650": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3651": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3653": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xE51"
    },
    "3656": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3657": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3658": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3660": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3661": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE5B"
    },
    "3664": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3665": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3666": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3667": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "3668": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3669": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3670": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3671": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3672": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3673": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3674": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 40
    },
    "3679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "3681": {
      "branch": 56,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEBC"
    },
    "3685": {
      "branch": 56,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3704": {
      "op": "MSTORE"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3709": {
      "op": "DUP3"
    },
    "3710": {
      "op": "ADD"
    },
    "3711": {
      "op": "MSTORE"
    },
    "3712": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3747": {
      "op": "DUP3"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "MSTORE"
    },
    "3750": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3759": {
      "op": "SHL"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3762": {
      "op": "DUP3"
    },
    "3763": {
      "op": "ADD"
    },
    "3764": {
      "op": "MSTORE"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3767": {
      "op": "ADD"
    },
    "3768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "3771": {
      "op": "JUMP"
    },
    "3772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 41
    },
    "3782": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "3783": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 42,
      "value": "0xF13"
    },
    "3787": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3797": {
      "op": "SHL"
    },
    "3798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3806": {
      "op": "MSTORE"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3811": {
      "op": "DUP3"
    },
    "3812": {
      "op": "ADD"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "MSTORE"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "3858": {
      "op": "JUMP"
    },
    "3859": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3862": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3863": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3870": {
      "op": "SHL"
    },
    "3871": {
      "op": "SUB"
    },
    "3872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "3873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF2F"
    },
    "3881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1165"
    },
    "3886": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "3896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "3900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "3901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "3911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF6C"
    },
    "3914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "3923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "3928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF71"
    },
    "3947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 43,
      "value": "0xF81"
    },
    "3962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8C"
    },
    "3968": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "3971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "3972": {
      "op": "POP"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "op": "POP"
    },
    "3975": {
      "op": "POP"
    },
    "3976": {
      "op": "POP"
    },
    "3977": {
      "op": "POP"
    },
    "3978": {
      "op": "POP"
    },
    "3979": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3980": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3981": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3983": {
      "branch": 57,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3984": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3985": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF9B"
    },
    "3988": {
      "branch": 57,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 44
    },
    "3991": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE54"
    },
    "3994": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3995": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3996": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3997": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3998": {
      "branch": 58,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3999": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFAB"
    },
    "4002": {
      "branch": 58,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4003": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4004": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4005": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4006": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4007": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4009": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "4010": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4011": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4012": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 45
    },
    "4013": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4015": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4016": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4022": {
      "op": "SHL"
    },
    "4023": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4024": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4027": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "4028": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "4031": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4032": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4033": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1181"
    },
    "4036": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4037": {
      "op": "JUMPDEST"
    },
    "4038": {
      "op": "DUP1"
    },
    "4039": {
      "op": "CALLDATALOAD"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "op": "DUP2"
    },
    "4049": {
      "op": "AND"
    },
    "4050": {
      "op": "DUP2"
    },
    "4051": {
      "op": "EQ"
    },
    "4052": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4055": {
      "op": "JUMPI"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4058": {
      "op": "DUP1"
    },
    "4059": {
      "op": "REVERT"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "SWAP2"
    },
    "4062": {
      "op": "SWAP1"
    },
    "4063": {
      "op": "POP"
    },
    "4064": {
      "jump": "o",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4070": {
      "op": "DUP3"
    },
    "4071": {
      "op": "DUP5"
    },
    "4072": {
      "op": "SUB"
    },
    "4073": {
      "op": "SLT"
    },
    "4074": {
      "op": "ISZERO"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xFF3"
    },
    "4078": {
      "op": "JUMPI"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4081": {
      "op": "DUP1"
    },
    "4082": {
      "op": "REVERT"
    },
    "4083": {
      "op": "JUMPDEST"
    },
    "4084": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4091": {
      "jump": "i",
      "op": "JUMP"
    },
    "4092": {
      "op": "JUMPDEST"
    },
    "4093": {
      "op": "DUP1"
    },
    "4094": {
      "op": "ISZERO"
    },
    "4095": {
      "op": "ISZERO"
    },
    "4096": {
      "op": "DUP2"
    },
    "4097": {
      "op": "EQ"
    },
    "4098": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "4101": {
      "op": "JUMPI"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "REVERT"
    },
    "4106": {
      "op": "JUMPDEST"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "DUP1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4114": {
      "op": "DUP5"
    },
    "4115": {
      "op": "DUP7"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "op": "SLT"
    },
    "4118": {
      "op": "ISZERO"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0x101F"
    },
    "4122": {
      "op": "JUMPI"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4125": {
      "op": "DUP1"
    },
    "4126": {
      "op": "REVERT"
    },
    "4127": {
      "op": "JUMPDEST"
    },
    "4128": {
      "op": "DUP4"
    },
    "4129": {
      "op": "CALLDATALOAD"
    },
    "4130": {
      "op": "SWAP3"
    },
    "4131": {
      "op": "POP"
    },
    "4132": {
      "op": "PUSH2",
      "value": "0x102F"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4137": {
      "op": "DUP6"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "PUSH2",
      "value": "0xFC5"
    },
    "4142": {
      "jump": "i",
      "op": "JUMP"
    },
    "4143": {
      "op": "JUMPDEST"
    },
    "4144": {
      "op": "SWAP2"
    },
    "4145": {
      "op": "POP"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4148": {
      "op": "DUP5"
    },
    "4149": {
      "op": "ADD"
    },
    "4150": {
      "op": "CALLDATALOAD"
    },
    "4151": {
      "op": "PUSH2",
      "value": "0x103F"
    },
    "4154": {
      "op": "DUP2"
    },
    "4155": {
      "op": "PUSH2",
      "value": "0xFFC"
    },
    "4158": {
      "jump": "i",
      "op": "JUMP"
    },
    "4159": {
      "op": "JUMPDEST"
    },
    "4160": {
      "op": "DUP1"
    },
    "4161": {
      "op": "SWAP2"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "SWAP3"
    },
    "4165": {
      "op": "POP"
    },
    "4166": {
      "op": "SWAP3"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "op": "SWAP3"
    },
    "4169": {
      "jump": "o",
      "op": "JUMP"
    },
    "4170": {
      "op": "JUMPDEST"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4175": {
      "op": "DUP3"
    },
    "4176": {
      "op": "DUP5"
    },
    "4177": {
      "op": "SUB"
    },
    "4178": {
      "op": "SLT"
    },
    "4179": {
      "op": "ISZERO"
    },
    "4180": {
      "op": "PUSH2",
      "value": "0x105C"
    },
    "4183": {
      "op": "JUMPI"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4186": {
      "op": "DUP1"
    },
    "4187": {
      "op": "REVERT"
    },
    "4188": {
      "op": "JUMPDEST"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "op": "MLOAD"
    },
    "4191": {
      "op": "SWAP2"
    },
    "4192": {
      "op": "SWAP1"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "jump": "o",
      "op": "JUMP"
    },
    "4195": {
      "op": "JUMPDEST"
    },
    "4196": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4203": {
      "op": "SHL"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4216": {
      "op": "REVERT"
    },
    "4217": {
      "op": "JUMPDEST"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "NOT"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "GT"
    },
    "4224": {
      "op": "ISZERO"
    },
    "4225": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4228": {
      "op": "JUMPI"
    },
    "4229": {
      "op": "PUSH2",
      "value": "0x108C"
    },
    "4232": {
      "op": "PUSH2",
      "value": "0x1063"
    },
    "4235": {
      "jump": "i",
      "op": "JUMP"
    },
    "4236": {
      "op": "JUMPDEST"
    },
    "4237": {
      "op": "POP"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "op": "SWAP1"
    },
    "4240": {
      "jump": "o",
      "op": "JUMP"
    },
    "4241": {
      "op": "JUMPDEST"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "DUP5"
    },
    "4248": {
      "op": "SUB"
    },
    "4249": {
      "op": "SLT"
    },
    "4250": {
      "op": "ISZERO"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4254": {
      "op": "JUMPI"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4257": {
      "op": "DUP1"
    },
    "4258": {
      "op": "REVERT"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "DUP2"
    },
    "4261": {
      "op": "MLOAD"
    },
    "4262": {
      "op": "PUSH2",
      "value": "0xE54"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "PUSH2",
      "value": "0xFFC"
    },
    "4269": {
      "jump": "i",
      "op": "JUMP"
    },
    "4270": {
      "op": "JUMPDEST"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "NOT"
    },
    "4277": {
      "op": "DIV"
    },
    "4278": {
      "op": "DUP4"
    },
    "4279": {
      "op": "GT"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "ISZERO"
    },
    "4282": {
      "op": "ISZERO"
    },
    "4283": {
      "op": "AND"
    },
    "4284": {
      "op": "ISZERO"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x10C8"
    },
    "4288": {
      "op": "JUMPI"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0x10C8"
    },
    "4292": {
      "op": "PUSH2",
      "value": "0x1063"
    },
    "4295": {
      "jump": "i",
      "op": "JUMP"
    },
    "4296": {
      "op": "JUMPDEST"
    },
    "4297": {
      "op": "POP"
    },
    "4298": {
      "op": "MUL"
    },
    "4299": {
      "op": "SWAP1"
    },
    "4300": {
      "jump": "o",
      "op": "JUMP"
    },
    "4301": {
      "op": "JUMPDEST"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4304": {
      "op": "DUP3"
    },
    "4305": {
      "op": "DUP3"
    },
    "4306": {
      "op": "LT"
    },
    "4307": {
      "op": "ISZERO"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x10DF"
    },
    "4311": {
      "op": "JUMPI"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10DF"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x1063"
    },
    "4318": {
      "jump": "i",
      "op": "JUMP"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "SUB"
    },
    "4322": {
      "op": "SWAP1"
    },
    "4323": {
      "jump": "o",
      "op": "JUMP"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4332": {
      "op": "SHL"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4345": {
      "op": "REVERT"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4349": {
      "op": "DUP3"
    },
    "4350": {
      "op": "PUSH2",
      "value": "0x1117"
    },
    "4353": {
      "op": "JUMPI"
    },
    "4354": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4364": {
      "op": "MSTORE"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4369": {
      "op": "MSTORE"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4374": {
      "op": "REVERT"
    },
    "4375": {
      "op": "JUMPDEST"
    },
    "4376": {
      "op": "POP"
    },
    "4377": {
      "op": "DIV"
    },
    "4378": {
      "op": "SWAP1"
    },
    "4379": {
      "jump": "o",
      "op": "JUMP"
    },
    "4380": {
      "op": "JUMPDEST"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "DUP3"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "PUSH2",
      "value": "0x112E"
    },
    "4390": {
      "op": "JUMPI"
    },
    "4391": {
      "op": "PUSH2",
      "value": "0x112E"
    },
    "4394": {
      "op": "PUSH2",
      "value": "0x1063"
    },
    "4397": {
      "jump": "i",
      "op": "JUMP"
    },
    "4398": {
      "op": "JUMPDEST"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "SWAP1"
    },
    "4404": {
      "jump": "o",
      "op": "JUMP"
    },
    "4405": {
      "op": "JUMPDEST"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4408": {
      "op": "JUMPDEST"
    },
    "4409": {
      "op": "DUP4"
    },
    "4410": {
      "op": "DUP2"
    },
    "4411": {
      "op": "LT"
    },
    "4412": {
      "op": "ISZERO"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1150"
    },
    "4416": {
      "op": "JUMPI"
    },
    "4417": {
      "op": "DUP2"
    },
    "4418": {
      "op": "DUP2"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "op": "MLOAD"
    },
    "4421": {
      "op": "DUP4"
    },
    "4422": {
      "op": "DUP3"
    },
    "4423": {
      "op": "ADD"
    },
    "4424": {
      "op": "MSTORE"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "PUSH2",
      "value": "0x1138"
    },
    "4431": {
      "op": "JUMP"
    },
    "4432": {
      "op": "JUMPDEST"
    },
    "4433": {
      "op": "DUP4"
    },
    "4434": {
      "op": "DUP2"
    },
    "4435": {
      "op": "GT"
    },
    "4436": {
      "op": "ISZERO"
    },
    "4437": {
      "op": "PUSH2",
      "value": "0x115F"
    },
    "4440": {
      "op": "JUMPI"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4443": {
      "op": "DUP5"
    },
    "4444": {
      "op": "DUP5"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "op": "MSTORE"
    },
    "4447": {
      "op": "JUMPDEST"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "op": "POP"
    },
    "4450": {
      "op": "POP"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "jump": "o",
      "op": "JUMP"
    },
    "4453": {
      "op": "JUMPDEST"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "MLOAD"
    },
    "4458": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "DUP5"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4465": {
      "op": "DUP8"
    },
    "4466": {
      "op": "ADD"
    },
    "4467": {
      "op": "PUSH2",
      "value": "0x1135"
    },
    "4470": {
      "jump": "i",
      "op": "JUMP"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "SWAP2"
    },
    "4473": {
      "op": "SWAP1"
    },
    "4474": {
      "op": "SWAP2"
    },
    "4475": {
      "op": "ADD"
    },
    "4476": {
      "op": "SWAP3"
    },
    "4477": {
      "op": "SWAP2"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "jump": "o",
      "op": "JUMP"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4484": {
      "op": "DUP2"
    },
    "4485": {
      "op": "MSTORE"
    },
    "4486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4488": {
      "op": "DUP3"
    },
    "4489": {
      "op": "MLOAD"
    },
    "4490": {
      "op": "DUP1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4493": {
      "op": "DUP5"
    },
    "4494": {
      "op": "ADD"
    },
    "4495": {
      "op": "MSTORE"
    },
    "4496": {
      "op": "PUSH2",
      "value": "0x11A0"
    },
    "4499": {
      "op": "DUP2"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4502": {
      "op": "DUP6"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4506": {
      "op": "DUP8"
    },
    "4507": {
      "op": "ADD"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x1135"
    },
    "4511": {
      "jump": "i",
      "op": "JUMP"
    },
    "4512": {
      "op": "JUMPDEST"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4518": {
      "op": "NOT"
    },
    "4519": {
      "op": "AND"
    },
    "4520": {
      "op": "SWAP2"
    },
    "4521": {
      "op": "SWAP1"
    },
    "4522": {
      "op": "SWAP2"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4526": {
      "op": "ADD"
    },
    "4527": {
      "op": "SWAP3"
    },
    "4528": {
      "op": "SWAP2"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "op": "POP"
    },
    "4531": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f0043602af501a25ce0f38a93e72ded69cc25607",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context, Ownable  {\n\n    //Token\n    IERC20 public legacy_token;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Investor) public walletToInvestor;\n\n    //Structs\n    struct Investor {\n        address investor_address;// probably can take it out\n\n        uint256 tokens_received;// amount of tokens the Investor has received\n\n        uint256 tokens_promised;// amount of tokens the Investor is owed\n\n        uint256 vesting_start;// saves the date of the initial locking of the contract\n\n        bool under250k_investor;// if true than it is an investor between 50k-250k, if false it is 250k+\n    }\n\n    //Variables\n    address[] investor_address;// array with all the investor aaddresses\n    address[] addresses_O50I;\n    address[] addresses_O250I;\n    uint256[] tokens_O50I;\n    uint256[] tokens_O250I;\n    uint256[] percent_per_milestone;//percentages per month that will be released (in basis points)\n    uint256 initLock;// initial lock period \n    uint256 erc20Released;// total amount of released tokens\n    uint256 numMilestones;// number of milestones (number of payments for each Investor)\n    uint256 num_O50I;// number of under 50k token vested investors\n    uint256 num_O250I;// number of over 50k token vested investors\n    uint256 totalTokens_O50I;// total tokens promised to investors with 50k-250k tokens vested\n    uint256 totalTokens_O250I;// total tokens promised to investors with more than 250k tokens vested\n    address tokenAddress;// token address\n    bool internal locked;   // boolean to prevent reentrancy\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        address[] memory _addresses_O50I,// array with the addresses of the investors with 50k to 250k tokens\n        address[] memory _addresses_O250I,// array with the addresses of the investors with more than 250k tokens\n\n        uint256[] memory _tokens_O50I,// array with the token amount to be vested to the equivalent\n                                      // indexed addres in _addresses_O50I\n        uint256[] memory _tokens_O250I,// array with the token amount to be vested to the equivalent\n                                      // indexed addres in _addresses_O250I\n\n        uint256[] memory _percent_per_milestone,// has the basis point values of the percentages \n                                                // of tokens that should be released in total in \n                                                // the indexed month\n\n        uint256 _tokens_O50ITotal,// sum all the tokens for the investors with with 50k-250k tokens vested\n        uint256 _tokens_O250ITotal,// ... more than 250k tokens\n\n        uint256 _timeLock_O50I,// time lock period for investors with with 50k-250k tokens vested\n        uint256 _timeLock_O250I,// ... more than 250k tokens\n\n        address _tokenAddress// address of the token to be used\n    ) {\n\n        // marks the time point in which the contract was deployed and so the time\n        // in which the investors locking period (before vesting) started\n        initLock = block.timestamp;\n\n        // percentage of tokens an investor can withdraw at each milestone\n        percent_per_milestone = _percent_per_milestone;\n\n        // number of investors with...\n        num_O50I = _addresses_O50I.length;// with 50k-250k tokens vested\n        num_O250I = _addresses_O250I.length;// more than 250k tokens vested\n\n        // array of addresses of investors with ...\n        addresses_O50I= _addresses_O50I;// with 50k-250k tokens vested\n        addresses_O250I= _addresses_O250I;// more than 250k tokens vested\n\n        // array of tokens promised to investors with ...\n        tokens_O50I = _tokens_O50I;// with 50k-250k tokens vested\n        tokens_O250I = _tokens_O250I;// more than 250k tokens vested\n\n        // total tokens promised to investors with ...\n        totalTokens_O50I = _tokens_O50ITotal;// with 50k-250k tokens vested\n        totalTokens_O250I = _tokens_O250ITotal;// more than 250k tokens vested\n\n        // create an Investor struct for each investor with less than 50k tokens\n        for (uint i=0; i<num_O50I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O50I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O50I[i];\n            uint256 _investor_tokens = tokens_O50I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp + _timeLock_O50I, \n                                                true);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // create an Investor struct for each investor with more than 250k tokens\n        for (uint i=0; i<num_O250I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O250I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O250I[i];\n            uint256 _investor_tokens = tokens_O250I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp + _timeLock_O250I, \n                                                false);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // establish token address\n        tokenAddress = _tokenAddress;\n\n        // establish the IERC20 for legacy token to contract interactions\n        legacy_token = IERC20(_tokenAddress);\n\n        // Initialize the reentrancy variable to not locked\n        locked = false;\n\n    }\n\n\n    // Modifiers\n    /**\n     * @dev Prevents reentrancy\n     */\n    modifier noReentrant() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n     * @dev Only investors can call functions\n     */\n    modifier onlyInvestor() {\n        require(walletToInvestor[msg.sender].tokens_promised != 0, \"Not an investor\");\n        _;\n    }\n\n    /**\n     * @dev Release the tokens \n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual noReentrant() onlyInvestor(){\n        uint256 releasable = can_release_percent(msg.sender, uint256(block.timestamp));\n        erc20Released += releasable;\n        emit ERC20Released(tokenAddress, releasable);\n        SafeERC20.safeTransfer(IERC20(tokenAddress), msg.sender, releasable);\n        walletToInvestor[msg.sender].tokens_received += releasable;\n    }\n\n\n    /**\n     * @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     * Updates the investor struct with the amount of tokens he has withdrawn.\n     */\n    function can_release_percent(address _callerAddress, uint256 _timestamp) internal virtual returns (uint256) {\n\n        // get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[_callerAddress].tokens_received;\n        // gets the investors promised tokens\n        uint256 _tokens_promised = walletToInvestor[_callerAddress].tokens_promised;\n\n        // require that the investor has not already withdrawn everything\n        require(_has_withdrawn < _tokens_promised, \"All tokens have been claimed\");\n        \n        // gets the current time\n        uint256 _current_time = _timestamp;\n        // gets the time in which the investors vesting starts\n        uint256 _vesting_start = walletToInvestor[_callerAddress].vesting_start;\n\n        // require that the locking time for this investor has passed and thevesting has started\n        require(_current_time > _vesting_start, 'Lock time has not passed yet');\n\n        // will save the amount that is calculated that can be released\n        uint256 _can_release = 0;\n        // saves the seconds the investor has spent vesting in each bracket, to allow the token withdraw calc\n        uint256 _second_in_bracket = 0;\n        \n        //Loop through every month until we reach the one the  vesting of this investor is currently on\n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            // if the time the investor has been vesting is bigger than i month\n            if(_current_time > (_vesting_start+2592000*i)){\n\n                // check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // for each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-_vesting_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n        // get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        // return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev Adds a new Investor.\n     */\n    function new_Investor(uint256 _amount, address _newInvestor_address, bool _under250K) public {\n\n        //require that the owner has enough legacy tokens to satisfy the promised tokens for locking\n        require(legacy_token.balanceOf(_newInvestor_address)>= _amount, \n        \"You don't have enough Legacy tokens for the price requirement.\");\n\n        require(walletToInvestor[_newInvestor_address].tokens_promised== 0, \n        \"This address is already in the vesting contract.\");\n\n        // transfer the tokens to the contract\n        legacy_token.transferFrom(_newInvestor_address, address(this), _amount);\n\n        if(_under250K){\n            addresses_O50I.push(_newInvestor_address);\n            tokens_O50I.push(_amount);\n        }else{\n            addresses_O250I.push();\n            tokens_O250I.push(_amount);\n        }\n\n        // create the new Investor struc\n        Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                uint64(block.timestamp),\n                                                true);\n        // push the new Investor structto the Investors arra\n        walletToInvestor[_newInvestor_address]=investor;  \n    }\n\n    /**\n     * @dev View function that an investor can use to see how many tokens he can withdraw\n     */\n    function view_can_release_percent() public view returns (uint256) {\n\n        // get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[msg.sender].tokens_received;\n        // gets the investors promised tokens\n        uint256 _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n\n        // require that the investor has not already withdrawn everything\n        require(_has_withdrawn < _tokens_promised, \"All tokens have been claimed\");\n        \n        // gets the current time\n        uint256 _current_time = block.timestamp;\n        // gets the time in which the investors vesting starts\n        uint256 _vesting_start = walletToInvestor[msg.sender].vesting_start;\n\n        // require that the locking time for this investor has passed and thevesting has started\n        require(_current_time > _vesting_start, 'Lock time has not passed yet');\n\n        // will save the amount that is calculated that can be released\n        uint256 _can_release = 0;\n        // saves the seconds the investor has spent vesting in each bracket, to allow the token withdraw calc\n        uint256 _second_in_bracket = 0;\n        \n        //Loop through every milestone until we reach the one the  vesting of this investor is currently on\n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            // if the time the investor has been vesting is bigger than i month\n            if(_current_time > (_vesting_start+2592000*i)){\n\n                // check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // for each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-_vesting_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n        // get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        // return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev View function to get contract balance\n     */\n    function contract_balance() public view returns (uint256) {\n        return legacy_token.balanceOf(address(this));\n    }\n\n    function get_initLock() public view returns(uint256){\n        return initLock;\n    }\n}",
  "sourceMap": "792:14915:5:-:0;;;2542:4724;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;3980:15:5;3969:8;:26;4081:46;;;;:21;;:46;;;;;:::i;:::-;-1:-1:-1;4188:22:5;;4177:8;:33;;;4262:23;;4250:9;:35;4379:31;;:14;;:31;;;;;:::i;:::-;-1:-1:-1;4450:33:5;;;;:15;;:33;;;;;:::i;:::-;-1:-1:-1;4583:26:5;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;4649:28:5;;;;:12;;:28;;;;;:::i;:::-;-1:-1:-1;4774:16:5;:36;;;4850:17;:38;;;-1:-1:-1;5011:935:5;5028:8;;5026:1;:10;5011:935;;;5152:1;-1:-1:-1;;;;;5123:31:5;:14;5138:1;5123:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5123:17:5;:31;5115:117;;;;-1:-1:-1;;;5115:117:5;;4127:2:6;5115:117:5;;;4109:21:6;4166:2;4146:18;;;4139:30;-1:-1:-1;;;;;;;;;;;4185:18:6;;;4178:62;4276:22;4256:18;;;4249:50;4316:19;;5115:117:5;;;;;;;;;5334:25;5362:14;5377:1;5362:17;;;;;;;;:::i;:::-;;;;;;;;;;5420:11;:14;;-1:-1:-1;;;;;5362:17:5;;;;-1:-1:-1;5420:11:5;5432:1;;5420:14;;;;;;:::i;:::-;;;;;;;;;5393:41;;5506:24;5533:284;;;;;;;;5542:17;-1:-1:-1;;;;;5533:284:5;;;;;5610:1;5533:284;;;;5662:16;5533:284;;;;5747:14;5729:15;:32;;;;:::i;:::-;5533:284;;5812:4;5533:284;;;;;;;-1:-1:-1;;;;;5890:35:5;;;-1:-1:-1;5890:35:5;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;5890:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5890:44:5;;;;;;;;;;;-1:-1:-1;5038:3:5;;-1:-1:-1;5038:3:5;;;:::i;:::-;;;;5011:935;;;;6043:6;6038:941;6055:9;;6053:1;:11;6038:941;;;6181:1;-1:-1:-1;;;;;6151:32:5;:15;6167:1;6151:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6151:18:5;:32;6143:118;;;;-1:-1:-1;;;6143:118:5;;4127:2:6;6143:118:5;;;4109:21:6;4166:2;4146:18;;;4139:30;-1:-1:-1;;;;;;;;;;;4185:18:6;;;4178:62;4276:22;4256:18;;;4249:50;4316:19;;6143:118:5;3925:416:6;6143:118:5;6363:25;6391:15;6407:1;6391:18;;;;;;;;:::i;:::-;;;;;;;;;;6450:12;:15;;-1:-1:-1;;;;;6391:18:5;;;;-1:-1:-1;6450:12:5;6463:1;;6450:15;;;;;;:::i;:::-;;;;;;;;;6423:42;;6537:24;6564:286;;;;;;;;6573:17;-1:-1:-1;;;;;6564:286:5;;;;;6641:1;6564:286;;;;6693:16;6564:286;;;;6778:15;6760;:33;;;;:::i;:::-;6564:286;;6844:5;6564:286;;;;;;;-1:-1:-1;;;;;6923:35:5;;;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;6923:44:5;;;;;;;;;;;;;-1:-1:-1;6923:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6923:44:5;;;;;;;;;;;-1:-1:-1;6066:3:5;;-1:-1:-1;6066:3:5;;;:::i;:::-;;;;6038:941;;;-1:-1:-1;7024:12:5;:28;;;7137:36;;-1:-1:-1;;;;;;7137:36:5;-1:-1:-1;;;;;7024:28:5;;;7137:36;;;;;-1:-1:-1;;;;;;7244:14:5;;;;;;-1:-1:-1;792:14915:5;;-1:-1:-1;;;;;;;;792:14915:5;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;792:14915:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;792:14915:5;;;-1:-1:-1;792:14915:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;792:14915:5;-1:-1:-1;;;;;792:14915:5;;;;;;;;;;;-1:-1:-1;792:14915:5;;;;;;;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:6;247:40;;-1:-1:-1;;;;;302:34:6;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:6:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:6;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:6;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:6;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:6;796:683;-1:-1:-1;;;;;;796:683:6:o;1484:659::-;1549:5;1602:3;1595:4;1587:6;1583:17;1579:27;1569:55;;1620:1;1617;1610:12;1569:55;1649:6;1643:13;1675:4;1699:60;1715:43;1755:2;1715:43;:::i;1699:60::-;1793:15;;;1879:1;1875:10;;;;1863:23;;1859:32;;;1824:12;;;;1903:15;;;1900:35;;;1931:1;1928;1921:12;1900:35;1967:2;1959:6;1955:15;1979:135;1995:6;1990:3;1987:15;1979:135;;;2061:10;;2049:23;;2092:12;;;;2012;;1979:135;;2148:1640;2424:6;2432;2440;2448;2456;2464;2472;2480;2488;2496;2549:3;2537:9;2528:7;2524:23;2520:33;2517:53;;;2566:1;2563;2556:12;2517:53;2593:16;;-1:-1:-1;;;;;2658:14:6;;;2655:34;;;2685:1;2682;2675:12;2655:34;2708:72;2772:7;2763:6;2752:9;2748:22;2708:72;:::i;:::-;2698:82;;2826:2;2815:9;2811:18;2805:25;2789:41;;2855:2;2845:8;2842:16;2839:36;;;2871:1;2868;2861:12;2839:36;2894:74;2960:7;2949:8;2938:9;2934:24;2894:74;:::i;:::-;2884:84;;3014:2;3003:9;2999:18;2993:25;2977:41;;3043:2;3033:8;3030:16;3027:36;;;3059:1;3056;3049:12;3027:36;3082:74;3148:7;3137:8;3126:9;3122:24;3082:74;:::i;:::-;3072:84;;3202:2;3191:9;3187:18;3181:25;3165:41;;3231:2;3221:8;3218:16;3215:36;;;3247:1;3244;3237:12;3215:36;3270:74;3336:7;3325:8;3314:9;3310:24;3270:74;:::i;:::-;3260:84;;3390:3;3379:9;3375:19;3369:26;3353:42;;3420:2;3410:8;3407:16;3404:36;;;3436:1;3433;3426:12;3404:36;;3459:74;3525:7;3514:8;3503:9;3499:24;3459:74;:::i;:::-;3449:84;;;3573:3;3562:9;3558:19;3552:26;3542:36;;3618:3;3607:9;3603:19;3597:26;3587:36;;3663:3;3652:9;3648:19;3642:26;3632:36;;3708:3;3697:9;3693:19;3687:26;3677:36;;3732:50;3777:3;3766:9;3762:19;3732:50;:::i;:::-;3722:60;;2148:1640;;;;;;;;;;;;;:::o;3793:127::-;3854:10;3849:3;3845:20;3842:1;3835:31;3885:4;3882:1;3875:15;3909:4;3906:1;3899:15;4346:127;4407:10;4402:3;4398:20;4395:1;4388:31;4438:4;4435:1;4428:15;4462:4;4459:1;4452:15;4478:128;4518:3;4549:1;4545:6;4542:1;4539:13;4536:39;;;4555:18;;:::i;:::-;-1:-1:-1;4591:9:6;;4478:128::o;4611:135::-;4650:3;4671:17;;;4668:43;;4691:18;;:::i;:::-;-1:-1:-1;4738:1:6;4727:13;;4611:135::o;:::-;792:14915:5;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}