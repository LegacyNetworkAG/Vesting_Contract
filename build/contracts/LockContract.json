{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses_O50I",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses_O250I",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O50I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O250I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percent_per_milestone",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O50ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O250ITotal",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contract_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legacy_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newInvestor_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_under250K",
          "type": "bool"
        }
      ],
      "name": "new_Investor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "view_can_release_percent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "investor_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens_received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lock_start",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "under250k_investor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "6": "contracts/LockContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        1383
      ],
      "Context": [
        1405
      ],
      "IERC20": [
        1571
      ],
      "LockContract": [
        759
      ],
      "Math": [
        1493
      ],
      "Ownable": [
        864
      ],
      "SafeERC20": [
        1088
      ]
    },
    "id": 760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:6"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 1089,
        "src": "132:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 1384,
        "src": "198:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 1406,
        "src": "250:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 1494,
        "src": "302:53:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 865,
        "src": "356:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1405,
              "src": "871:7:6"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "871:7:6"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 864,
              "src": "880:7:6"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "880:7:6"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "410:435:6",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 759,
        "linearizedBaseContracts": [
          759,
          864,
          1405
        ],
        "name": "LockContract",
        "nameLocation": "855:12:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "df129979",
            "id": 14,
            "mutability": "mutable",
            "name": "legacy_token",
            "nameLocation": "922:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "908:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1571",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1571,
                "src": "908:6:6"
              },
              "referencedDeclaration": 1571,
              "src": "908:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1571",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 20,
            "name": "ERC20Released",
            "nameLocation": "960:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "990:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "974:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1006:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "998:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:40:6"
            },
            "src": "954:60:6"
          },
          {
            "constant": false,
            "functionSelector": "92347b5e",
            "id": 25,
            "mutability": "mutable",
            "name": "walletToInvestor",
            "nameLocation": "1071:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1035:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
              "typeString": "mapping(address => struct LockContract.Investor)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1043:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1035:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                "typeString": "mapping(address => struct LockContract.Investor)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36,
                  "src": "1054:8:6"
                },
                "referencedDeclaration": 36,
                "src": "1054:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                  "typeString": "struct LockContract.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Investor",
            "id": 36,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "investor_address",
                "nameLocation": "1142:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1134:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1134:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "tokens_received",
                "nameLocation": "1204:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1196:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1196:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1283:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1275:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1275:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "lock_start",
                "nameLocation": "1541:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1533:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1533:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "under250k_investor",
                "nameLocation": "1623:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1618:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 34,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1115:8:6",
            "nodeType": "StructDefinition",
            "scope": 759,
            "src": "1108:612:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "investor_address",
            "nameLocation": "1752:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1742:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1742:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 38,
              "nodeType": "ArrayTypeName",
              "src": "1742:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "addresses_O50I",
            "nameLocation": "1825:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1815:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1815:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 41,
              "nodeType": "ArrayTypeName",
              "src": "1815:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "addresses_O250I",
            "nameLocation": "1855:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1845:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1845:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1845:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "tokens_O50I",
            "nameLocation": "1886:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1876:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1876:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1876:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "tokens_O250I",
            "nameLocation": "1913:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1903:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1903:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 50,
              "nodeType": "ArrayTypeName",
              "src": "1903:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "percent_per_milestone",
            "nameLocation": "1941:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1931:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1931:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 53,
              "nodeType": "ArrayTypeName",
              "src": "1931:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "initLock",
            "nameLocation": "1976:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "1968:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1968:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "erc20Released",
            "nameLocation": "2021:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2013:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2013:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "numMilestones",
            "nameLocation": "2082:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2074:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2074:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "num_O50I",
            "nameLocation": "2171:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2163:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2163:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "num_O250I",
            "nameLocation": "2238:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2230:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2230:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "totalTokens_O50I",
            "nameLocation": "2305:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2297:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2297:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "totalTokens_O250I",
            "nameLocation": "2400:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2392:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2392:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "2502:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2494:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2494:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "2550:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 759,
            "src": "2536:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 71,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2536:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "3147:3236:6",
              "statements": [
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3233:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3257:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3233:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "3233:46:6"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3329:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "_addresses_O50I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3340:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3340:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3329:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:33:6"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3402:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 107,
                        "name": "_addresses_O250I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3414:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3414:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3402:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:35:6"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3531:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 112,
                      "name": "_addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "3547:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3531:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:31:6"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 115,
                      "name": "addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3602:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "3619:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3602:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "3602:33:6"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3735:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 120,
                      "name": "_tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3749:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3735:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:26:6"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3801:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "3816:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3801:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:28:6"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "totalTokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3926:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 128,
                      "name": "_tokens_O50ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "3945:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3926:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:36:6"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "totalTokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "4002:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_tokens_O250ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "4022:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4002:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "4002:38:6"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "4194:887:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 146,
                                  "name": "addresses_O50I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42,
                                  "src": "4275:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 148,
                                "indexExpression": {
                                  "id": 147,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136,
                                  "src": "4290:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4275:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4304:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4296:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 149,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4296:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4296:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4275:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4329:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 145,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4267:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4267:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "4267:117:6"
                      },
                      {
                        "assignments": [
                          158
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 158,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "4494:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "4486:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 157,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4486:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 162,
                        "initialValue": {
                          "baseExpression": {
                            "id": 159,
                            "name": "addresses_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4514:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 161,
                          "indexExpression": {
                            "id": 160,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "4529:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4514:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4486:45:6"
                      },
                      {
                        "assignments": [
                          164
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 164,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "4553:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "4545:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 163,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4545:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 168,
                        "initialValue": {
                          "baseExpression": {
                            "id": 165,
                            "name": "tokens_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "4572:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 167,
                          "indexExpression": {
                            "id": 166,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "4584:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4572:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4545:41:6"
                      },
                      {
                        "assignments": [
                          171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 171,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "4674:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "4658:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 170,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 169,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "4658:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "4658:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 180,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 173,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "4694:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4762:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 175,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "4814:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 176,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4881:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4881:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4947:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 172,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4685:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4685:267:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4658:294:6"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 181,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "5025:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 183,
                            "indexExpression": {
                              "id": 182,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "5042:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5025:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5061:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "5025:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "5025:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "4178:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 140,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4180:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4178:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 188,
                  "initializationExpression": {
                    "assignments": [
                      136
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4173:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "4168:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4168:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4175:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4168:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4190:3:6",
                      "subExpression": {
                        "id": 142,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4190:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144,
                    "nodeType": "ExpressionStatement",
                    "src": "4190:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "4163:918:6"
                },
                {
                  "body": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "5205:891:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 200,
                                  "name": "addresses_O250I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "5286:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 202,
                                "indexExpression": {
                                  "id": 201,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 190,
                                  "src": "5302:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5286:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5316:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5308:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 203,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5308:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5308:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5286:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5341:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5278:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5278:118:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "5278:118:6"
                      },
                      {
                        "assignments": [
                          212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 212,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "5506:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 241,
                            "src": "5498:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5498:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 216,
                        "initialValue": {
                          "baseExpression": {
                            "id": 213,
                            "name": "addresses_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "5526:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 215,
                          "indexExpression": {
                            "id": 214,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "5542:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5526:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5498:46:6"
                      },
                      {
                        "assignments": [
                          218
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 218,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "5566:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 241,
                            "src": "5558:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5558:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 222,
                        "initialValue": {
                          "baseExpression": {
                            "id": 219,
                            "name": "tokens_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5585:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 221,
                          "indexExpression": {
                            "id": 220,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "5598:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5585:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5558:42:6"
                      },
                      {
                        "assignments": [
                          225
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 225,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "5688:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 241,
                            "src": "5672:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 224,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 223,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "5672:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "5672:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 234,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 227,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "5708:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5776:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 229,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "5828:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 230,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5895:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5895:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5961:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 226,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "5699:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5699:268:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5672:295:6"
                      },
                      {
                        "expression": {
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 235,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6040:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 237,
                            "indexExpression": {
                              "id": 236,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "6057:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6040:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 238,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "6076:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "6040:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "6040:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 193,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "5188:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 194,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5190:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5188:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "initializationExpression": {
                    "assignments": [
                      190
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5183:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 242,
                        "src": "5178:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5178:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 192,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5185:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5178:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5201:3:6",
                      "subExpression": {
                        "id": 196,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "5201:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 198,
                    "nodeType": "ExpressionStatement",
                    "src": "5201:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5173:923:6"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 243,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "6141:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 244,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "6156:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6141:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "6141:28:6"
                },
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "legacy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "6254:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1571",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 249,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "6276:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 248,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "6269:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6269:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1571",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6254:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1571",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:36:6"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 253,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6361:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6370:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6361:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:14:6"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "2614:95:6",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 258,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_addresses_O50I",
                  "nameLocation": "2752:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2735:32:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2735:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 75,
                    "nodeType": "ArrayTypeName",
                    "src": "2735:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_addresses_O250I",
                  "nameLocation": "2794:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2777:33:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2777:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78,
                    "nodeType": "ArrayTypeName",
                    "src": "2777:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_tokens_O50I",
                  "nameLocation": "2837:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2820:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2820:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "nodeType": "ArrayTypeName",
                    "src": "2820:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_tokens_O250I",
                  "nameLocation": "2876:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2859:30:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 83,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2859:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 84,
                    "nodeType": "ArrayTypeName",
                    "src": "2859:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_percent_per_milestone",
                  "nameLocation": "2916:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2899:39:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2899:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87,
                    "nodeType": "ArrayTypeName",
                    "src": "2899:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_tokens_O50ITotal",
                  "nameLocation": "2956:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2948:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_tokens_O250ITotal",
                  "nameLocation": "3063:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "3055:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3055:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3127:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "3119:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:421:6"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3147:0:6"
            },
            "scope": 759,
            "src": "2714:3669:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "6477:109:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6495:7:6",
                        "subExpression": {
                          "id": 262,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "6496:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072652d656e7472616e6379",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6504:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        },
                        "value": "No re-entrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6487:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:34:6"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 267,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6531:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6540:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6531:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "6531:13:6"
                },
                {
                  "id": 271,
                  "nodeType": "PlaceholderStatement",
                  "src": "6554:1:6"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6565:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6574:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6565:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:14:6"
                }
              ]
            },
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "6406:43:6",
              "text": " @dev Prevents reentrancy"
            },
            "id": 277,
            "name": "noReentrant",
            "nameLocation": "6463:11:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6474:2:6"
            },
            "src": "6454:132:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "6732:331:6",
              "statements": [
                {
                  "assignments": [
                    284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "6750:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "6742:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6742:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6783:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6783:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 290,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6802:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6802:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6795:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 288,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "6795:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6795:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 285,
                      "name": "can_release_percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "6763:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$returns$_t_uint256_$",
                        "typeString": "function (address,uint64) returns (uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6742:77:6"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 295,
                      "name": "erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6829:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 296,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "6846:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6829:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "6829:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 300,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6885:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 301,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6899:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 299,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6871:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6871:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "EmitStatement",
                  "src": "6866:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 308,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "6950:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 307,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "6943:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1571_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6943:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1571",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6965:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6965:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 312,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "6977:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1571",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 304,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "6920:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1088_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 895,
                      "src": "6920:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1571_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6920:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "6920:68:6"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 315,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6998:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 318,
                        "indexExpression": {
                          "expression": {
                            "id": 316,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7015:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7015:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6998:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "6998:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 320,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "7046:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6998:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "6998:58:6"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "6592:88:6",
              "text": " @dev Release the tokens \n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 280,
                  "name": "noReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 277,
                  "src": "6719:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6719:13:6"
              }
            ],
            "name": "release",
            "nameLocation": "6694:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6701:2:6"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6732:0:6"
            },
            "scope": 759,
            "src": "6685:378:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "7384:2339:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 335,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7477:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 338,
                            "indexExpression": {
                              "expression": {
                                "id": 336,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7494:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7494:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7477:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "7477:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 340,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7524:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 343,
                            "indexExpression": {
                              "expression": {
                                "id": 341,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7541:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7541:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7524:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "7524:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7477:91:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7587:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7469:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7469:149:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "7469:149:6"
                },
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "7646:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "7638:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7638:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 353,
                  "initialValue": {
                    "expression": {
                      "id": 351,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "7662:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "7662:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7638:39:6"
                },
                {
                  "assignments": [
                    355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 355,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "7696:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "7688:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7688:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 357,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7711:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7688:24:6"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "7785:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "7777:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7777:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7806:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7777:30:6"
                },
                {
                  "assignments": [
                    363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 363,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "7823:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "7818:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 362,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7818:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 364,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7842:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 367,
                      "indexExpression": {
                        "expression": {
                          "id": 365,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7859:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7859:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7842:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "7842:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7818:68:6"
                },
                {
                  "body": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "7959:1210:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 381,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "7985:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 382,
                                      "name": "walletToInvestor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "8002:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                        "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                      }
                                    },
                                    "id": 385,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 383,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "8019:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 384,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8019:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8002:28:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                                      "typeString": "struct LockContract.Investor storage ref"
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lock_start",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "8002:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8042:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 388,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 371,
                                    "src": "8050:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8042:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8002:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 391,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8001:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7985:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 464,
                          "nodeType": "Block",
                          "src": "8736:423:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 427,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "8830:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 428,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 350,
                                      "src": "8851:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8867:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 432,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 430,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 371,
                                              "src": "8876:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 431,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8878:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "8876:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 433,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8875:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8867:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8851:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 436,
                                        "name": "walletToInvestor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "8881:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                        }
                                      },
                                      "id": 439,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 437,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "8898:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "8898:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8881:28:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                                        "typeString": "struct LockContract.Investor storage ref"
                                      }
                                    },
                                    "id": 440,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lock_start",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "8881:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8851:69:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8830:90:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 443,
                              "nodeType": "ExpressionStatement",
                              "src": "8830:90:6"
                            },
                            {
                              "expression": {
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 444,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "8955:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 445,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 355,
                                    "src": "8970:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 456,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 454,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 452,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 446,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 363,
                                            "src": "9006:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 447,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "9046:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 451,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 450,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 448,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 371,
                                                "src": "9068:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 449,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9070:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "9068:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9046:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9006:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31303030",
                                          "id": 453,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9073:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000_by_1",
                                            "typeString": "int_const 1000"
                                          },
                                          "value": "1000"
                                        },
                                        "src": "9006:71:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 455,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9078:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "9006:79:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 457,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 359,
                                      "src": "9088:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9006:100:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8970:136:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8955:151:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 461,
                              "nodeType": "ExpressionStatement",
                              "src": "8955:151:6"
                            },
                            {
                              "expression": {
                                "id": 462,
                                "name": "_can_release",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "9132:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 333,
                              "id": 463,
                              "nodeType": "Return",
                              "src": "9125:19:6"
                            }
                          ]
                        },
                        "id": 465,
                        "nodeType": "IfStatement",
                        "src": "7982:1177:6",
                        "trueBody": {
                          "id": 426,
                          "nodeType": "Block",
                          "src": "8053:679:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 393,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 359,
                                  "src": "8213:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8233:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 395,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 371,
                                      "src": "8241:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8233:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8244:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 400,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 398,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 371,
                                            "src": "8253:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 399,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8255:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8253:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 401,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8252:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8244:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8233:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8213:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 405,
                              "nodeType": "ExpressionStatement",
                              "src": "8213:44:6"
                            },
                            {
                              "expression": {
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 406,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "8386:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 407,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 355,
                                    "src": "8401:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 408,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 363,
                                            "src": "8437:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 409,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "8477:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 413,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 412,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 410,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 371,
                                                "src": "8499:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 411,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8501:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "8499:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8477:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8437:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31303030",
                                          "id": 415,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8504:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000_by_1",
                                            "typeString": "int_const 1000"
                                          },
                                          "value": "1000"
                                        },
                                        "src": "8437:71:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8509:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "8437:79:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 419,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 359,
                                      "src": "8519:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8437:100:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8401:136:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8386:151:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 423,
                              "nodeType": "ExpressionStatement",
                              "src": "8386:151:6"
                            },
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8716:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 333,
                              "id": 425,
                              "nodeType": "Return",
                              "src": "8709:8:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 374,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "7921:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 375,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "7925:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7925:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7921:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 467,
                  "initializationExpression": {
                    "assignments": [
                      371
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7914:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "7909:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7909:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 373,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7918:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7909:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7955:3:6",
                      "subExpression": {
                        "id": 378,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "7955:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 380,
                    "nodeType": "ExpressionStatement",
                    "src": "7955:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7905:1264:6"
                },
                {
                  "assignments": [
                    469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "9252:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "9244:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9244:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 474,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 470,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "9269:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "id": 471,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "9286:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9269:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "9269:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9244:73:6"
                },
                {
                  "assignments": [
                    476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 476,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "9408:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "9400:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9400:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 480,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 477,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "9427:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 478,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "9442:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9427:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9400:56:6"
                },
                {
                  "expression": {
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 481,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "9485:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 483,
                        "indexExpression": {
                          "id": 482,
                          "name": "_callerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "9502:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9485:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "9485:48:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 485,
                            "name": "walletToInvestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "9536:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                              "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "id": 486,
                            "name": "_callerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "9553:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9536:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens_received",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "9536:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 489,
                        "name": "_able_to_release",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "9648:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9536:128:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9485:179:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "9485:179:6"
                },
                {
                  "expression": {
                    "id": 493,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 476,
                    "src": "9700:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 333,
                  "id": 494,
                  "nodeType": "Return",
                  "src": "9692:24:6"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "7070:203:6",
              "text": " @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n Updates the investor struct with the amount of tokens he has withdrawn."
            },
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "can_release_percent",
            "nameLocation": "7287:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "7315:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "7307:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7307:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "7338:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "7331:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7331:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7306:42:6"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "7375:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7375:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7374:9:6"
            },
            "scope": 759,
            "src": "7278:2445:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "9871:1212:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 509,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "10014:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 507,
                              "name": "legacy_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "9991:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1571",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1510,
                            "src": "9991:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9991:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 511,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "10038:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9991:54:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b656e7320666f722074686520707269636520726571756972656d656e742e",
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10056:64:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        },
                        "value": "You don't have enough Legacy tokens for the price requirement."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9983:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9983:138:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "9983:138:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 517,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10140:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 519,
                            "indexExpression": {
                              "id": 518,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "10157:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10140:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "10140:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10197:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10140:58:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320697320616c726561647920696e207468652076657374696e6720636f6e74726163742e",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10209:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        },
                        "value": "This address is already in the vesting contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10132:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10132:128:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "10132:128:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 529,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "10344:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10374:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$759",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$759",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10366:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10366:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10366:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 534,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "10381:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 526,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "10318:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1571",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1552,
                      "src": "10318:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10318:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "10318:71:6"
                },
                {
                  "condition": {
                    "id": 537,
                    "name": "_under250K",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 503,
                    "src": "10403:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 562,
                    "nodeType": "Block",
                    "src": "10523:87:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 551,
                              "name": "addresses_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "10537:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10537:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$_t_address_$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer) returns (address)"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10537:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 555,
                        "nodeType": "ExpressionStatement",
                        "src": "10537:22:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 559,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "10591:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 556,
                              "name": "tokens_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "10573:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10573:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10573:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "10573:26:6"
                      }
                    ]
                  },
                  "id": 563,
                  "nodeType": "IfStatement",
                  "src": "10400:210:6",
                  "trueBody": {
                    "id": 550,
                    "nodeType": "Block",
                    "src": "10414:105:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 541,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "10448:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 538,
                              "name": "addresses_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "10428:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10428:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10428:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 543,
                        "nodeType": "ExpressionStatement",
                        "src": "10428:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 547,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 499,
                              "src": "10500:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 544,
                              "name": "tokens_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "10483:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10483:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10483:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 549,
                        "nodeType": "ExpressionStatement",
                        "src": "10483:25:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "investor",
                      "nameLocation": "10677:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 585,
                      "src": "10661:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor"
                      },
                      "typeName": {
                        "id": 565,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 564,
                          "name": "Investor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "10661:8:6"
                        },
                        "referencedDeclaration": 36,
                        "src": "10661:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                          "typeString": "struct LockContract.Investor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 578,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 568,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "10697:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10768:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 570,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 499,
                        "src": "10820:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 573,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10885:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10885:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10878:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 571,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "10878:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10878:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10951:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 567,
                      "name": "Investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "10688:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                        "typeString": "type(struct LockContract.Investor storage pointer)"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10688:268:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                      "typeString": "struct LockContract.Investor memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10661:295:6"
                },
                {
                  "expression": {
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 579,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11027:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 581,
                      "indexExpression": {
                        "id": 580,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "11044:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11027:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 582,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 566,
                      "src": "11066:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor memory"
                      }
                    },
                    "src": "11027:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                      "typeString": "struct LockContract.Investor storage ref"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "11027:47:6"
                }
              ]
            },
            "documentation": {
              "id": 497,
              "nodeType": "StructuredDocumentation",
              "src": "9729:44:6",
              "text": " @dev Adds a new Investor."
            },
            "functionSelector": "d41d826a",
            "id": 586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "new_Investor",
            "nameLocation": "9787:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9808:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "9800:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9800:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "_newInvestor_address",
                  "nameLocation": "9825:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "9817:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9817:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_under250K",
                  "nameLocation": "9852:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 586,
                  "src": "9847:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9847:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9799:64:6"
            },
            "returnParameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9871:0:6"
            },
            "scope": 759,
            "src": "9778:1305:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 742,
              "nodeType": "Block",
              "src": "11261:2128:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 593,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11354:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 596,
                            "indexExpression": {
                              "expression": {
                                "id": 594,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11371:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11371:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11354:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "11354:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 598,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11401:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 601,
                            "indexExpression": {
                              "expression": {
                                "id": 599,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11418:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11418:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11401:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "11401:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11354:91:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11464:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11346:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11346:149:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "11346:149:6"
                },
                {
                  "assignments": [
                    608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "11523:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "11515:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11515:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 611,
                  "initialValue": {
                    "expression": {
                      "id": 609,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "11539:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "11539:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11515:39:6"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "11573:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "11565:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11565:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 615,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11588:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11565:24:6"
                },
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "11662:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "11654:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11654:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 619,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11683:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11654:30:6"
                },
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "11700:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "11695:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11695:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 627,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 622,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11719:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "expression": {
                          "id": 623,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11736:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11736:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11719:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "11719:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11695:68:6"
                },
                {
                  "body": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "11836:1210:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 639,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "11862:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 640,
                                      "name": "walletToInvestor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "11879:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                        "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                      }
                                    },
                                    "id": 643,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 641,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "11896:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 642,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "11896:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11879:28:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                                      "typeString": "struct LockContract.Investor storage ref"
                                    }
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lock_start",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "11879:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11919:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 646,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "11927:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11919:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11879:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 649,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11878:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11862:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 722,
                          "nodeType": "Block",
                          "src": "12613:423:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 685,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "12707:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 693,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 686,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 608,
                                      "src": "12728:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 687,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12744:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 690,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 688,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 629,
                                              "src": "12753:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 689,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12755:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "12753:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 691,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "12752:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12744:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12728:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 694,
                                        "name": "walletToInvestor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "12758:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                        }
                                      },
                                      "id": 697,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 695,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "12775:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 696,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "12775:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12758:28:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                                        "typeString": "struct LockContract.Investor storage ref"
                                      }
                                    },
                                    "id": 698,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lock_start",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "12758:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12728:69:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12707:90:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 701,
                              "nodeType": "ExpressionStatement",
                              "src": "12707:90:6"
                            },
                            {
                              "expression": {
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 702,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "12832:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 703,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 613,
                                    "src": "12847:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 712,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 710,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 704,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 621,
                                            "src": "12883:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 705,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "12923:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 709,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 708,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 706,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 629,
                                                "src": "12945:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 707,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12947:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "12945:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12923:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12883:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31303030",
                                          "id": 711,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12950:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000_by_1",
                                            "typeString": "int_const 1000"
                                          },
                                          "value": "1000"
                                        },
                                        "src": "12883:71:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12955:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "12883:79:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 715,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 617,
                                      "src": "12965:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12883:100:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12847:136:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12832:151:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 719,
                              "nodeType": "ExpressionStatement",
                              "src": "12832:151:6"
                            },
                            {
                              "expression": {
                                "id": 720,
                                "name": "_can_release",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "13009:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 591,
                              "id": 721,
                              "nodeType": "Return",
                              "src": "13002:19:6"
                            }
                          ]
                        },
                        "id": 723,
                        "nodeType": "IfStatement",
                        "src": "11859:1177:6",
                        "trueBody": {
                          "id": 684,
                          "nodeType": "Block",
                          "src": "11930:679:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 651,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "12090:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12110:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 653,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "12118:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12110:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12121:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 658,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 656,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 629,
                                            "src": "12130:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 657,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12132:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "12130:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 659,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12129:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12121:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12110:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12090:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 663,
                              "nodeType": "ExpressionStatement",
                              "src": "12090:44:6"
                            },
                            {
                              "expression": {
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 664,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "12263:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 665,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 613,
                                    "src": "12278:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 678,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 674,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 672,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 666,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 621,
                                            "src": "12314:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 667,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "12354:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 671,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 670,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 668,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 629,
                                                "src": "12376:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 669,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12378:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "12376:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12354:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12314:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31303030",
                                          "id": 673,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12381:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000_by_1",
                                            "typeString": "int_const 1000"
                                          },
                                          "value": "1000"
                                        },
                                        "src": "12314:71:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12386:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "12314:79:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 677,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 617,
                                      "src": "12396:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12314:100:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12278:136:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12263:151:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 681,
                              "nodeType": "ExpressionStatement",
                              "src": "12263:151:6"
                            },
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12593:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 591,
                              "id": 683,
                              "nodeType": "Return",
                              "src": "12586:8:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 632,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "11798:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 633,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "11802:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11802:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11798:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "initializationExpression": {
                    "assignments": [
                      629
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11791:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "11786:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11786:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 631,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11795:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11786:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11832:3:6",
                      "subExpression": {
                        "id": 636,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "11832:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 638,
                    "nodeType": "ExpressionStatement",
                    "src": "11832:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "11782:1264:6"
                },
                {
                  "assignments": [
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 727,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "13129:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "13121:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13121:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 728,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "13146:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 731,
                      "indexExpression": {
                        "expression": {
                          "id": 729,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13163:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13163:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13146:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "13146:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13121:69:6"
                },
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "13281:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 742,
                      "src": "13273:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13273:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 739,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 736,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "13300:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 737,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "13315:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13300:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13273:56:6"
                },
                {
                  "expression": {
                    "id": 740,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 735,
                    "src": "13366:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 741,
                  "nodeType": "Return",
                  "src": "13358:24:6"
                }
              ]
            },
            "documentation": {
              "id": 587,
              "nodeType": "StructuredDocumentation",
              "src": "11089:101:6",
              "text": " @dev View function that an investor can use to see how many tokens he can withdraw"
            },
            "functionSelector": "f5cd7277",
            "id": 743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "view_can_release_percent",
            "nameLocation": "11204:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11228:2:6"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "11252:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11252:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11251:9:6"
            },
            "scope": 759,
            "src": "11195:2194:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "13519:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 753,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13567:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$759",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$759",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13559:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13559:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13559:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 749,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "13536:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1571",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1510,
                      "src": "13536:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13536:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 748,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "13529:44:6"
                }
              ]
            },
            "documentation": {
              "id": 744,
              "nodeType": "StructuredDocumentation",
              "src": "13395:61:6",
              "text": " @dev View function to get contract balance"
            },
            "functionSelector": "057440d3",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contract_balance",
            "nameLocation": "13470:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13486:2:6"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "13510:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13510:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13509:9:6"
            },
            "scope": 759,
            "src": "13461:119:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 760,
        "src": "846:12736:6",
        "usedErrors": []
      }
    ],
    "src": "107:13475:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001982380380620019828339810160408190526200003491620006b4565b6200003f336200043b565b8351620000549060089060208701906200048b565b508751600c8190558751600d55620000749060049060208b0190620004db565b5086516200008a9060059060208a0190620004db565b508551620000a09060069060208901906200048b565b508451620000b69060079060208801906200048b565b50600e839055600f82905560005b600c54811015620002625760006001600160a01b031660048281548110620000f057620000f0620007bb565b6000918252602090912001546001600160a01b0316036200016d5760405162461bcd60e51b815260206004820152603460248201526000805160206200196283398151915260448201527f72657373206973207a65726f206164647265737300000000000000000000000060648201526084015b60405180910390fd5b600060048281548110620001855762000185620007bb565b6000918252602082200154600680546001600160a01b0390921693509084908110620001b557620001b5620007bb565b6000918252602080832091909101546040805160a0810182526001600160a01b03968716808252818501868152828401948552426060840190815260016080850181815293895260029788905294909720925183546001600160a01b03191699169890981782559651918101919091559051918101919091559051600382015591516004909201805460ff19169215159290921790915550806200025981620007d1565b915050620000c4565b5060005b600d54811015620003fb5760006001600160a01b031660058281548110620002925762000292620007bb565b6000918252602090912001546001600160a01b0316036200030b5760405162461bcd60e51b815260206004820152603460248201526000805160206200196283398151915260448201527f72657373206973207a65726f2061646472657373000000000000000000000000606482015260840162000164565b600060058281548110620003235762000323620007bb565b6000918252602082200154600780546001600160a01b0390921693509084908110620003535762000353620007bb565b6000918252602080832091909101546040805160a0810182526001600160a01b0396871680825281850186815282840194855242606084019081526080840188815292885260029687905293909620915182546001600160a01b03191698169790971781559351600185015590519183019190915551600382015591516004909201805460ff1916921515929092179091555080620003f281620007d1565b91505062000266565b5060108054600180546001600160a01b0319166001600160a01b0390941693841790556001600160a81b031916909117905550620007f995505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620004c9579160200282015b82811115620004c9578251825591602001919060010190620004ac565b50620004d792915062000533565b5090565b828054828255906000526020600020908101928215620004c9579160200282015b82811115620004c957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620004fc565b5b80821115620004d7576000815560010162000534565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200058b576200058b6200054a565b604052919050565b60006001600160401b03821115620005af57620005af6200054a565b5060051b60200190565b80516001600160a01b0381168114620005d157600080fd5b919050565b600082601f830112620005e857600080fd5b8151602062000601620005fb8362000593565b62000560565b82815260059290921b840181019181810190868411156200062157600080fd5b8286015b8481101562000647576200063981620005b9565b835291830191830162000625565b509695505050505050565b600082601f8301126200066457600080fd5b8151602062000677620005fb8362000593565b82815260059290921b840181019181810190868411156200069757600080fd5b8286015b848110156200064757805183529183019183016200069b565b600080600080600080600080610100898b031215620006d257600080fd5b88516001600160401b0380821115620006ea57600080fd5b620006f88c838d01620005d6565b995060208b01519150808211156200070f57600080fd5b6200071d8c838d01620005d6565b985060408b01519150808211156200073457600080fd5b620007428c838d0162000652565b975060608b01519150808211156200075957600080fd5b620007678c838d0162000652565b965060808b01519150808211156200077e57600080fd5b506200078d8b828c0162000652565b94505060a0890151925060c08901519150620007ac60e08a01620005b9565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b600060018201620007f257634e487b7160e01b600052601160045260246000fd5b5060010190565b61115980620008096000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806392347b5e1161006657806392347b5e146100ea578063d41d826a14610168578063df1299791461017b578063f2fde38b1461018e578063f5cd7277146101a157600080fd5b8063057440d314610098578063715018a6146100b357806386d1a69f146100bd5780638da5cb5b146100c5575b600080fd5b6100a06101a9565b6040519081526020015b60405180910390f35b6100bb61021b565b005b6100bb610286565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100aa565b6101346100f8366004610f69565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100aa565b6100bb610176366004610f92565b610399565b6001546100d2906001600160a01b031681565b6100bb61019c366004610f69565b6106d4565b6100a061079f565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610fd2565b905090565b6000546001600160a01b0316331461027a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61028460006109d4565b565b601054600160a01b900460ff16156102d15760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610271565b6010805460ff60a01b1916600160a01b17905560006102f03342610a24565b905080600a60008282546103049190611001565b90915550506010546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a2601054610362906001600160a01b03163383610cb1565b3360009081526002602052604081206001018054839290610384908490611001565b90915550506010805460ff60a01b1916905550565b6001546040516370a0823160e01b81526001600160a01b038481166004830152859216906370a0823190602401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610fd2565b101561047b5760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610271565b6001600160a01b03821660009081526002602081905260409091200154156104fe5760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610271565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611019565b5080156105ff576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0183905561063d565b6005805460019081019091556007805491820181556000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018390555b506040805160a0810182526001600160a01b03928316808252600060208084018281528486019788524267ffffffffffffffff166060860190815260016080870181815295855260029384905296909320945185546001600160a01b031916971696909617845594519383019390935593519281019290925551600382015590516004909101805460ff1916911515919091179055565b6000546001600160a01b0316331461072e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610271565b6001600160a01b0381166107935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610271565b61079c816109d4565b50565b336000908152600260208190526040822090810154600190910154106108075760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610271565b336000908152600260208190526040822001544291908190600160085481116109aa576108378162278d00611036565b336000908152600260205260409020600301546108549190611001565b8511156108fc57610866600182611055565b6108739062278d00611036565b6108808262278d00611036565b61088a9190611055565b92508262278d006103e860086108a1600186611055565b815481106108b1576108b161106c565b9060005260206000200154856108c79190611036565b6108d19190611082565b6108db9190611082565b6108e59190611036565b6108ef9085611001565b5060009695505050505050565b3360009081526002602052604090206003015461091a600183611055565b6109279062278d00611036565b6109319087611055565b61093b9190611055565b92508262278d006103e86008610952600186611055565b815481106109625761096261106c565b9060005260206000200154856109789190611036565b6109829190611082565b61098c9190611082565b6109969190611036565b6109a09085611001565b9695505050505050565b5033600090815260026020526040812060010154906109c98286611055565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33600090815260026020819052604082209081015460019091015410610a8c5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610271565b33600090815260026020819052604082200154429190819060016008548111610c3557610abc8162278d00611036565b33600090815260026020526040902060030154610ad99190611001565b851115610b8457610aeb600182611055565b610af89062278d00611036565b610b058262278d00611036565b610b0f9190611055565b92508262278d006103e86008610b26600186611055565b81548110610b3657610b3661106c565b906000526020600020015485610b4c9190611036565b610b569190611082565b610b609190611082565b610b6a9190611036565b610b749085611001565b9350600095505050505050610cab565b33600090815260026020526040902060030154610ba2600183611055565b610baf9062278d00611036565b610bb99087611055565b610bc39190611055565b92508262278d006103e86008610bda600186611055565b81548110610bea57610bea61106c565b906000526020600020015485610c009190611036565b610c0a9190611082565b610c149190611082565b610c1e9190611036565b610c289085611001565b9550610cab945050505050565b506001600160a01b03871660009081526002602052604081206001015490610c5d8286611055565b6001600160a01b038a16600090815260026020526040902060010154909150610c87908290611001565b6001600160a01b038a16600090815260026020526040902060010155955050505050505b92915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d03908490610d08565b505050565b6000610d5d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dda9092919063ffffffff16565b805190915015610d035780806020019051810190610d7b9190611019565b610d035760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610271565b6060610de98484600085610df3565b90505b9392505050565b606082471015610e545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610271565b6001600160a01b0385163b610eab5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610271565b600080866001600160a01b03168587604051610ec791906110d4565b60006040518083038185875af1925050503d8060008114610f04576040519150601f19603f3d011682016040523d82523d6000602084013e610f09565b606091505b50915091506109c982828660608315610f23575081610dec565b825115610f335782518084602001fd5b8160405162461bcd60e51b815260040161027191906110f0565b80356001600160a01b0381168114610f6457600080fd5b919050565b600060208284031215610f7b57600080fd5b610dec82610f4d565b801515811461079c57600080fd5b600080600060608486031215610fa757600080fd5b83359250610fb760208501610f4d565b91506040840135610fc781610f84565b809150509250925092565b600060208284031215610fe457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561101457611014610feb565b500190565b60006020828403121561102b57600080fd5b8151610dec81610f84565b600081600019048311821515161561105057611050610feb565b500290565b60008282101561106757611067610feb565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261109f57634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156110bf5781810151838201526020016110a7565b838111156110ce576000848401525b50505050565b600082516110e68184602087016110a4565b9190910192915050565b602081526000825180602084015261110f8160408501602087016110a4565b601f01601f1916919091016040019291505056fea264697066735822122032adf768166ef965a76f78418fbfa23189072ea48d4c43a23438806856b00a7164736f6c634300080f0033436f6e7374727563746f723a206c6f636b656420496e766573746f7220616464",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "54": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "55": [
            3735,
            3756,
            false
          ],
          "56": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "51": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "52": [
            7735,
            7742,
            false
          ],
          "53": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "6": {
        "LockContract.can_release_percent": {
          "49": [
            7477,
            7568,
            true
          ],
          "50": [
            7985,
            8052,
            false
          ]
        },
        "LockContract.new_Investor": {
          "44": [
            9991,
            10045,
            true
          ],
          "45": [
            10140,
            10198,
            true
          ],
          "46": [
            10403,
            10413,
            false
          ]
        },
        "LockContract.view_can_release_percent": {
          "47": [
            11354,
            11445,
            true
          ],
          "48": [
            11862,
            11929,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "24": [
            2378,
            2395
          ],
          "25": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "16": [
            1998,
            2071
          ],
          "17": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "36": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "35": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "37": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "38": [
            5137,
            5218
          ],
          "40": [
            5228,
            5288
          ],
          "41": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "39": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "42": [
            7758,
            7775
          ],
          "43": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "6": {
        "LockContract.can_release_percent": {
          "26": [
            7469,
            7618
          ],
          "27": [
            8213,
            8257
          ],
          "28": [
            8386,
            8537
          ],
          "29": [
            8709,
            8717
          ],
          "30": [
            8830,
            8920
          ],
          "31": [
            8955,
            9106
          ],
          "32": [
            9125,
            9144
          ],
          "33": [
            9485,
            9664
          ],
          "34": [
            9692,
            9716
          ]
        },
        "LockContract.contract_balance": {
          "1": [
            13529,
            13573
          ]
        },
        "LockContract.new_Investor": {
          "8": [
            9983,
            10121
          ],
          "9": [
            10132,
            10260
          ],
          "10": [
            10318,
            10389
          ],
          "11": [
            10428,
            10469
          ],
          "12": [
            10483,
            10508
          ],
          "13": [
            10537,
            10559
          ],
          "14": [
            10573,
            10599
          ],
          "15": [
            11027,
            11074
          ]
        },
        "LockContract.release": {
          "4": [
            6829,
            6856
          ],
          "5": [
            6866,
            6910
          ],
          "6": [
            6920,
            6988
          ],
          "7": [
            6998,
            7056
          ]
        },
        "LockContract.view_can_release_percent": {
          "18": [
            11346,
            11495
          ],
          "19": [
            12090,
            12134
          ],
          "20": [
            12263,
            12414
          ],
          "21": [
            12586,
            12594
          ],
          "22": [
            12707,
            12797
          ],
          "23": [
            12832,
            12983
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "846:12736:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13461:119;;;:::i;:::-;;;160:25:7;;;148:2;133:18;13461:119:6;;;;;;;;1668:101:0;;;:::i;:::-;;6685:378:6;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;360:32:7;;;342:51;;330:2;315:18;1036:85:0;196:203:7;1035:52:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:52:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1044:32:7;;;1026:51;;1108:2;1093:18;;1086:34;;;;1136:18;;;1129:34;;;;1194:2;1179:18;;1172:34;1250:14;1243:22;1237:3;1222:19;;1215:51;1013:3;998:19;1035:52:6;773:499:7;9778:1305:6;;;;;;:::i;:::-;;:::i;908:26::-;;;;;-1:-1:-1;;;;;908:26:6;;;1918:198:0;;;;;;:::i;:::-;;:::i;11195:2194:6:-;;;:::i;13461:119::-;13536:12;;:37;;-1:-1:-1;;;13536:37:6;;13567:4;13536:37;;;342:51:7;13510:7:6;;-1:-1:-1;;;;;13536:12:6;;:22;;315:18:7;;13536:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13529:44;;13461:119;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:7;1240:68:0;;;2384:21:7;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;6685:378:6:-;6496:6;;-1:-1:-1;;;6496:6:6;;;;6495:7;6487:34;;;;-1:-1:-1;;;6487:34:6;;2763:2:7;6487:34:6;;;2745:21:7;2802:2;2782:18;;;2775:30;-1:-1:-1;;;2821:18:7;;;2814:44;2875:18;;6487:34:6;2561:338:7;6487:34:6;6531:6;:13;;-1:-1:-1;;;;6531:13:6;-1:-1:-1;;;6531:13:6;;;;6763:56:::1;6783:10;6802:15;6763:19;:56::i;:::-;6742:77;;6846:10;6829:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6885:12:6::1;::::0;6871:39:::1;::::0;160:25:7;;;-1:-1:-1;;;;;6885:12:6;;::::1;::::0;6871:39:::1;::::0;148:2:7;133:18;6871:39:6::1;;;;;;;6950:12;::::0;6920:68:::1;::::0;-1:-1:-1;;;;;6950:12:6::1;6965:10;6977::::0;6920:22:::1;:68::i;:::-;7015:10;6998:28;::::0;;;:16:::1;:28;::::0;;;;:44:::1;;:58:::0;;7046:10;;6998:28;:58:::1;::::0;7046:10;;6998:58:::1;:::i;:::-;::::0;;;-1:-1:-1;;6565:6:6;:14;;-1:-1:-1;;;;6565:14:6;;;-1:-1:-1;6685:378:6:o;9778:1305::-;9991:12;;:44;;-1:-1:-1;;;9991:44:6;;-1:-1:-1;;;;;360:32:7;;;9991:44:6;;;342:51:7;10038:7:6;;9991:12;;:22;;315:18:7;;9991:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;9983:138;;;;-1:-1:-1;;;9983:138:6;;3371:2:7;9983:138:6;;;3353:21:7;3410:2;3390:18;;;3383:30;3449:34;3429:18;;;3422:62;3520:32;3500:18;;;3493:60;3570:19;;9983:138:6;3169:426:7;9983:138:6;-1:-1:-1;;;;;10140:38:6;;;;;;:16;:38;;;;;;;;:54;;:58;10132:128;;;;-1:-1:-1;;;10132:128:6;;3802:2:7;10132:128:6;;;3784:21:7;3841:2;3821:18;;;3814:30;3880:34;3860:18;;;3853:62;-1:-1:-1;;;3931:18:7;;;3924:46;3987:19;;10132:128:6;3600:412:7;10132:128:6;10318:12;;:71;;-1:-1:-1;;;10318:71:6;;-1:-1:-1;;;;;4275:15:7;;;10318:71:6;;;4257:34:7;10374:4:6;4307:18:7;;;4300:43;4359:18;;;4352:34;;;10318:12:6;;;;:25;;4192:18:7;;10318:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10403:10;10400:210;;;10428:14;:41;;;;;;;;;;;;;-1:-1:-1;;;;;;10428:41:6;-1:-1:-1;;;;;10428:41:6;;;;;10483:11;:25;;;;;;;-1:-1:-1;10483:25:6;;;;;;10400:210;;;10537:15;:22;;;;;;;;;10573:12;:26;;;;;;;-1:-1:-1;10573:26:6;;;;;;10400:210;-1:-1:-1;10688:268:6;;;;;;;;-1:-1:-1;;;;;10688:268:6;;;;;;-1:-1:-1;10688:268:6;;;;;;;;;;;;;10885:15;10688:268;;;;;;;;10951:4;10688:268;;;;;;11027:38;;;:16;:38;;;;;;;;:47;;;;-1:-1:-1;;;;;;11027:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11027:47:6;;;;;;;;;;9778:1305::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:7;1240:68:0;;;2384:21:7;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;2200:356:7;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4849:2:7;1998:73:0::1;::::0;::::1;4831:21:7::0;4888:2;4868:18;;;4861:30;4927:34;4907:18;;;4900:62;-1:-1:-1;;;4978:18:7;;;4971:36;5024:19;;1998:73:0::1;4647:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;11195:2194:6:-;11418:10;11252:7;11401:28;;;:16;:28;;;;;;;:44;;;;11354;;;;;:91;11346:149;;;;-1:-1:-1;;;11346:149:6;;5256:2:7;11346:149:6;;;5238:21:7;5295:2;5275:18;;;5268:30;5334;5314:18;;;5307:58;5382:18;;11346:149:6;5054:352:7;11346:149:6;11736:10;11515:21;11719:28;;;:16;:28;;;;;;;:44;;11539:15;;11515:21;;;11795:1;11802:21;:28;11798:32;;11782:1264;;11919:9;11927:1;11919:7;:9;:::i;:::-;11896:10;11879:28;;;;:16;:28;;;;;:39;;;:49;;;;:::i;:::-;11862:13;:67;11859:1177;;;12130:3;12132:1;12130;:3;:::i;:::-;12121:13;;:7;:13;:::i;:::-;12110:9;12118:1;12110:7;:9;:::i;:::-;:24;;;;:::i;:::-;12090:44;-1:-1:-1;12090:44:6;12386:7;12381:4;12354:21;12376:3;12378:1;12376;:3;:::i;:::-;12354:26;;;;;;;;:::i;:::-;;;;;;;;;12314:16;:66;;;;:::i;:::-;:71;;;;:::i;:::-;:79;;;;:::i;:::-;:100;;;;:::i;:::-;12278:136;;:12;:136;:::i;:::-;-1:-1:-1;12593:1:6;;11195:2194;-1:-1:-1;;;;;;11195:2194:6:o;11859:1177::-;12775:10;12758:28;;;;:16;:28;;;;;:39;;;12753:3;12755:1;12753;:3;:::i;:::-;12744:13;;:7;:13;:::i;:::-;12728:29;;:13;:29;:::i;:::-;:69;;;;:::i;:::-;12707:90;-1:-1:-1;12707:90:6;12955:7;12950:4;12923:21;12945:3;12947:1;12945;:3;:::i;:::-;12923:26;;;;;;;;:::i;:::-;;;;;;;;;12883:16;:66;;;;:::i;:::-;:71;;;;:::i;:::-;:79;;;;:::i;:::-;:100;;;;:::i;:::-;12847:136;;:12;:136;:::i;:::-;12832:151;11195:2194;-1:-1:-1;;;;;;11195:2194:6:o;11782:1264::-;-1:-1:-1;13163:10:6;13121:22;13146:28;;;:16;:28;;;;;:44;;;;13300:29;13146:44;13300:12;:29;:::i;:::-;13273:56;11195:2194;-1:-1:-1;;;;;;;11195:2194:6:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;7278:2445:6:-;7541:10;7375:7;7524:28;;;:16;:28;;;;;;;:44;;;;7477;;;;;:91;7469:149;;;;-1:-1:-1;;;7469:149:6;;5256:2:7;7469:149:6;;;5238:21:7;5295:2;5275:18;;;5268:30;5334;5314:18;;;5307:58;5382:18;;7469:149:6;5054:352:7;7469:149:6;7859:10;7638:21;7842:28;;;:16;:28;;;;;;;:44;;7662:15;;7638:21;;;7918:1;7925:21;:28;7921:32;;7905:1264;;8042:9;8050:1;8042:7;:9;:::i;:::-;8019:10;8002:28;;;;:16;:28;;;;;:39;;;:49;;;;:::i;:::-;7985:13;:67;7982:1177;;;8253:3;8255:1;8253;:3;:::i;:::-;8244:13;;:7;:13;:::i;:::-;8233:9;8241:1;8233:7;:9;:::i;:::-;:24;;;;:::i;:::-;8213:44;-1:-1:-1;8213:44:6;8509:7;8504:4;8477:21;8499:3;8501:1;8499;:3;:::i;:::-;8477:26;;;;;;;;:::i;:::-;;;;;;;;;8437:16;:66;;;;:::i;:::-;:71;;;;:::i;:::-;:79;;;;:::i;:::-;:100;;;;:::i;:::-;8401:136;;:12;:136;:::i;:::-;8386:151;;8716:1;8709:8;;;;;;;;;7982:1177;8898:10;8881:28;;;;:16;:28;;;;;:39;;;8876:3;8878:1;8876;:3;:::i;:::-;8867:13;;:7;:13;:::i;:::-;8851:29;;:13;:29;:::i;:::-;:69;;;;:::i;:::-;8830:90;-1:-1:-1;8830:90:6;9078:7;9073:4;9046:21;9068:3;9070:1;9068;:3;:::i;:::-;9046:26;;;;;;;;:::i;:::-;;;;;;;;;9006:16;:66;;;;:::i;:::-;:71;;;;:::i;:::-;:79;;;;:::i;:::-;:100;;;;:::i;:::-;8970:136;;:12;:136;:::i;:::-;8955:151;-1:-1:-1;9125:19:6;;-1:-1:-1;;;;;9125:19:6;7905:1264;-1:-1:-1;;;;;;9269:32:6;;9244:22;9269:32;;;:16;:32;;;;;:48;;;;9427:29;9269:48;9427:12;:29;:::i;:::-;-1:-1:-1;;;;;9536:32:6;;;;;;:16;:32;;;;;:48;;;9400:56;;-1:-1:-1;9536:128:6;;9400:56;;9536:128;:::i;:::-;-1:-1:-1;;;;;9485:32:6;;;;;;:16;:32;;;;;:48;;:179;9700:16;-1:-1:-1;;;;;;7278:2445:6;;;;;:::o;701:205:2:-;840:58;;;-1:-1:-1;;;;;6400:32:7;;840:58:2;;;6382:51:7;6449:18;;;;6442:34;;;840:58:2;;;;;;;;;;6355:18:7;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;6689:2:7;3811:85:2;;;6671:21:7;6728:2;6708:18;;;6701:30;6767:34;6747:18;;;6740:62;-1:-1:-1;;;6818:18:7;;;6811:40;6868:19;;3811:85:2;6487:406:7;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;7100:2:7;5137:81:3;;;7082:21:7;7139:2;7119:18;;;7112:30;7178:34;7158:18;;;7151:62;-1:-1:-1;;;7229:18:7;;;7222:36;7275:19;;5137:81:3;6898:402:7;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;7507:2:7;5228:60:3;;;7489:21:7;7546:2;7526:18;;;7519:30;7585:31;7565:18;;;7558:59;7634:18;;5228:60:3;7305:353:7;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;404:173:7:-;472:20;;-1:-1:-1;;;;;521:31:7;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;1277:118::-;1363:5;1356:13;1349:21;1342:5;1339:32;1329:60;;1385:1;1382;1375:12;1400:383;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1595:9;1582:23;1572:33;;1624:38;1658:2;1647:9;1643:18;1624:38;:::i;:::-;1614:48;;1712:2;1701:9;1697:18;1684:32;1725:28;1747:5;1725:28;:::i;:::-;1772:5;1762:15;;;1400:383;;;;;:::o;2011:184::-;2081:6;2134:2;2122:9;2113:7;2109:23;2105:32;2102:52;;;2150:1;2147;2140:12;2102:52;-1:-1:-1;2173:16:7;;2011:184;-1:-1:-1;2011:184:7:o;2904:127::-;2965:10;2960:3;2956:20;2953:1;2946:31;2996:4;2993:1;2986:15;3020:4;3017:1;3010:15;3036:128;3076:3;3107:1;3103:6;3100:1;3097:13;3094:39;;;3113:18;;:::i;:::-;-1:-1:-1;3149:9:7;;3036:128::o;4397:245::-;4464:6;4517:2;4505:9;4496:7;4492:23;4488:32;4485:52;;;4533:1;4530;4523:12;4485:52;4565:9;4559:16;4584:28;4606:5;4584:28;:::i;5411:168::-;5451:7;5517:1;5513;5509:6;5505:14;5502:1;5499:21;5494:1;5487:9;5480:17;5476:45;5473:71;;;5524:18;;:::i;:::-;-1:-1:-1;5564:9:7;;5411:168::o;5584:125::-;5624:4;5652:1;5649;5646:8;5643:34;;;5657:18;;:::i;:::-;-1:-1:-1;5694:9:7;;5584:125::o;5714:127::-;5775:10;5770:3;5766:20;5763:1;5756:31;5806:4;5803:1;5796:15;5830:4;5827:1;5820:15;5846:217;5886:1;5912;5902:132;;5956:10;5951:3;5947:20;5944:1;5937:31;5991:4;5988:1;5981:15;6019:4;6016:1;6009:15;5902:132;-1:-1:-1;6048:9:7;;5846:217::o;7663:258::-;7735:1;7745:113;7759:6;7756:1;7753:13;7745:113;;;7835:11;;;7829:18;7816:11;;;7809:39;7781:2;7774:10;7745:113;;;7876:6;7873:1;7870:13;7867:48;;;7911:1;7902:6;7897:3;7893:16;7886:27;7867:48;;7663:258;;;:::o;7926:274::-;8055:3;8093:6;8087:13;8109:53;8155:6;8150:3;8143:4;8135:6;8131:17;8109:53;:::i;:::-;8178:16;;;;;7926:274;-1:-1:-1;;7926:274:7:o;8205:383::-;8354:2;8343:9;8336:21;8317:4;8386:6;8380:13;8429:6;8424:2;8413:9;8409:18;8402:34;8445:66;8504:6;8499:2;8488:9;8484:18;8479:2;8471:6;8467:15;8445:66;:::i;:::-;8572:2;8551:15;-1:-1:-1;;8547:29:7;8532:45;;;;8579:2;8528:54;;8205:383;-1:-1:-1;;8205:383:7:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "contract_balance()": {
        "details": "View function to get contract balance"
      },
      "new_Investor(uint256,address,bool)": {
        "details": "Adds a new Investor."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release()": {
        "details": "Release the tokens  Emits a {ERC20Released} event."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "view_can_release_percent()": {
        "details": "View function that an investor can use to see how many tokens he can withdraw"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    846,
    13582
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92347B5E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x92347B5E EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xD41D826A EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xDF129979 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF5CD7277 EQ PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57440D3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x21B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x286 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x134 PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0xBB PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x284 PUSH1 0x0 PUSH2 0x9D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F2072652D656E7472616E6379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x2F0 CALLER TIMESTAMP PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x10 SLOAD PUSH2 0x362 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xCB1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x384 SWAP1 DUP5 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E7320666F722074686520707269636520726571756972656D656E742E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320616C726561647920696E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B9BA34B7339031B7B73A3930B1BA17 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x557 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP4 SWAP1 SSTORE PUSH2 0x63D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP4 SWAP1 SSTORE JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD SWAP8 DUP9 MSTORE TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE SWAP6 DUP6 MSTORE PUSH1 0x2 SWAP4 DUP5 SWAP1 MSTORE SWAP7 SWAP1 SWAP4 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP5 SSTORE SWAP5 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP4 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x271 JUMP JUMPDEST PUSH2 0x79C DUP2 PUSH2 0x9D4 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x9AA JUMPI PUSH2 0x837 DUP2 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x8FC JUMPI PUSH2 0x866 PUSH1 0x1 DUP3 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x873 SWAP1 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x880 DUP3 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x3E8 PUSH1 0x8 PUSH2 0x8A1 PUSH1 0x1 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8B1 JUMPI PUSH2 0x8B1 PUSH2 0x106C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x8C7 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x8DB SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x8EF SWAP1 DUP6 PUSH2 0x1001 JUMP JUMPDEST POP PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x91A PUSH1 0x1 DUP4 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x927 SWAP1 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x931 SWAP1 DUP8 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x3E8 PUSH1 0x8 PUSH2 0x952 PUSH1 0x1 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x962 JUMPI PUSH2 0x962 PUSH2 0x106C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x9A0 SWAP1 DUP6 PUSH2 0x1001 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x9C9 DUP3 DUP7 PUSH2 0x1055 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xC35 JUMPI PUSH2 0xABC DUP2 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xAEB PUSH1 0x1 DUP3 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xAF8 SWAP1 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xB05 DUP3 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xB0F SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x3E8 PUSH1 0x8 PUSH2 0xB26 PUSH1 0x1 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB36 JUMPI PUSH2 0xB36 PUSH2 0x106C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xB56 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xB60 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xB6A SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xB74 SWAP1 DUP6 PUSH2 0x1001 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0xCAB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xBA2 PUSH1 0x1 DUP4 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xBAF SWAP1 PUSH3 0x278D00 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xBB9 SWAP1 DUP8 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x3E8 PUSH1 0x8 PUSH2 0xBDA PUSH1 0x1 DUP7 PUSH2 0x1055 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH2 0xBEA PUSH2 0x106C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xC28 SWAP1 DUP6 PUSH2 0x1001 JUMP JUMPDEST SWAP6 POP PUSH2 0xCAB SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0xC5D DUP3 DUP7 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xC87 SWAP1 DUP3 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD03 SWAP1 DUP5 SWAP1 PUSH2 0xD08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDDA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD03 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDE9 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xDF3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9C9 DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0xF23 JUMPI POP DUP2 PUSH2 0xDEC JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF33 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEC DUP3 PUSH2 0xF4D JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x79C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xFB7 PUSH1 0x20 DUP6 ADD PUSH2 0xF4D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xFC7 DUP2 PUSH2 0xF84 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1014 PUSH2 0xFEB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDEC DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1050 PUSH2 0xFEB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1067 PUSH2 0xFEB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x109F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10BF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10A7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x10E6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x110F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xAD 0xF7 PUSH9 0x166EF965A76F78418F 0xBF LOG2 BALANCE DUP10 SMOD 0x2E LOG4 DUP14 0x4C NUMBER LOG2 CALLVALUE CODESIZE DUP1 PUSH9 0x56B00A7164736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "38": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "49": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA"
    },
    "53": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD41D826A"
    },
    "60": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x168"
    },
    "64": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDF129979"
    },
    "71": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17B"
    },
    "75": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E"
    },
    "86": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF5CD7277"
    },
    "93": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A1"
    },
    "97": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x57440D3"
    },
    "109": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB3"
    },
    "124": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86D1A69F"
    },
    "131": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "135": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5"
    },
    "146": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "DUP1",
      "path": "6"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        846,
        13582
      ],
      "op": "REVERT",
      "path": "6"
    },
    "152": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "153": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "156": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A9"
    },
    "159": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMP",
      "path": "6"
    },
    "160": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "161": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "163": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "DUP2"
    },
    "166": {
      "op": "MSTORE"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "169": {
      "op": "ADD"
    },
    "170": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "171": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "173": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "174": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "176": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "SUB",
      "path": "6"
    },
    "177": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "178": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "RETURN",
      "path": "6"
    },
    "179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "186": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "189": {
      "fn": "LockContract.release",
      "offset": [
        6685,
        7063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "190": {
      "fn": "LockContract.release",
      "offset": [
        6685,
        7063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "193": {
      "fn": "LockContract.release",
      "offset": [
        6685,
        7063
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "196": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6685,
        7063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "197": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "198": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "207": {
      "op": "SHL"
    },
    "208": {
      "op": "SUB"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "210": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "op": "SUB"
    },
    "222": {
      "op": "SWAP1"
    },
    "223": {
      "op": "SWAP2"
    },
    "224": {
      "op": "AND"
    },
    "225": {
      "op": "DUP2"
    },
    "226": {
      "op": "MSTORE"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "229": {
      "op": "ADD"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "233": {
      "op": "JUMP"
    },
    "234": {
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "235": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x134"
    },
    "238": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF8"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "242": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "244": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF69"
    },
    "247": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "248": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "249": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "251": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "253": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "254": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "255": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "256": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "258": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "259": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "261": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "263": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "264": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "265": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "266": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "267": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "268": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "270": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "272": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "274": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "275": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "276": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "277": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "279": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "280": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "281": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "282": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "284": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "285": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "286": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "287": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "294": {
      "op": "SHL"
    },
    "295": {
      "op": "SUB"
    },
    "296": {
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "297": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "298": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "299": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "300": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "301": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "302": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "303": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "305": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "306": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP6",
      "path": "6"
    },
    "307": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "308": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "311": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "319": {
      "op": "SHL"
    },
    "320": {
      "op": "SUB"
    },
    "321": {
      "op": "SWAP1"
    },
    "322": {
      "op": "SWAP7"
    },
    "323": {
      "op": "AND"
    },
    "324": {
      "op": "DUP7"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "DUP7"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "op": "SWAP5"
    },
    "331": {
      "op": "SWAP1"
    },
    "332": {
      "op": "SWAP5"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "SWAP3"
    },
    "335": {
      "op": "DUP5"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "SWAP2"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "SWAP2"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "343": {
      "op": "DUP4"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "op": "MSTORE"
    },
    "346": {
      "op": "ISZERO"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "350": {
      "op": "DUP3"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA"
    },
    "359": {
      "op": "JUMP"
    },
    "360": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "361": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "364": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x176"
    },
    "367": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "368": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "370": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "373": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMP",
      "path": "6"
    },
    "374": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "375": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x399"
    },
    "378": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMP",
      "path": "6"
    },
    "379": {
      "offset": [
        908,
        934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "382": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD2"
    },
    "386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "393": {
      "op": "SHL"
    },
    "394": {
      "op": "SUB"
    },
    "395": {
      "offset": [
        908,
        934
      ],
      "op": "AND",
      "path": "6"
    },
    "396": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "397": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF69"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D4"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "418": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "421": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79F"
    },
    "424": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "425": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "426": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13548
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x1"
    },
    "428": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13548
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "429": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "431": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "432": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "439": {
      "op": "SHL"
    },
    "440": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "441": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "442": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13567,
        13571
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "443": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "445": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP3",
      "path": "6"
    },
    "446": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ADD",
      "path": "6"
    },
    "447": {
      "op": "MSTORE"
    },
    "448": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13510,
        13517
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "450": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13510,
        13517
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "457": {
      "op": "SHL"
    },
    "458": {
      "op": "SUB"
    },
    "459": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13548
      ],
      "op": "AND",
      "path": "6"
    },
    "460": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13548
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "461": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13558
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "466": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13558
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "469": {
      "op": "ADD"
    },
    "470": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "472": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "474": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "475": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "476": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP4",
      "path": "6"
    },
    "477": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "SUB",
      "path": "6"
    },
    "478": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "479": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP7",
      "path": "6"
    },
    "480": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "GAS",
      "path": "6"
    },
    "481": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "482": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "483": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "484": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "485": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F2"
    },
    "488": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "489": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "490": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "492": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "493": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "494": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "495": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "497": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "REVERT",
      "path": "6"
    },
    "498": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "499": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "500": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "501": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "502": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "503": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "505": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "506": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "507": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "509": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "NOT",
      "path": "6"
    },
    "510": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "512": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP3",
      "path": "6"
    },
    "513": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ADD",
      "path": "6"
    },
    "514": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "AND",
      "path": "6"
    },
    "515": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP3",
      "path": "6"
    },
    "516": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ADD",
      "path": "6"
    },
    "517": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP1",
      "path": "6"
    },
    "518": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "520": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "521": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "522": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "DUP2",
      "path": "6"
    },
    "523": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "ADD",
      "path": "6"
    },
    "524": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "525": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x216"
    },
    "528": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "529": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "530": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD2"
    },
    "533": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        13536,
        13573
      ],
      "op": "JUMP",
      "path": "6"
    },
    "534": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13536,
        13573
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "535": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13529,
        13573
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "536": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13529,
        13573
      ],
      "op": "POP",
      "path": "6"
    },
    "537": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13461,
        13580
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "538": {
      "fn": "LockContract.contract_balance",
      "jump": "o",
      "offset": [
        13461,
        13580
      ],
      "op": "JUMP",
      "path": "6"
    },
    "539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "542": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "552": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 2
    },
    "553": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "554": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "557": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "558": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "560": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "569": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "572": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "574": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "576": {
      "op": "DUP2"
    },
    "577": {
      "op": "SWAP1"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "581": {
      "op": "DUP3"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "619": {
      "op": "DUP3"
    },
    "620": {
      "op": "ADD"
    },
    "621": {
      "op": "MSTORE"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "624": {
      "op": "ADD"
    },
    "625": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "626": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "632": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "634": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x284"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D4"
    },
    "643": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "646": {
      "fn": "LockContract.release",
      "offset": [
        6685,
        7063
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "offset": [
        6496,
        6502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "649": {
      "fn": "LockContract.release",
      "offset": [
        6496,
        6502
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "offset": [
        6496,
        6502
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "656": {
      "fn": "LockContract.release",
      "offset": [
        6496,
        6502
      ],
      "op": "DIV",
      "path": "6"
    },
    "657": {
      "fn": "LockContract.release",
      "offset": [
        6496,
        6502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "659": {
      "fn": "LockContract.release",
      "offset": [
        6496,
        6502
      ],
      "op": "AND",
      "path": "6"
    },
    "660": {
      "offset": [
        6495,
        6502
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "661": {
      "offset": [
        6487,
        6521
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "664": {
      "offset": [
        6487,
        6521
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "665": {
      "fn": "LockContract.release",
      "offset": [
        6487,
        6521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "667": {
      "fn": "LockContract.release",
      "offset": [
        6487,
        6521
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "offset": [
        6487,
        6521
      ],
      "op": "DUP2",
      "path": "6"
    },
    "676": {
      "fn": "LockContract.release",
      "offset": [
        6487,
        6521
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "679": {
      "offset": [
        6487,
        6521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "681": {
      "fn": "LockContract.release",
      "offset": [
        6487,
        6521
      ],
      "op": "DUP3",
      "path": "6"
    },
    "682": {
      "fn": "LockContract.release",
      "offset": [
        6487,
        6521
      ],
      "op": "ADD",
      "path": "6"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "688": {
      "op": "DUP3"
    },
    "689": {
      "op": "ADD"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH14",
      "value": "0x4E6F2072652D656E7472616E6379"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "offset": [
        6487,
        6521
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "720": {
      "op": "JUMP"
    },
    "721": {
      "offset": [
        6487,
        6521
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "722": {
      "offset": [
        6531,
        6537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "724": {
      "offset": [
        6531,
        6544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "725": {
      "fn": "LockContract.release",
      "offset": [
        6531,
        6544
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "NOT"
    },
    "732": {
      "offset": [
        6531,
        6544
      ],
      "op": "AND",
      "path": "6"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "offset": [
        6531,
        6544
      ],
      "op": "OR",
      "path": "6"
    },
    "739": {
      "fn": "LockContract.release",
      "offset": [
        6531,
        6544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "740": {
      "fn": "LockContract.release",
      "offset": [
        6531,
        6544
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "741": {
      "fn": "LockContract.release",
      "offset": [
        6531,
        6544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "743": {
      "fn": "LockContract.release",
      "offset": [
        6763,
        6819
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F0"
    },
    "746": {
      "fn": "LockContract.release",
      "offset": [
        6783,
        6793
      ],
      "op": "CALLER",
      "path": "6"
    },
    "747": {
      "fn": "LockContract.release",
      "offset": [
        6802,
        6817
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "748": {
      "fn": "LockContract.release",
      "offset": [
        6763,
        6782
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA24"
    },
    "751": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6763,
        6819
      ],
      "op": "JUMP",
      "path": "6"
    },
    "752": {
      "fn": "LockContract.release",
      "offset": [
        6763,
        6819
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "753": {
      "fn": "LockContract.release",
      "offset": [
        6742,
        6819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "754": {
      "fn": "LockContract.release",
      "offset": [
        6742,
        6819
      ],
      "op": "POP",
      "path": "6"
    },
    "755": {
      "fn": "LockContract.release",
      "offset": [
        6846,
        6856
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 4
    },
    "756": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "758": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6842
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "760": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "DUP3",
      "path": "6"
    },
    "761": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "DUP3",
      "path": "6"
    },
    "762": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "763": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x304"
    },
    "766": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "767": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "768": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "771": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6829,
        6856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "772": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "773": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "774": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "775": {
      "fn": "LockContract.release",
      "offset": [
        6829,
        6856
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x10"
    },
    "780": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "781": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "783": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "784": {
      "op": "DUP3"
    },
    "785": {
      "op": "DUP2"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "796": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "797": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "AND",
      "path": "6"
    },
    "798": {
      "fn": "LockContract.release",
      "offset": [
        6885,
        6897
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "799": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "832": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "838": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "839": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "DUP1",
      "path": "6"
    },
    "840": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "841": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "SUB",
      "path": "6"
    },
    "842": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "843": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6910
      ],
      "op": "LOG2",
      "path": "6"
    },
    "844": {
      "fn": "LockContract.release",
      "offset": [
        6950,
        6962
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x10"
    },
    "846": {
      "fn": "LockContract.release",
      "offset": [
        6950,
        6962
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "847": {
      "fn": "LockContract.release",
      "offset": [
        6920,
        6988
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x362"
    },
    "850": {
      "fn": "LockContract.release",
      "offset": [
        6920,
        6988
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "fn": "LockContract.release",
      "offset": [
        6950,
        6962
      ],
      "op": "AND",
      "path": "6"
    },
    "860": {
      "fn": "LockContract.release",
      "offset": [
        6965,
        6975
      ],
      "op": "CALLER",
      "path": "6"
    },
    "861": {
      "fn": "LockContract.release",
      "offset": [
        6977,
        6987
      ],
      "op": "DUP4",
      "path": "6"
    },
    "862": {
      "fn": "LockContract.release",
      "offset": [
        6920,
        6942
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB1"
    },
    "865": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6920,
        6988
      ],
      "op": "JUMP",
      "path": "6"
    },
    "866": {
      "fn": "LockContract.release",
      "offset": [
        6920,
        6988
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "867": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7025
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "868": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "870": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "871": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "DUP2",
      "path": "6"
    },
    "872": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "873": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7014
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "875": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "877": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "878": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "880": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "DUP2",
      "path": "6"
    },
    "881": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "882": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7042
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "884": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7042
      ],
      "op": "ADD",
      "path": "6"
    },
    "885": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "DUP1",
      "path": "6"
    },
    "886": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "887": {
      "fn": "LockContract.release",
      "offset": [
        7046,
        7056
      ],
      "op": "DUP4",
      "path": "6"
    },
    "888": {
      "fn": "LockContract.release",
      "offset": [
        7046,
        7056
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "889": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7026
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "890": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x384"
    },
    "893": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "894": {
      "fn": "LockContract.release",
      "offset": [
        7046,
        7056
      ],
      "op": "DUP5",
      "path": "6"
    },
    "895": {
      "fn": "LockContract.release",
      "offset": [
        7046,
        7056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "896": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "899": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6998,
        7056
      ],
      "op": "JUMP",
      "path": "6"
    },
    "900": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "902": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "903": {
      "fn": "LockContract.release",
      "offset": [
        6998,
        7056
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "offset": [
        6565,
        6571
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "908": {
      "offset": [
        6565,
        6579
      ],
      "op": "DUP1",
      "path": "6"
    },
    "909": {
      "fn": "LockContract.release",
      "offset": [
        6565,
        6579
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "op": "NOT"
    },
    "916": {
      "offset": [
        6565,
        6579
      ],
      "op": "AND",
      "path": "6"
    },
    "917": {
      "fn": "LockContract.release",
      "offset": [
        6565,
        6579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "918": {
      "fn": "LockContract.release",
      "offset": [
        6565,
        6579
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        6685,
        7063
      ],
      "op": "JUMP",
      "path": "6"
    },
    "921": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "922": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10003
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x1"
    },
    "924": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10003
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "925": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "927": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "928": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "937": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "op": "DUP5"
    },
    "947": {
      "op": "DUP2"
    },
    "948": {
      "op": "AND"
    },
    "949": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "951": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP4",
      "path": "6"
    },
    "952": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ADD",
      "path": "6"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10038,
        10045
      ],
      "op": "DUP6",
      "path": "6"
    },
    "955": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10038,
        10045
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "956": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10003
      ],
      "op": "AND",
      "path": "6"
    },
    "957": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10003
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "958": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10013
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "963": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10013
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "969": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "971": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "972": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP1",
      "path": "6"
    },
    "973": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP4",
      "path": "6"
    },
    "974": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "SUB",
      "path": "6"
    },
    "975": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "976": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP7",
      "path": "6"
    },
    "977": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "GAS",
      "path": "6"
    },
    "978": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "979": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "980": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP1",
      "path": "6"
    },
    "981": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "982": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E3"
    },
    "985": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "986": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "987": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "989": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP1",
      "path": "6"
    },
    "990": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "991": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "992": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "994": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "REVERT",
      "path": "6"
    },
    "995": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "996": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "POP",
      "path": "6"
    },
    "997": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "POP",
      "path": "6"
    },
    "998": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "POP",
      "path": "6"
    },
    "999": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "POP",
      "path": "6"
    },
    "1000": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1002": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1003": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1004": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1006": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "NOT",
      "path": "6"
    },
    "1007": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1009": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1010": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ADD",
      "path": "6"
    },
    "1011": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "AND",
      "path": "6"
    },
    "1012": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1013": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ADD",
      "path": "6"
    },
    "1014": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1015": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1017": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1018": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "POP",
      "path": "6"
    },
    "1019": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1020": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "ADD",
      "path": "6"
    },
    "1021": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1022": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x407"
    },
    "1025": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1026": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1027": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD2"
    },
    "1030": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9991,
        10035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1031": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1032": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10045
      ],
      "op": "LT",
      "path": "6"
    },
    "1033": {
      "branch": 44,
      "fn": "LockContract.new_Investor",
      "offset": [
        9991,
        10045
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1034": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47B"
    },
    "1037": {
      "branch": 44,
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1038": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1040": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1049": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1052": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1054": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1055": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "ADD",
      "path": "6"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1061": {
      "op": "DUP3"
    },
    "1062": {
      "op": "ADD"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "ADD"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH32",
      "value": "0x656E7320666F722074686520707269636520726571756972656D656E742E0000"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1137": {
      "op": "DUP3"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "MSTORE"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "1146": {
      "op": "JUMP"
    },
    "1147": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9983,
        10121
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 9
    },
    "1157": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "AND",
      "path": "6"
    },
    "1158": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1160": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1161": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1162": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1163": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1165": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1167": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1168": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1169": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1170": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1172": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1173": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1174": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10178
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1175": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10194
      ],
      "op": "ADD",
      "path": "6"
    },
    "1176": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10194
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1177": {
      "branch": 45,
      "fn": "LockContract.new_Investor",
      "offset": [
        10140,
        10198
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1178": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FE"
    },
    "1181": {
      "branch": 45,
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1182": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1184": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1193": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1196": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1198": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1199": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "ADD",
      "path": "6"
    },
    "1200": {
      "op": "MSTORE"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1205": {
      "op": "DUP3"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "MSTORE"
    },
    "1208": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320697320616C726561647920696E207468652076"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1243": {
      "op": "DUP3"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "MSTORE"
    },
    "1246": {
      "op": "PUSH16",
      "value": "0x32B9BA34B7339031B7B73A3930B1BA17"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1268": {
      "op": "DUP3"
    },
    "1269": {
      "op": "ADD"
    },
    "1270": {
      "op": "MSTORE"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "1277": {
      "op": "JUMP"
    },
    "1278": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10132,
        10260
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1279": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x1"
    },
    "1281": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1282": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1284": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1285": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1294": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1301": {
      "op": "SHL"
    },
    "1302": {
      "op": "SUB"
    },
    "1303": {
      "op": "DUP5"
    },
    "1304": {
      "op": "DUP2"
    },
    "1305": {
      "op": "AND"
    },
    "1306": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1308": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1309": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ADD",
      "path": "6"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10374,
        10378
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1314": {
      "op": "DUP4"
    },
    "1315": {
      "op": "ADD"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1319": {
      "op": "DUP3"
    },
    "1320": {
      "op": "ADD"
    },
    "1321": {
      "op": "DUP7"
    },
    "1322": {
      "op": "SWAP1"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1325": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1326": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "AND",
      "path": "6"
    },
    "1327": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10330
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1328": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10343
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1333": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10343
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1339": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1341": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1342": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1343": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1344": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "SUB",
      "path": "6"
    },
    "1345": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1346": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1348": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1349": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "GAS",
      "path": "6"
    },
    "1350": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "CALL",
      "path": "6"
    },
    "1351": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1352": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1353": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1354": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x557"
    },
    "1357": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1358": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1359": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1361": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1362": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1363": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1364": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1366": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1367": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1368": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1369": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1370": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1371": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1372": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1374": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1375": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1376": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1378": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "NOT",
      "path": "6"
    },
    "1379": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1381": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1382": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ADD",
      "path": "6"
    },
    "1383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "AND",
      "path": "6"
    },
    "1384": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1385": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ADD",
      "path": "6"
    },
    "1386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1389": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1390": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1391": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1392": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "ADD",
      "path": "6"
    },
    "1393": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1394": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x57B"
    },
    "1397": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1398": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1399": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1019"
    },
    "1402": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        10318,
        10389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1403": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1404": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10318,
        10389
      ],
      "op": "POP",
      "path": "6"
    },
    "1405": {
      "branch": 46,
      "fn": "LockContract.new_Investor",
      "offset": [
        10403,
        10413
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1406": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1407": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FF"
    },
    "1410": {
      "branch": 46,
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1411": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10442
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x4"
    },
    "1413": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1414": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1415": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1417": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1418": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1419": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "ADD",
      "path": "6"
    },
    "1420": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1421": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1422": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1423": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1456": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "ADD",
      "path": "6"
    },
    "1457": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1458": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "op": "NOT"
    },
    "1468": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "AND",
      "path": "6"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1478": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "AND",
      "path": "6"
    },
    "1479": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "OR",
      "path": "6"
    },
    "1480": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1481": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10428,
        10469
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1482": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10494
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x6"
    },
    "1484": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1485": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1486": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1487": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1488": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1489": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1490": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1494": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1527": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1528": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1529": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1530": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10483,
        10508
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1531": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63D"
    },
    "1534": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1535": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1536": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10552
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x5"
    },
    "1538": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1539": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1540": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1542": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1543": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1544": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "ADD",
      "path": "6"
    },
    "1545": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1546": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1547": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10537,
        10559
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1548": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10585
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x7"
    },
    "1550": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1551": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1552": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1553": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1554": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "ADD",
      "path": "6"
    },
    "1555": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1556": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1559": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1560": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1593": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "ADD",
      "path": "6"
    },
    "1594": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1595": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1596": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10573,
        10599
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1597": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10400,
        10610
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1601": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1602": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1603": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "1605": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1606": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "ADD",
      "path": "6"
    },
    "1607": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1608": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1618": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1619": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "AND",
      "path": "6"
    },
    "1620": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1621": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1622": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1625": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1627": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1628": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1629": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "ADD",
      "path": "6"
    },
    "1630": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1631": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1632": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1633": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1634": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1635": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "ADD",
      "path": "6"
    },
    "1636": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1637": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1638": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1639": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10885,
        10900
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1640": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1649": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "AND",
      "path": "6"
    },
    "1650": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1652": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1653": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "ADD",
      "path": "6"
    },
    "1654": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1655": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1656": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1657": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10951,
        10955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1659": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1661": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1662": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "ADD",
      "path": "6"
    },
    "1663": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1664": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1665": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10688,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1666": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP6",
      "path": "6",
      "statement": 15
    },
    "1667": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1668": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1669": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1671": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1672": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1673": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1674": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1675": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1676": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1677": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1678": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11065
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1679": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1680": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1681": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1682": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "op": "SUB"
    },
    "1691": {
      "op": "NOT"
    },
    "1692": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "AND",
      "path": "6"
    },
    "1693": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1694": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "AND",
      "path": "6"
    },
    "1695": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1696": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1697": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1698": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "OR",
      "path": "6"
    },
    "1699": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1700": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1701": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1702": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1703": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1704": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1705": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ADD",
      "path": "6"
    },
    "1706": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1707": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1708": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1709": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1710": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1711": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1712": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1713": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1714": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ADD",
      "path": "6"
    },
    "1715": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1716": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1717": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1718": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1719": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1720": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1722": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1723": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ADD",
      "path": "6"
    },
    "1724": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1725": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1726": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1727": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1729": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1730": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1731": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ADD",
      "path": "6"
    },
    "1732": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1733": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1736": {
      "op": "NOT"
    },
    "1737": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "AND",
      "path": "6"
    },
    "1738": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1739": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1740": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1741": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1742": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1743": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1744": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "OR",
      "path": "6"
    },
    "1745": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1746": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11027,
        11074
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1747": {
      "fn": "LockContract.new_Investor",
      "jump": "o",
      "offset": [
        9778,
        11083
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1749": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1751": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1761": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1762": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1763": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72E"
    },
    "1766": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1769": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1781": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1784": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1785": {
      "op": "DUP2"
    },
    "1786": {
      "op": "SWAP1"
    },
    "1787": {
      "op": "MSTORE"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1790": {
      "op": "DUP3"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "MSTORE"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1837": {
      "op": "JUMP"
    },
    "1838": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1845": {
      "op": "SHL"
    },
    "1846": {
      "op": "SUB"
    },
    "1847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1848": {
      "branch": 54,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x793"
    },
    "1852": {
      "branch": 54,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1862": {
      "op": "SHL"
    },
    "1863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1871": {
      "op": "MSTORE"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "MSTORE"
    },
    "1879": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1929": {
      "op": "DUP3"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "op": "MSTORE"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1934": {
      "op": "ADD"
    },
    "1935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "1938": {
      "op": "JUMP"
    },
    "1939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x79C"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D4"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1950": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1951": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1952": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11418,
        11428
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 18
    },
    "1953": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11252,
        11259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1955": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1956": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1957": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1958": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11417
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1960": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1962": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1963": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1964": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1965": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1967": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1968": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11429
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1969": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11445
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1970": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11445
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1971": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11445
      ],
      "op": "ADD",
      "path": "6"
    },
    "1972": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11401,
        11445
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1973": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11398
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1975": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11398
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1976": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11398
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1977": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11398
      ],
      "op": "ADD",
      "path": "6"
    },
    "1978": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11398
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1979": {
      "branch": 47,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11354,
        11445
      ],
      "op": "LT",
      "path": "6"
    },
    "1980": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x807"
    },
    "1983": {
      "branch": 47,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1984": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1986": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1995": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2000": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2001": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "ADD",
      "path": "6"
    },
    "2002": {
      "op": "MSTORE"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2007": {
      "op": "DUP3"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "MSTORE"
    },
    "2010": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2045": {
      "op": "DUP3"
    },
    "2046": {
      "op": "ADD"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "2054": {
      "op": "JUMP"
    },
    "2055": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11346,
        11495
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2056": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11736,
        11746
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2057": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11515,
        11536
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2059": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2060": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2061": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2062": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11735
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2064": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2066": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2067": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2068": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2069": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2071": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2072": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11747
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2073": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11763
      ],
      "op": "ADD",
      "path": "6"
    },
    "2074": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11719,
        11763
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2075": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11539,
        11554
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2076": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11539,
        11554
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2077": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11515,
        11536
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2078": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11515,
        11536
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2079": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11515,
        11536
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2080": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11795,
        11796
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2082": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11802,
        11823
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2084": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11802,
        11830
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2085": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11798,
        11830
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2086": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11798,
        11830
      ],
      "op": "GT",
      "path": "6"
    },
    "2087": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11782,
        13046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9AA"
    },
    "2090": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11782,
        13046
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2091": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11919,
        11928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x837"
    },
    "2094": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11927,
        11928
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2095": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11919,
        11926
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2099": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11919,
        11928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2102": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11919,
        11928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2103": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11919,
        11928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2104": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11896,
        11906
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2105": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2107": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2108": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2109": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2110": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2112": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2114": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2115": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2117": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2118": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11907
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2119": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11918
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2121": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11918
      ],
      "op": "ADD",
      "path": "6"
    },
    "2122": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11918
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2123": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x854"
    },
    "2126": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11928
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2127": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11928
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2128": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11928
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "2131": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11879,
        11928
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2132": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11879,
        11928
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2133": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11862,
        11875
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2134": {
      "branch": 48,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11862,
        11929
      ],
      "op": "GT",
      "path": "6"
    },
    "2135": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11859,
        13036
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2136": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11859,
        13036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FC"
    },
    "2139": {
      "branch": 48,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11859,
        13036
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2140": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12130,
        12133
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0x866"
    },
    "2143": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12132,
        12133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2145": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12130,
        12131
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2146": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12130,
        12133
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2149": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12130,
        12133
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2150": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12130,
        12133
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2151": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12121,
        12134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x873"
    },
    "2154": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12121,
        12134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2155": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12121,
        12128
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2159": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12121,
        12134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2162": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12121,
        12134
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2163": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12121,
        12134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2164": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12119
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x880"
    },
    "2167": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12118,
        12119
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2168": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12117
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2172": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12119
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2175": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12110,
        12119
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2176": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12119
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2177": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88A"
    },
    "2180": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12134
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2181": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12134
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2182": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2185": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12110,
        12134
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2186": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12110,
        12134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2187": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12090,
        12134
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12090,
        12134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2190": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12386,
        12393
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 20,
      "value": "0x278D00"
    },
    "2194": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12381,
        12385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E8"
    },
    "2197": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12375
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2199": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12376,
        12379
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A1"
    },
    "2202": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12378,
        12379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2204": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12376,
        12377
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2205": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12376,
        12379
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2208": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12376,
        12379
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2209": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12376,
        12379
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2210": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2211": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2212": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2213": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "LT",
      "path": "6"
    },
    "2214": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B1"
    },
    "2217": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2218": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B1"
    },
    "2221": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106C"
    },
    "2224": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12354,
        12380
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2225": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2226": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2227": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2229": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2230": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2232": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2234": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2235": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "ADD",
      "path": "6"
    },
    "2236": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12354,
        12380
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2237": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12330
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2238": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C7"
    },
    "2241": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12380
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2242": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12380
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2243": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2246": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12314,
        12380
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2247": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2248": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D1"
    },
    "2251": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12385
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2252": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2253": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2256": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12314,
        12385
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2257": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2258": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8DB"
    },
    "2261": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12393
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2262": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2263": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2266": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12314,
        12393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2267": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2268": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8E5"
    },
    "2271": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12414
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2272": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2273": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2276": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12314,
        12414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2277": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12314,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2278": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12278,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8EF"
    },
    "2281": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12278,
        12414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2282": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12278,
        12290
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2283": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12278,
        12414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "2286": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12278,
        12414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2287": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12278,
        12414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12593,
        12594
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 21,
      "value": "0x0"
    },
    "2291": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12593,
        12594
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2292": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2293": {
      "op": "POP"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2300": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11859,
        13036
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2301": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12775,
        12785
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 22
    },
    "2302": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2304": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2305": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2306": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2307": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2309": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2311": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2312": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2314": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2315": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12786
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2316": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12797
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2318": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12797
      ],
      "op": "ADD",
      "path": "6"
    },
    "2319": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12758,
        12797
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2320": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12753,
        12756
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91A"
    },
    "2323": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12755,
        12756
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2325": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12753,
        12754
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2326": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12753,
        12756
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2329": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12753,
        12756
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2330": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12753,
        12756
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2331": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12744,
        12757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x927"
    },
    "2334": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12744,
        12757
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2335": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12744,
        12751
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2339": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12744,
        12757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2342": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12744,
        12757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2343": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12744,
        12757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2344": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x931"
    },
    "2347": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12757
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2348": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12741
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2349": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12757
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2352": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12728,
        12757
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2353": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12757
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2354": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12797
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93B"
    },
    "2357": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12797
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2358": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12797
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2359": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12797
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2362": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12728,
        12797
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2363": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12728,
        12797
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2364": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12707,
        12797
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2365": {
      "op": "POP"
    },
    "2366": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12707,
        12797
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2367": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12955,
        12962
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 23,
      "value": "0x278D00"
    },
    "2371": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12950,
        12954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E8"
    },
    "2374": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12944
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2376": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12945,
        12948
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x952"
    },
    "2379": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12947,
        12948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2381": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12945,
        12946
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2382": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12945,
        12948
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2385": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12945,
        12948
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2386": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12945,
        12948
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2387": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2388": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2389": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2390": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "LT",
      "path": "6"
    },
    "2391": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x962"
    },
    "2394": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2395": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x962"
    },
    "2398": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106C"
    },
    "2401": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12923,
        12949
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2402": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2403": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2404": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2406": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2407": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2409": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2411": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2412": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "ADD",
      "path": "6"
    },
    "2413": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12923,
        12949
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2414": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12899
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2415": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x978"
    },
    "2418": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12949
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2419": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2420": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2423": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12883,
        12949
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2424": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12949
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2425": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x982"
    },
    "2428": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12954
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2429": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12954
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2430": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12954
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2433": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12883,
        12954
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2434": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12954
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2435": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98C"
    },
    "2438": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12962
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2439": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12962
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12962
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2443": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12883,
        12962
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2444": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12962
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2445": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x996"
    },
    "2448": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12983
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2449": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2450": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2453": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12883,
        12983
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2454": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12883,
        12983
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2455": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12847,
        12983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A0"
    },
    "2458": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12847,
        12983
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2459": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12847,
        12859
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2460": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12847,
        12983
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "2463": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12847,
        12983
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2464": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12847,
        12983
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2465": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12832,
        12983
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2466": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2467": {
      "op": "POP"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "op": "POP"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2474": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11782,
        13046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2475": {
      "op": "POP"
    },
    "2476": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13163,
        13173
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2477": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13121,
        13143
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2479": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2480": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2481": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2482": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13162
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2484": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2486": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2487": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2489": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2490": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13174
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2491": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2493": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13190
      ],
      "op": "ADD",
      "path": "6"
    },
    "2494": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13190
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2495": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13190
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2496": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13300,
        13329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C9"
    },
    "2499": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13146,
        13190
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2500": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13300,
        13312
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2501": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13300,
        13329
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2504": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        13300,
        13329
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2505": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13300,
        13329
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2506": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13273,
        13329
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2507": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11195,
        13389
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "op": "POP"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        11195,
        13389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2517": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2519": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2520": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 24
    },
    "2530": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2531": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "op": "NOT"
    },
    "2541": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2542": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2543": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2544": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2546": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2547": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x40"
    },
    "2549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2551": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2552": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2553": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2554": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2555": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2556": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2557": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2590": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2591": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2592": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2593": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2594": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2595": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2596": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2597": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7541,
        7551
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 26
    },
    "2598": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7375,
        7382
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2600": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2601": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2602": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2603": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7540
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2605": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2607": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2608": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2609": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2610": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2612": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2613": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7552
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2614": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7568
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2615": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7568
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2616": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7568
      ],
      "op": "ADD",
      "path": "6"
    },
    "2617": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7524,
        7568
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2618": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7521
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2620": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7521
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2621": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7521
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2622": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7521
      ],
      "op": "ADD",
      "path": "6"
    },
    "2623": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7521
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2624": {
      "branch": 49,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7477,
        7568
      ],
      "op": "LT",
      "path": "6"
    },
    "2625": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8C"
    },
    "2628": {
      "branch": 49,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2629": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2631": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2632": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2640": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2643": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2645": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2646": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "ADD",
      "path": "6"
    },
    "2647": {
      "op": "MSTORE"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2652": {
      "op": "DUP3"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "op": "MSTORE"
    },
    "2655": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2690": {
      "op": "DUP3"
    },
    "2691": {
      "op": "ADD"
    },
    "2692": {
      "op": "MSTORE"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2695": {
      "op": "ADD"
    },
    "2696": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "2699": {
      "op": "JUMP"
    },
    "2700": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7469,
        7618
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2701": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7859,
        7869
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2702": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7638,
        7659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2704": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2705": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2706": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2707": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7858
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2709": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2711": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2712": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2713": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2714": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2716": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2717": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7870
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2718": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7886
      ],
      "op": "ADD",
      "path": "6"
    },
    "2719": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7842,
        7886
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2720": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7662,
        7677
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2721": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7662,
        7677
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2722": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7638,
        7659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2723": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7638,
        7659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2724": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7638,
        7659
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2725": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7918,
        7919
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2727": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7925,
        7946
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2729": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7925,
        7953
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2730": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7921,
        7953
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2731": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7921,
        7953
      ],
      "op": "GT",
      "path": "6"
    },
    "2732": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7905,
        9169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC35"
    },
    "2735": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7905,
        9169
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2736": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8042,
        8051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xABC"
    },
    "2739": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8050,
        8051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2740": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8042,
        8049
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2744": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8042,
        8051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2747": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8042,
        8051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2748": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8042,
        8051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2749": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8019,
        8029
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2750": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2752": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2753": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2754": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2755": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2757": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2759": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2760": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2762": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2763": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8030
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2764": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8041
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2766": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8041
      ],
      "op": "ADD",
      "path": "6"
    },
    "2767": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8041
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2768": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD9"
    },
    "2771": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8051
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2772": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2773": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "2776": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8002,
        8051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2777": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8002,
        8051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2778": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7985,
        7998
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2779": {
      "branch": 50,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7985,
        8052
      ],
      "op": "GT",
      "path": "6"
    },
    "2780": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7982,
        9159
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2781": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7982,
        9159
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB84"
    },
    "2784": {
      "branch": 50,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7982,
        9159
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2785": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8253,
        8256
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0xAEB"
    },
    "2788": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8255,
        8256
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2790": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8253,
        8254
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2791": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8253,
        8256
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2794": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8253,
        8256
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2795": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8253,
        8256
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2796": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8244,
        8257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF8"
    },
    "2799": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8244,
        8257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2800": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8244,
        8251
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2804": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8244,
        8257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2807": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8244,
        8257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2808": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8244,
        8257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2809": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8242
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB05"
    },
    "2812": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8241,
        8242
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2813": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8240
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2817": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8242
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2820": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8233,
        8242
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2821": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8242
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2822": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB0F"
    },
    "2825": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2826": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2827": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2830": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8233,
        8257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2831": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8233,
        8257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2832": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8213,
        8257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8213,
        8257
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2835": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8509,
        8516
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 28,
      "value": "0x278D00"
    },
    "2839": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8504,
        8508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E8"
    },
    "2842": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8498
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2844": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8499,
        8502
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB26"
    },
    "2847": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8501,
        8502
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2849": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8499,
        8500
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2850": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8499,
        8502
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2853": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8499,
        8502
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2854": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8499,
        8502
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2855": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2856": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2857": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2858": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "LT",
      "path": "6"
    },
    "2859": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB36"
    },
    "2862": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2863": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB36"
    },
    "2866": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106C"
    },
    "2869": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8477,
        8503
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2870": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2871": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2872": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2874": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2875": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2877": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2879": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2880": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "ADD",
      "path": "6"
    },
    "2881": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8477,
        8503
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2882": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8453
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2883": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4C"
    },
    "2886": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8503
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2887": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8503
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2888": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8503
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2891": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8437,
        8503
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2892": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8503
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2893": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB56"
    },
    "2896": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8508
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2897": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2898": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2901": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8437,
        8508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2902": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2903": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB60"
    },
    "2906": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8516
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2907": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8516
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2908": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8516
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2911": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8437,
        8516
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2912": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8516
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2913": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6A"
    },
    "2916": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8537
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2917": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2918": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2921": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8437,
        8537
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2922": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8437,
        8537
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2923": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8401,
        8537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB74"
    },
    "2926": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8401,
        8537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2927": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8401,
        8413
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2928": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8401,
        8537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "2931": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8401,
        8537
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2932": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8401,
        8537
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2933": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8386,
        8537
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2934": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8386,
        8537
      ],
      "op": "POP",
      "path": "6"
    },
    "2935": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8716,
        8717
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 29,
      "value": "0x0"
    },
    "2937": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "2938": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2939": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2940": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2941": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2942": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2943": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "POP",
      "path": "6"
    },
    "2944": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCAB"
    },
    "2947": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8709,
        8717
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2948": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7982,
        9159
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2949": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8898,
        8908
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 30
    },
    "2950": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2952": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2953": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2954": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2955": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8897
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2957": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2959": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2960": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2962": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2963": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8909
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2964": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8920
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2966": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8920
      ],
      "op": "ADD",
      "path": "6"
    },
    "2967": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8881,
        8920
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2968": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8876,
        8879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA2"
    },
    "2971": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8878,
        8879
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2973": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8876,
        8877
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2974": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8876,
        8879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "2977": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8876,
        8879
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2978": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8876,
        8879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2979": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8867,
        8880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBAF"
    },
    "2982": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8867,
        8880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2983": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8867,
        8874
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2987": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8867,
        8880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "2990": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8867,
        8880
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2991": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8867,
        8880
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2992": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB9"
    },
    "2995": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2996": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8864
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2997": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "3000": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8851,
        8880
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3001": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8880
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3002": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8920
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBC3"
    },
    "3005": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8920
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3006": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8920
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3007": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8920
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "3010": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8851,
        8920
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3011": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8851,
        8920
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3012": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8830,
        8920
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8830,
        8920
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3015": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9078,
        9085
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 31,
      "value": "0x278D00"
    },
    "3019": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9073,
        9077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E8"
    },
    "3022": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9067
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3024": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9068,
        9071
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBDA"
    },
    "3027": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9070,
        9071
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3029": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9068,
        9069
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3030": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9068,
        9071
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "3033": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9068,
        9071
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3034": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9068,
        9071
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3035": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3036": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3037": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3038": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "LT",
      "path": "6"
    },
    "3039": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEA"
    },
    "3042": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3043": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEA"
    },
    "3046": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x106C"
    },
    "3049": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9046,
        9072
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3050": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3051": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3052": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3054": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3055": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3057": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3059": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3060": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "ADD",
      "path": "6"
    },
    "3061": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9046,
        9072
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3062": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9022
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3063": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC00"
    },
    "3066": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9072
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3067": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9072
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3068": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "3071": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9006,
        9072
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3072": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9072
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3073": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0A"
    },
    "3076": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9077
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3077": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9077
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3078": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9077
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3081": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9006,
        9077
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3082": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9077
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3083": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9085
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC14"
    },
    "3086": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9085
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3087": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9085
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3088": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9085
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3091": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9006,
        9085
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3092": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9085
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3093": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9106
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1E"
    },
    "3096": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9106
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3097": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9106
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3098": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9106
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1036"
    },
    "3101": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9006,
        9106
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3102": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9006,
        9106
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3103": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8970,
        9106
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC28"
    },
    "3106": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8970,
        9106
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3107": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8970,
        8982
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3108": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8970,
        9106
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "3111": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8970,
        9106
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3112": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8970,
        9106
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3113": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8955,
        9106
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "3114": {
      "op": "POP"
    },
    "3115": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9125,
        9144
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 32,
      "value": "0xCAB"
    },
    "3118": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9125,
        9144
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "op": "POP"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9125,
        9144
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3125": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7905,
        9169
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3126": {
      "op": "POP"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "op": "SUB"
    },
    "3135": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3136": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "AND",
      "path": "6"
    },
    "3137": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9244,
        9266
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3139": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3140": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3141": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3142": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3144": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3146": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3147": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3149": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3150": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9301
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3151": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3153": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9317
      ],
      "op": "ADD",
      "path": "6"
    },
    "3154": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9317
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3155": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9317
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3156": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9427,
        9456
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5D"
    },
    "3159": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9269,
        9317
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3160": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9427,
        9439
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3161": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9427,
        9456
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1055"
    },
    "3164": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9427,
        9456
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3165": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9427,
        9456
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "op": "SUB"
    },
    "3174": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 33
    },
    "3175": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "AND",
      "path": "6"
    },
    "3176": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3178": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3179": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3180": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3181": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3183": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3185": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3186": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3188": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3189": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9568
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3190": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9584
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3192": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9584
      ],
      "op": "ADD",
      "path": "6"
    },
    "3193": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9584
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3194": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9400,
        9456
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3195": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9400,
        9456
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3196": {
      "op": "POP"
    },
    "3197": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9664
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC87"
    },
    "3200": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3201": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9400,
        9456
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3202": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9400,
        9456
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3203": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9664
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1001"
    },
    "3206": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9536,
        9664
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3207": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9536,
        9664
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "op": "SUB"
    },
    "3216": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "DUP11",
      "path": "6"
    },
    "3217": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "AND",
      "path": "6"
    },
    "3218": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3220": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3221": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3222": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3223": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9501
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3225": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3227": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3228": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3230": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3231": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9517
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3232": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3234": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9533
      ],
      "op": "ADD",
      "path": "6"
    },
    "3235": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9485,
        9664
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3236": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9700,
        9716
      ],
      "op": "SWAP6",
      "path": "6",
      "statement": 34
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3244": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3245": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3246": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "POP",
      "path": "6"
    },
    "3247": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7278,
        9723
      ],
      "op": "POP",
      "path": "6"
    },
    "3248": {
      "fn": "LockContract.can_release_percent",
      "jump": "o",
      "offset": [
        7278,
        9723
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3249": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3250": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x40"
    },
    "3252": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3253": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "op": "DUP5"
    },
    "3263": {
      "op": "AND"
    },
    "3264": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3266": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3267": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3268": {
      "op": "MSTORE"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3271": {
      "op": "DUP1"
    },
    "3272": {
      "op": "DUP3"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "DUP5"
    },
    "3275": {
      "op": "SWAP1"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3278": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3279": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3280": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3281": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "3282": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3283": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3284": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3285": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3286": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3289": {
      "op": "SWAP1"
    },
    "3290": {
      "op": "SWAP2"
    },
    "3291": {
      "op": "ADD"
    },
    "3292": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3293": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3294": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3295": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3297": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3298": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3299": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3300": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3310": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3319": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3320": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3321": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD03"
    },
    "3324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD08"
    },
    "3330": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3332": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3333": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3334": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3335": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3336": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3337": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5D"
    },
    "3342": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3343": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3347": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3352": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3353": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3354": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3356": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3358": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3360": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3361": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "3397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "SUB"
    },
    "3406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "3407": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDA"
    },
    "3410": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3411": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3413": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3419": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "3420": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3421": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3422": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3423": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3424": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3425": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "branch": 55,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3428": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD03"
    },
    "3431": {
      "branch": 55,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3432": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 36
    },
    "3433": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3434": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3436": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3437": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3438": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3442": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7B"
    },
    "3445": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3446": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1019"
    },
    "3450": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3451": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD03"
    },
    "3455": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3465": {
      "op": "SHL"
    },
    "3466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3472": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "3474": {
      "op": "MSTORE"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3479": {
      "op": "DUP3"
    },
    "3480": {
      "op": "ADD"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3517": {
      "op": "DUP3"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3536": {
      "op": "DUP3"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271"
    },
    "3545": {
      "op": "JUMP"
    },
    "3546": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3547": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3549": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xDE9"
    },
    "3552": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3553": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3554": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3556": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3557": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDF3"
    },
    "3560": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3561": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3562": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3563": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "3564": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3565": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3566": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3567": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3568": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3569": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3570": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 38
    },
    "3575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "3577": {
      "branch": 51,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE54"
    },
    "3581": {
      "branch": 51,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3605": {
      "op": "DUP3"
    },
    "3606": {
      "op": "ADD"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3643": {
      "op": "DUP3"
    },
    "3644": {
      "op": "ADD"
    },
    "3645": {
      "op": "MSTORE"
    },
    "3646": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3655": {
      "op": "SHL"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3658": {
      "op": "DUP3"
    },
    "3659": {
      "op": "ADD"
    },
    "3660": {
      "op": "MSTORE"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "3667": {
      "op": "JUMP"
    },
    "3668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3675": {
      "op": "SHL"
    },
    "3676": {
      "op": "SUB"
    },
    "3677": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 39
    },
    "3678": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "3679": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xEAB"
    },
    "3683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3693": {
      "op": "SHL"
    },
    "3694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3700": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3702": {
      "op": "MSTORE"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3707": {
      "op": "DUP3"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3745": {
      "op": "DUP3"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3750": {
      "op": "ADD"
    },
    "3751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "3754": {
      "op": "JUMP"
    },
    "3755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3766": {
      "op": "SHL"
    },
    "3767": {
      "op": "SUB"
    },
    "3768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "3769": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3770": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3773": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3774": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC7"
    },
    "3777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3778": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3779": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D4"
    },
    "3782": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3786": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3788": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3789": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3790": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3791": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "3792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3795": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "3796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "3797": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "3807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF04"
    },
    "3810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3811": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "3819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3821": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "3824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3826": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3832": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3833": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3837": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3838": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3839": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3840": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF09"
    },
    "3843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3844": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3853": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3854": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0x9C9"
    },
    "3858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3859": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3861": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3863": {
      "branch": 52,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3864": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3865": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF23"
    },
    "3868": {
      "branch": 52,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3869": {
      "op": "POP"
    },
    "3870": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 42
    },
    "3871": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEC"
    },
    "3874": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3875": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3876": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3877": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3878": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3879": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF33"
    },
    "3882": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3883": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3884": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3885": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3886": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3887": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3889": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "3890": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3891": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3892": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 43
    },
    "3893": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3895": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3902": {
      "op": "SHL"
    },
    "3903": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3904": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3905": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3907": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "3908": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x271"
    },
    "3911": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3912": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3913": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F0"
    },
    "3916": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3917": {
      "op": "JUMPDEST"
    },
    "3918": {
      "op": "DUP1"
    },
    "3919": {
      "op": "CALLDATALOAD"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3926": {
      "op": "SHL"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "AND"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "EQ"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF64"
    },
    "3935": {
      "op": "JUMPI"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3938": {
      "op": "DUP1"
    },
    "3939": {
      "op": "REVERT"
    },
    "3940": {
      "op": "JUMPDEST"
    },
    "3941": {
      "op": "SWAP2"
    },
    "3942": {
      "op": "SWAP1"
    },
    "3943": {
      "op": "POP"
    },
    "3944": {
      "jump": "o",
      "op": "JUMP"
    },
    "3945": {
      "op": "JUMPDEST"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3950": {
      "op": "DUP3"
    },
    "3951": {
      "op": "DUP5"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "op": "SLT"
    },
    "3954": {
      "op": "ISZERO"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xF7B"
    },
    "3958": {
      "op": "JUMPI"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "DUP1"
    },
    "3962": {
      "op": "REVERT"
    },
    "3963": {
      "op": "JUMPDEST"
    },
    "3964": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "3967": {
      "op": "DUP3"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "3971": {
      "jump": "i",
      "op": "JUMP"
    },
    "3972": {
      "op": "JUMPDEST"
    },
    "3973": {
      "op": "DUP1"
    },
    "3974": {
      "op": "ISZERO"
    },
    "3975": {
      "op": "ISZERO"
    },
    "3976": {
      "op": "DUP2"
    },
    "3977": {
      "op": "EQ"
    },
    "3978": {
      "op": "PUSH2",
      "value": "0x79C"
    },
    "3981": {
      "op": "JUMPI"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3984": {
      "op": "DUP1"
    },
    "3985": {
      "op": "REVERT"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3989": {
      "op": "DUP1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3994": {
      "op": "DUP5"
    },
    "3995": {
      "op": "DUP7"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "op": "SLT"
    },
    "3998": {
      "op": "ISZERO"
    },
    "3999": {
      "op": "PUSH2",
      "value": "0xFA7"
    },
    "4002": {
      "op": "JUMPI"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4005": {
      "op": "DUP1"
    },
    "4006": {
      "op": "REVERT"
    },
    "4007": {
      "op": "JUMPDEST"
    },
    "4008": {
      "op": "DUP4"
    },
    "4009": {
      "op": "CALLDATALOAD"
    },
    "4010": {
      "op": "SWAP3"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "PUSH2",
      "value": "0xFB7"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4017": {
      "op": "DUP6"
    },
    "4018": {
      "op": "ADD"
    },
    "4019": {
      "op": "PUSH2",
      "value": "0xF4D"
    },
    "4022": {
      "jump": "i",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "SWAP2"
    },
    "4025": {
      "op": "POP"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4028": {
      "op": "DUP5"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "CALLDATALOAD"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4034": {
      "op": "DUP2"
    },
    "4035": {
      "op": "PUSH2",
      "value": "0xF84"
    },
    "4038": {
      "jump": "i",
      "op": "JUMP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "DUP1"
    },
    "4041": {
      "op": "SWAP2"
    },
    "4042": {
      "op": "POP"
    },
    "4043": {
      "op": "POP"
    },
    "4044": {
      "op": "SWAP3"
    },
    "4045": {
      "op": "POP"
    },
    "4046": {
      "op": "SWAP3"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "SWAP3"
    },
    "4049": {
      "jump": "o",
      "op": "JUMP"
    },
    "4050": {
      "op": "JUMPDEST"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "DUP5"
    },
    "4057": {
      "op": "SUB"
    },
    "4058": {
      "op": "SLT"
    },
    "4059": {
      "op": "ISZERO"
    },
    "4060": {
      "op": "PUSH2",
      "value": "0xFE4"
    },
    "4063": {
      "op": "JUMPI"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4066": {
      "op": "DUP1"
    },
    "4067": {
      "op": "REVERT"
    },
    "4068": {
      "op": "JUMPDEST"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "MLOAD"
    },
    "4071": {
      "op": "SWAP2"
    },
    "4072": {
      "op": "SWAP1"
    },
    "4073": {
      "op": "POP"
    },
    "4074": {
      "jump": "o",
      "op": "JUMP"
    },
    "4075": {
      "op": "JUMPDEST"
    },
    "4076": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4083": {
      "op": "SHL"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "MSTORE"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4096": {
      "op": "REVERT"
    },
    "4097": {
      "op": "JUMPDEST"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4100": {
      "op": "DUP3"
    },
    "4101": {
      "op": "NOT"
    },
    "4102": {
      "op": "DUP3"
    },
    "4103": {
      "op": "GT"
    },
    "4104": {
      "op": "ISZERO"
    },
    "4105": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4108": {
      "op": "JUMPI"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0xFEB"
    },
    "4115": {
      "jump": "i",
      "op": "JUMP"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "POP"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "SWAP1"
    },
    "4120": {
      "jump": "o",
      "op": "JUMP"
    },
    "4121": {
      "op": "JUMPDEST"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "DUP5"
    },
    "4128": {
      "op": "SUB"
    },
    "4129": {
      "op": "SLT"
    },
    "4130": {
      "op": "ISZERO"
    },
    "4131": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4134": {
      "op": "JUMPI"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "DUP1"
    },
    "4138": {
      "op": "REVERT"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "DUP2"
    },
    "4141": {
      "op": "MLOAD"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0xDEC"
    },
    "4145": {
      "op": "DUP2"
    },
    "4146": {
      "op": "PUSH2",
      "value": "0xF84"
    },
    "4149": {
      "jump": "i",
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4153": {
      "op": "DUP2"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4156": {
      "op": "NOT"
    },
    "4157": {
      "op": "DIV"
    },
    "4158": {
      "op": "DUP4"
    },
    "4159": {
      "op": "GT"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "ISZERO"
    },
    "4162": {
      "op": "ISZERO"
    },
    "4163": {
      "op": "AND"
    },
    "4164": {
      "op": "ISZERO"
    },
    "4165": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4168": {
      "op": "JUMPI"
    },
    "4169": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0xFEB"
    },
    "4175": {
      "jump": "i",
      "op": "JUMP"
    },
    "4176": {
      "op": "JUMPDEST"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "op": "MUL"
    },
    "4179": {
      "op": "SWAP1"
    },
    "4180": {
      "jump": "o",
      "op": "JUMP"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4184": {
      "op": "DUP3"
    },
    "4185": {
      "op": "DUP3"
    },
    "4186": {
      "op": "LT"
    },
    "4187": {
      "op": "ISZERO"
    },
    "4188": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "4191": {
      "op": "JUMPI"
    },
    "4192": {
      "op": "PUSH2",
      "value": "0x1067"
    },
    "4195": {
      "op": "PUSH2",
      "value": "0xFEB"
    },
    "4198": {
      "jump": "i",
      "op": "JUMP"
    },
    "4199": {
      "op": "JUMPDEST"
    },
    "4200": {
      "op": "POP"
    },
    "4201": {
      "op": "SUB"
    },
    "4202": {
      "op": "SWAP1"
    },
    "4203": {
      "jump": "o",
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4220": {
      "op": "MSTORE"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4225": {
      "op": "REVERT"
    },
    "4226": {
      "op": "JUMPDEST"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "op": "DUP3"
    },
    "4230": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4233": {
      "op": "JUMPI"
    },
    "4234": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4244": {
      "op": "MSTORE"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4254": {
      "op": "REVERT"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "DIV"
    },
    "4258": {
      "op": "SWAP1"
    },
    "4259": {
      "jump": "o",
      "op": "JUMP"
    },
    "4260": {
      "op": "JUMPDEST"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4263": {
      "op": "JUMPDEST"
    },
    "4264": {
      "op": "DUP4"
    },
    "4265": {
      "op": "DUP2"
    },
    "4266": {
      "op": "LT"
    },
    "4267": {
      "op": "ISZERO"
    },
    "4268": {
      "op": "PUSH2",
      "value": "0x10BF"
    },
    "4271": {
      "op": "JUMPI"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "DUP2"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "MLOAD"
    },
    "4276": {
      "op": "DUP4"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x10A7"
    },
    "4286": {
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "DUP2"
    },
    "4290": {
      "op": "GT"
    },
    "4291": {
      "op": "ISZERO"
    },
    "4292": {
      "op": "PUSH2",
      "value": "0x10CE"
    },
    "4295": {
      "op": "JUMPI"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4298": {
      "op": "DUP5"
    },
    "4299": {
      "op": "DUP5"
    },
    "4300": {
      "op": "ADD"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "JUMPDEST"
    },
    "4303": {
      "op": "POP"
    },
    "4304": {
      "op": "POP"
    },
    "4305": {
      "op": "POP"
    },
    "4306": {
      "op": "POP"
    },
    "4307": {
      "jump": "o",
      "op": "JUMP"
    },
    "4308": {
      "op": "JUMPDEST"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "MLOAD"
    },
    "4313": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "op": "DUP5"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4320": {
      "op": "DUP8"
    },
    "4321": {
      "op": "ADD"
    },
    "4322": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4325": {
      "jump": "i",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "SWAP2"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "op": "SWAP2"
    },
    "4330": {
      "op": "ADD"
    },
    "4331": {
      "op": "SWAP3"
    },
    "4332": {
      "op": "SWAP2"
    },
    "4333": {
      "op": "POP"
    },
    "4334": {
      "op": "POP"
    },
    "4335": {
      "jump": "o",
      "op": "JUMP"
    },
    "4336": {
      "op": "JUMPDEST"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4339": {
      "op": "DUP2"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4343": {
      "op": "DUP3"
    },
    "4344": {
      "op": "MLOAD"
    },
    "4345": {
      "op": "DUP1"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4348": {
      "op": "DUP5"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "MSTORE"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0x110F"
    },
    "4354": {
      "op": "DUP2"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4357": {
      "op": "DUP6"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4361": {
      "op": "DUP8"
    },
    "4362": {
      "op": "ADD"
    },
    "4363": {
      "op": "PUSH2",
      "value": "0x10A4"
    },
    "4366": {
      "jump": "i",
      "op": "JUMP"
    },
    "4367": {
      "op": "JUMPDEST"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4373": {
      "op": "NOT"
    },
    "4374": {
      "op": "AND"
    },
    "4375": {
      "op": "SWAP2"
    },
    "4376": {
      "op": "SWAP1"
    },
    "4377": {
      "op": "SWAP2"
    },
    "4378": {
      "op": "ADD"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "op": "SWAP3"
    },
    "4383": {
      "op": "SWAP2"
    },
    "4384": {
      "op": "POP"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5b853d1fde705a0e479815ec2c375fec4aa47476",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context, Ownable  {\n\n    //Token\n    IERC20 public legacy_token;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Investor) public walletToInvestor;\n\n    //Structs\n    struct Investor {\n        address investor_address;// probably can take it out\n\n        uint256 tokens_received;// amount of tokens the Investor has received\n\n        uint256 tokens_promised;// amount of tokens the Investor is owed\n\n        //uint256 can_withdraw;// percentage of his tokens the investor can withdraw at the moment\n\n        //uint256 has_withdrawn;// percentage of tokens th einvestor has withdrawn\n\n        uint256 lock_start;// saves the date of the initial locking of the contract\n\n        bool under250k_investor;// if true than it is an investor between 50k-250k, if false it is 250k+\n    }\n\n    //Variables\n    address[] investor_address;// array with all the investor aaddresses\n    address[] addresses_O50I;\n    address[] addresses_O250I;\n    uint256[] tokens_O50I;\n    uint256[] tokens_O250I;\n    uint256[] percent_per_milestone;\n    uint256 initLock;// initial lock period \n    uint256 erc20Released;// total amount of released tokens\n    uint256 numMilestones;// number of milestones (number of payments for each Investor)\n    uint256 num_O50I;// number of under 50k token vested investors\n    uint256 num_O250I;// number of over 50k token vested investors\n    uint256 totalTokens_O50I;// total tokens promised to investors with 50k-250k tokens vested\n    uint256 totalTokens_O250I;// total tokens promised to investors with more than 250k tokens vested\n    address tokenAddress;// token address\n    bool internal locked;   // boolean to prevent reentrancy\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        address[] memory _addresses_O50I,\n        address[] memory _addresses_O250I,\n        uint256[] memory _tokens_O50I,\n        uint256[] memory _tokens_O250I,\n        uint256[] memory _percent_per_milestone,\n        uint256 _tokens_O50ITotal,// sum all the tokens for the investors with with 50k-250k tokens vested\n        uint256 _tokens_O250ITotal,// ... more than 250k tokens\n        address _tokenAddress\n    ) {\n\n        // percentage of tokens an investor can withdraw at each milestone\n        percent_per_milestone = _percent_per_milestone;\n\n        // number of investors with...\n        num_O50I = _addresses_O50I.length;// with 50k-250k tokens vested\n        num_O250I = _addresses_O250I.length;// more than 250k tokens vested\n\n        // array of addresses of investors with ...\n        addresses_O50I= _addresses_O50I;// with 50k-250k tokens vested\n        addresses_O250I= _addresses_O250I;// more than 250k tokens vested\n\n        // array of tokens promised to investors with ...\n        tokens_O50I = _tokens_O50I;// with 50k-250k tokens vested\n        tokens_O250I = _tokens_O250I;// more than 250k tokens vested\n\n        // total tokens promised to investors with ...\n        totalTokens_O50I = _tokens_O50ITotal;// with 50k-250k tokens vested\n        totalTokens_O250I = _tokens_O250ITotal;// more than 250k tokens vested\n\n        // create an Investor struct for each investor with less than 50k tokens\n        for (uint i=0; i<num_O50I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O50I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O50I[i];\n            uint256 _investor_tokens = tokens_O50I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp, \n                                                true);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // create an Investor struct for each investor with more than 250k tokens\n        for (uint i=0; i<num_O250I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O250I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O250I[i];\n            uint256 _investor_tokens = tokens_O250I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp, \n                                                false);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // establish token address\n        tokenAddress = _tokenAddress;\n\n        // establish the IERC20 for legacy token to contract interactions\n        legacy_token = IERC20(_tokenAddress);\n\n        // Initialize the reentrancy variable to not locked\n        locked = false;\n\n    }\n\n\n    // Modifier\n    /**\n     * @dev Prevents reentrancy\n     */\n    modifier noReentrant() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n     * @dev Release the tokens \n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual noReentrant(){\n        uint256 releasable = can_release_percent(msg.sender, uint64(block.timestamp));\n        erc20Released += releasable;\n        emit ERC20Released(tokenAddress, releasable);\n        SafeERC20.safeTransfer(IERC20(tokenAddress), msg.sender, releasable);\n        walletToInvestor[msg.sender].tokens_received += releasable;\n    }\n\n\n    /**\n     * @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     * Updates the investor struct with the amount of tokens he has withdrawn.\n     */\n    function can_release_percent(address _callerAddress, uint64 timestamp) internal virtual returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[msg.sender].tokens_received < walletToInvestor[msg.sender].tokens_promised, \n                \"All tokens have been claimed\");\n        \n\n        uint256 _current_time = block.timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > (walletToInvestor[msg.sender].lock_start+2592000*i)){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/1000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                return 0;\n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-walletToInvestor[msg.sender].lock_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/1000/2592000 * _second_in_bracket;\n\n                return _can_release;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[_callerAddress].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //Update \n        walletToInvestor[_callerAddress].tokens_received = walletToInvestor[_callerAddress].tokens_received \n                                                            + _able_to_release;\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev Adds a new Investor.\n     */\n    function new_Investor(uint256 _amount, address _newInvestor_address, bool _under250K) public {\n\n        //require that the owner has enough legacy tokens to satisfy the promised tokens for locking\n        require(legacy_token.balanceOf(_newInvestor_address)>= _amount, \n        \"You don't have enough Legacy tokens for the price requirement.\");\n\n        require(walletToInvestor[_newInvestor_address].tokens_promised== 0, \n        \"This address is already in the vesting contract.\");\n\n        // transfer the tokens to the contract\n        legacy_token.transferFrom(_newInvestor_address, address(this), _amount);\n\n        if(_under250K){\n            addresses_O50I.push(_newInvestor_address);\n            tokens_O50I.push(_amount);\n        }else{\n            addresses_O250I.push();\n            tokens_O250I.push(_amount);\n        }\n\n        // create the new Investor struc\n        Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                uint64(block.timestamp),\n                                                true);\n        // push the new Investor structto the Investors arra\n        walletToInvestor[_newInvestor_address]=investor;  \n    }\n\n    /**\n     * @dev View function that an investor can use to see how many tokens he can withdraw\n     */\n    function view_can_release_percent() public view returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[msg.sender].tokens_received < walletToInvestor[msg.sender].tokens_promised, \n                \"All tokens have been claimed\");\n        \n\n        uint256 _current_time = block.timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > (walletToInvestor[msg.sender].lock_start+2592000*i)){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/1000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                return 0;\n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-walletToInvestor[msg.sender].lock_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/1000/2592000 * _second_in_bracket;\n\n                return _can_release;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[msg.sender].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev View function to get contract balance\n     */\n    function contract_balance() public view returns (uint256) {\n        return legacy_token.balanceOf(address(this));\n    }\n}",
  "sourceMap": "846:12736:6:-:0;;;2714:3669;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;3233:46:6;;;;:21;;:46;;;;;:::i;:::-;-1:-1:-1;3340:22:6;;3329:8;:33;;;3414:23;;3402:9;:35;3531:31;;:14;;:31;;;;;:::i;:::-;-1:-1:-1;3602:33:6;;;;:15;;:33;;;;;:::i;:::-;-1:-1:-1;3735:26:6;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;3801:28:6;;;;:12;;:28;;;;;:::i;:::-;-1:-1:-1;3926:16:6;:36;;;4002:17;:38;;;-1:-1:-1;4163:918:6;4180:8;;4178:1;:10;4163:918;;;4304:1;-1:-1:-1;;;;;4275:31:6;:14;4290:1;4275:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4275:17:6;:31;4267:117;;;;-1:-1:-1;;;4267:117:6;;4003:2:7;4267:117:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;4267:117:6;;;;;;;;;4486:25;4514:14;4529:1;4514:17;;;;;;;;:::i;:::-;;;;;;;;;;4572:11;:14;;-1:-1:-1;;;;;4514:17:6;;;;-1:-1:-1;4572:11:6;4584:1;;4572:14;;;;;;:::i;:::-;;;;;;;;;;;;;;4685:267;;;;;;;;-1:-1:-1;;;;;4685:267:6;;;;;;;;;;;;;;;;;;4881:15;4685:267;;;;;;4947:4;4685:267;;;;;;5025:35;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;5025:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5025:44:6;;;;;;;;;;;-1:-1:-1;4190:3:6;;;;:::i;:::-;;;;4163:918;;;;5178:6;5173:923;5190:9;;5188:1;:11;5173:923;;;5316:1;-1:-1:-1;;;;;5286:32:6;:15;5302:1;5286:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5286:18:6;:32;5278:118;;;;-1:-1:-1;;;5278:118:6;;4003:2:7;5278:118:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;5278:118:6;3801:416:7;5278:118:6;5498:25;5526:15;5542:1;5526:18;;;;;;;;:::i;:::-;;;;;;;;;;5585:12;:15;;-1:-1:-1;;;;;5526:18:6;;;;-1:-1:-1;5585:12:6;5598:1;;5585:15;;;;;;:::i;:::-;;;;;;;;;;;;;;5699:268;;;;;;;;-1:-1:-1;;;;;5699:268:6;;;;;;;;;;;;;;;;;;5895:15;5699:268;;;;;;;;;;;;6040:35;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;6040:44:6;;;;;;;;;;;-1:-1:-1;6040:44:6;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6040:44:6;;;;;;;;;;;-1:-1:-1;5201:3:6;;;;:::i;:::-;;;;5173:923;;;-1:-1:-1;6141:12:6;:28;;;6254:36;;-1:-1:-1;;;;;;6254:36:6;-1:-1:-1;;;;;6141:28:6;;;6254:36;;;;;-1:-1:-1;;;;;;6361:14:6;;;;;;-1:-1:-1;846:12736:6;;-1:-1:-1;;;;;;846:12736:6;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;846:12736:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;846:12736:6;;;-1:-1:-1;846:12736:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;846:12736:6;-1:-1:-1;;;;;846:12736:6;;;;;;;;;;;-1:-1:-1;846:12736:6;;;;;;;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:7;247:40;;-1:-1:-1;;;;;302:34:7;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:7:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:7;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:7;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:7;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:7;796:683;-1:-1:-1;;;;;;796:683:7:o;1484:659::-;1549:5;1602:3;1595:4;1587:6;1583:17;1579:27;1569:55;;1620:1;1617;1610:12;1569:55;1649:6;1643:13;1675:4;1699:60;1715:43;1755:2;1715:43;:::i;1699:60::-;1793:15;;;1879:1;1875:10;;;;1863:23;;1859:32;;;1824:12;;;;1903:15;;;1900:35;;;1931:1;1928;1921:12;1900:35;1967:2;1959:6;1955:15;1979:135;1995:6;1990:3;1987:15;1979:135;;;2061:10;;2049:23;;2092:12;;;;2012;;1979:135;;2148:1516;2406:6;2414;2422;2430;2438;2446;2454;2462;2515:3;2503:9;2494:7;2490:23;2486:33;2483:53;;;2532:1;2529;2522:12;2483:53;2559:16;;-1:-1:-1;;;;;2624:14:7;;;2621:34;;;2651:1;2648;2641:12;2621:34;2674:72;2738:7;2729:6;2718:9;2714:22;2674:72;:::i;:::-;2664:82;;2792:2;2781:9;2777:18;2771:25;2755:41;;2821:2;2811:8;2808:16;2805:36;;;2837:1;2834;2827:12;2805:36;2860:74;2926:7;2915:8;2904:9;2900:24;2860:74;:::i;:::-;2850:84;;2980:2;2969:9;2965:18;2959:25;2943:41;;3009:2;2999:8;2996:16;2993:36;;;3025:1;3022;3015:12;2993:36;3048:74;3114:7;3103:8;3092:9;3088:24;3048:74;:::i;:::-;3038:84;;3168:2;3157:9;3153:18;3147:25;3131:41;;3197:2;3187:8;3184:16;3181:36;;;3213:1;3210;3203:12;3181:36;3236:74;3302:7;3291:8;3280:9;3276:24;3236:74;:::i;:::-;3226:84;;3356:3;3345:9;3341:19;3335:26;3319:42;;3386:2;3376:8;3373:16;3370:36;;;3402:1;3399;3392:12;3370:36;;3425:74;3491:7;3480:8;3469:9;3465:24;3425:74;:::i;:::-;3415:84;;;3539:3;3528:9;3524:19;3518:26;3508:36;;3584:3;3573:9;3569:19;3563:26;3553:36;;3608:50;3653:3;3642:9;3638:19;3608:50;:::i;:::-;3598:60;;2148:1516;;;;;;;;;;;:::o;3669:127::-;3730:10;3725:3;3721:20;3718:1;3711:31;3761:4;3758:1;3751:15;3785:4;3782:1;3775:15;4222:232;4261:3;4282:17;;;4279:140;;4341:10;4336:3;4332:20;4329:1;4322:31;4376:4;4373:1;4366:15;4404:4;4401:1;4394:15;4279:140;-1:-1:-1;4446:1:7;4435:13;;4222:232::o;:::-;846:12736:6;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}