{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses_O50I",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses_O250I",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O50I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O250I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percent_per_milestone",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O50ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O250ITotal",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contract_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legacy_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newInvestor_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_under250K",
          "type": "bool"
        }
      ],
      "name": "new_Investor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "view_can_release_percent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "investor_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens_received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "lock_start",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "under250k_investor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "6": "contracts/LockContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        1321
      ],
      "Context": [
        1343
      ],
      "IERC20": [
        1509
      ],
      "LockContract": [
        697
      ],
      "Math": [
        1431
      ],
      "Ownable": [
        802
      ],
      "SafeERC20": [
        1026
      ]
    },
    "id": 698,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:6"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1027,
        "src": "132:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1322,
        "src": "198:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1344,
        "src": "250:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 1432,
        "src": "302:53:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 698,
        "sourceUnit": 803,
        "src": "356:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1343,
              "src": "871:7:6"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "871:7:6"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 802,
              "src": "880:7:6"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "880:7:6"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "410:435:6",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 697,
        "linearizedBaseContracts": [
          697,
          802,
          1343
        ],
        "name": "LockContract",
        "nameLocation": "855:12:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "df129979",
            "id": 14,
            "mutability": "mutable",
            "name": "legacy_token",
            "nameLocation": "922:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "908:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1509",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1509,
                "src": "908:6:6"
              },
              "referencedDeclaration": 1509,
              "src": "908:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1509",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 20,
            "name": "ERC20Released",
            "nameLocation": "960:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "990:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "974:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1006:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "998:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:40:6"
            },
            "src": "954:60:6"
          },
          {
            "constant": false,
            "functionSelector": "92347b5e",
            "id": 25,
            "mutability": "mutable",
            "name": "walletToInvestor",
            "nameLocation": "1071:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1035:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
              "typeString": "mapping(address => struct LockContract.Investor)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1043:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1035:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                "typeString": "mapping(address => struct LockContract.Investor)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36,
                  "src": "1054:8:6"
                },
                "referencedDeclaration": 36,
                "src": "1054:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                  "typeString": "struct LockContract.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Investor",
            "id": 36,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "investor_address",
                "nameLocation": "1142:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1134:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1134:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "tokens_received",
                "nameLocation": "1204:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1196:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1196:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1283:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1275:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1275:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "lock_start",
                "nameLocation": "1540:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1533:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1533:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "under250k_investor",
                "nameLocation": "1622:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1617:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 34,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1617:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1115:8:6",
            "nodeType": "StructDefinition",
            "scope": 697,
            "src": "1108:611:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "investor_address",
            "nameLocation": "1751:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1741:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1741:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 38,
              "nodeType": "ArrayTypeName",
              "src": "1741:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "addresses_O50I",
            "nameLocation": "1824:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1814:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1814:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 41,
              "nodeType": "ArrayTypeName",
              "src": "1814:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "addresses_O250I",
            "nameLocation": "1854:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1844:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1844:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1844:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "tokens_O50I",
            "nameLocation": "1885:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1875:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1875:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1875:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "tokens_O250I",
            "nameLocation": "1912:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1902:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1902:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 50,
              "nodeType": "ArrayTypeName",
              "src": "1902:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "percent_per_milestone",
            "nameLocation": "1940:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1930:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1930:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 53,
              "nodeType": "ArrayTypeName",
              "src": "1930:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "initLock",
            "nameLocation": "1975:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1967:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1967:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "erc20Released",
            "nameLocation": "2020:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2012:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2012:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "numMilestones",
            "nameLocation": "2081:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2073:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2073:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "num_O50I",
            "nameLocation": "2170:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2162:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2162:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "num_O250I",
            "nameLocation": "2237:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2229:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2229:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "totalTokens_O50I",
            "nameLocation": "2304:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2296:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2296:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "totalTokens_O250I",
            "nameLocation": "2399:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2391:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2391:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "2501:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "2493:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2493:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "3085:3167:6",
              "statements": [
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3171:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3195:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3171:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "3171:46:6"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3267:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 100,
                        "name": "_addresses_O50I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "3278:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3278:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:33:6"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3340:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 105,
                        "name": "_addresses_O250I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "3352:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3352:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3340:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "3340:35:6"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3469:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "3485:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3469:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:31:6"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3540:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 114,
                      "name": "_addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "3557:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3540:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "3540:33:6"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3673:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 118,
                      "name": "_tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3687:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3673:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "3673:26:6"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 121,
                      "name": "tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3739:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 122,
                      "name": "_tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3754:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3739:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:28:6"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "totalTokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3864:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 126,
                      "name": "_tokens_O50ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3883:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3864:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "3864:36:6"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "totalTokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3940:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 130,
                      "name": "_tokens_O250ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "3960:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3940:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:38:6"
                },
                {
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "4132:895:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 144,
                                  "name": "addresses_O50I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42,
                                  "src": "4213:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 146,
                                "indexExpression": {
                                  "id": 145,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 134,
                                  "src": "4228:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4213:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 149,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4242:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4234:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 147,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4234:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4234:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4213:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4267:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4205:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4205:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "4205:117:6"
                      },
                      {
                        "assignments": [
                          156
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 156,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "4432:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "4424:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 155,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4424:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 160,
                        "initialValue": {
                          "baseExpression": {
                            "id": 157,
                            "name": "addresses_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4452:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 159,
                          "indexExpression": {
                            "id": 158,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4467:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4452:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4424:45:6"
                      },
                      {
                        "assignments": [
                          162
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 162,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "4491:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "4483:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 161,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4483:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 166,
                        "initialValue": {
                          "baseExpression": {
                            "id": 163,
                            "name": "tokens_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "4510:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "id": 164,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4522:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4510:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4483:41:6"
                      },
                      {
                        "assignments": [
                          169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 169,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "4612:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "4596:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 168,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 167,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "4596:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "4596:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 181,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "4632:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4700:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 173,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "4752:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 176,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4826:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4826:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4819:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 174,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4819:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4819:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4893:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 170,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4623:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4623:275:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4596:302:6"
                      },
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 182,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "4971:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 184,
                            "indexExpression": {
                              "id": 183,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "4988:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4971:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 185,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "5007:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "4971:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "4971:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 137,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4116:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 138,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4118:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4116:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 189,
                  "initializationExpression": {
                    "assignments": [
                      134
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4111:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "4106:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4106:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 136,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4113:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4106:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4128:3:6",
                      "subExpression": {
                        "id": 140,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "4128:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 142,
                    "nodeType": "ExpressionStatement",
                    "src": "4128:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "4101:926:6"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "5151:899:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 201,
                                  "name": "addresses_O250I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "5232:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 203,
                                "indexExpression": {
                                  "id": 202,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "5248:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5232:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5262:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5254:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 204,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5254:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5254:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5232:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5287:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 200,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5224:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5224:118:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 211,
                        "nodeType": "ExpressionStatement",
                        "src": "5224:118:6"
                      },
                      {
                        "assignments": [
                          213
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 213,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "5452:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 245,
                            "src": "5444:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 212,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5444:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 217,
                        "initialValue": {
                          "baseExpression": {
                            "id": 214,
                            "name": "addresses_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "5472:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "id": 215,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "5488:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5472:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5444:46:6"
                      },
                      {
                        "assignments": [
                          219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 219,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "5512:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 245,
                            "src": "5504:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 218,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5504:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 223,
                        "initialValue": {
                          "baseExpression": {
                            "id": 220,
                            "name": "tokens_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5531:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 222,
                          "indexExpression": {
                            "id": 221,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "5544:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5531:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5504:42:6"
                      },
                      {
                        "assignments": [
                          226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 226,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "5634:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 245,
                            "src": "5618:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 225,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 224,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "5618:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "5618:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 238,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 228,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "5654:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5722:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 230,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "5774:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 233,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5848:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5848:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5841:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 231,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5841:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5841:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5915:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 227,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "5645:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5645:276:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5618:303:6"
                      },
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 239,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "5994:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 241,
                            "indexExpression": {
                              "id": 240,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "6011:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5994:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 242,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "6030:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "5994:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "5994:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 194,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "5134:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 195,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5136:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5134:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "initializationExpression": {
                    "assignments": [
                      191
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5129:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "5124:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5124:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 193,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5131:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5124:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5147:3:6",
                      "subExpression": {
                        "id": 197,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "5147:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 199,
                    "nodeType": "ExpressionStatement",
                    "src": "5147:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5119:931:6"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 247,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "6095:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 248,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "6110:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6095:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "6095:28:6"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 251,
                      "name": "legacy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "6208:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1509",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 253,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6230:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 252,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1509,
                        "src": "6223:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1509_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6223:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1509",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6208:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1509",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "6208:36:6"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "2552:95:6",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 258,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_addresses_O50I",
                  "nameLocation": "2690:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2673:32:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 72,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2673:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 73,
                    "nodeType": "ArrayTypeName",
                    "src": "2673:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_addresses_O250I",
                  "nameLocation": "2732:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2715:33:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 75,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2715:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76,
                    "nodeType": "ArrayTypeName",
                    "src": "2715:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_tokens_O50I",
                  "nameLocation": "2775:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2758:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2758:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 79,
                    "nodeType": "ArrayTypeName",
                    "src": "2758:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_tokens_O250I",
                  "nameLocation": "2814:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2797:30:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2797:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "2797:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_percent_per_milestone",
                  "nameLocation": "2854:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2837:39:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 84,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2837:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 85,
                    "nodeType": "ArrayTypeName",
                    "src": "2837:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_tokens_O50ITotal",
                  "nameLocation": "2894:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2886:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_tokens_O250ITotal",
                  "nameLocation": "3001:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "2993:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3065:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "3057:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:421:6"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3085:0:6"
            },
            "scope": 697,
            "src": "2652:3600:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "6385:331:6",
              "statements": [
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "6403:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "6395:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6395:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 273,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6436:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6436:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 269,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6455:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6455:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6448:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 267,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "6448:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6448:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 264,
                      "name": "can_release_percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "6416:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$returns$_t_uint256_$",
                        "typeString": "function (address,uint64) returns (uint256)"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6395:77:6"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 274,
                      "name": "erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6482:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 275,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "6499:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6482:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "6482:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 279,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "6538:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 280,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "6552:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "6524:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6524:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "EmitStatement",
                  "src": "6519:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 287,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "6603:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 286,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1509,
                          "src": "6596:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1509_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6596:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1509",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6618:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6618:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "6630:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1509",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 283,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "6573:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1026_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 833,
                      "src": "6573:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1509_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "6573:68:6"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 294,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6651:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 297,
                        "indexExpression": {
                          "expression": {
                            "id": 295,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6668:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6668:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6651:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "6651:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 299,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "6699:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6651:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "6651:58:6"
                }
              ]
            },
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "6259:88:6",
              "text": " @dev Release the tokens \n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "6361:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6368:2:6"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6385:0:6"
            },
            "scope": 697,
            "src": "6352:364:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "7037:2204:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 314,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7130:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 316,
                            "indexExpression": {
                              "id": 315,
                              "name": "_callerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "7147:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7130:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "7130:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 318,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7181:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 320,
                            "indexExpression": {
                              "id": 319,
                              "name": "_callerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 306,
                              "src": "7198:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7181:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "7181:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7130:99:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7248:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7122:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7122:157:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "7122:157:6"
                },
                {
                  "assignments": [
                    327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "7298:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "7290:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7290:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "id": 328,
                    "name": "timestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 308,
                    "src": "7314:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7290:33:6"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "7342:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "7334:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7334:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7357:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7334:24:6"
                },
                {
                  "assignments": [
                    335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "7431:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "7423:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7423:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 337,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7452:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7423:30:6"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "7469:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "7464:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7464:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 344,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 340,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7488:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 342,
                      "indexExpression": {
                        "id": 341,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "7505:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7488:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "7488:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7464:72:6"
                },
                {
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "7609:1078:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 356,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "7635:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 357,
                              "name": "initLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "7651:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32353932303030",
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7660:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "2592000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 359,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "7668:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7660:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7651:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7635:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 424,
                          "nodeType": "Block",
                          "src": "8319:358:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 393,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "8413:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 394,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 335,
                                      "src": "8434:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 395,
                                            "name": "initLock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 56,
                                            "src": "8456:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 398,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "32353932303030",
                                              "id": 396,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8465:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2592000_by_1",
                                                "typeString": "int_const 2592000"
                                              },
                                              "value": "2592000"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 397,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 346,
                                              "src": "8473:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "8465:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8456:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 400,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8455:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8434:41:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 402,
                                    "name": "_current_time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "8478:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8434:57:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8413:78:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 405,
                              "nodeType": "ExpressionStatement",
                              "src": "8413:78:6"
                            },
                            {
                              "expression": {
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 406,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 331,
                                  "src": "8510:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 407,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 331,
                                    "src": "8525:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 420,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 416,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 408,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 339,
                                            "src": "8561:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 409,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "8601:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 413,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 412,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 410,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 346,
                                                "src": "8623:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 411,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8625:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "8623:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8601:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8561:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 415,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8628:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "8561:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8634:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "8561:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 419,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 335,
                                      "src": "8644:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8561:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8525:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8510:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 423,
                              "nodeType": "ExpressionStatement",
                              "src": "8510:152:6"
                            }
                          ]
                        },
                        "id": 425,
                        "nodeType": "IfStatement",
                        "src": "7632:1045:6",
                        "trueBody": {
                          "id": 392,
                          "nodeType": "Block",
                          "src": "7670:645:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 363,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "7830:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 364,
                                          "name": "initLock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 56,
                                          "src": "7852:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 367,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "32353932303030",
                                            "id": 365,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7861:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2592000_by_1",
                                              "typeString": "int_const 2592000"
                                            },
                                            "value": "2592000"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 366,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 346,
                                            "src": "7869:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7861:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7852:18:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 369,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7851:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 370,
                                    "name": "initLock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "7872:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7851:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7830:50:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 373,
                              "nodeType": "ExpressionStatement",
                              "src": "7830:50:6"
                            },
                            {
                              "expression": {
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 374,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 331,
                                  "src": "7993:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 375,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 331,
                                    "src": "8008:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 382,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 376,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 339,
                                            "src": "8044:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 377,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "8084:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 381,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 380,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 378,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 346,
                                                "src": "8106:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 379,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8108:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "8106:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8084:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8044:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 383,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8111:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "8044:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8117:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "8044:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 387,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 335,
                                      "src": "8127:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8044:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8008:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7993:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 391,
                              "nodeType": "ExpressionStatement",
                              "src": "7993:152:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 349,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "7571:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 350,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "7575:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7575:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7571:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "initializationExpression": {
                    "assignments": [
                      346
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7564:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "7559:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7559:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 348,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7568:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7559:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7605:3:6",
                      "subExpression": {
                        "id": 353,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "7605:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 355,
                    "nodeType": "ExpressionStatement",
                    "src": "7605:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7555:1132:6"
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "8770:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "8762:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8762:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 434,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 430,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "8787:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 432,
                      "indexExpression": {
                        "id": 431,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "8804:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8787:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "8787:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8762:73:6"
                },
                {
                  "assignments": [
                    436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 436,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "8926:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "8918:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8918:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 437,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "8945:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 438,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "8960:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8945:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8918:56:6"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 441,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "9003:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "id": 442,
                          "name": "_callerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "9020:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9003:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "9003:48:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 445,
                            "name": "walletToInvestor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "9054:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                              "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                            }
                          },
                          "id": 447,
                          "indexExpression": {
                            "id": 446,
                            "name": "_callerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "9071:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9054:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens_received",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "9054:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 449,
                        "name": "_able_to_release",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "9166:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9054:128:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9003:179:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "9003:179:6"
                },
                {
                  "expression": {
                    "id": 453,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 436,
                    "src": "9218:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 454,
                  "nodeType": "Return",
                  "src": "9210:24:6"
                }
              ]
            },
            "documentation": {
              "id": 304,
              "nodeType": "StructuredDocumentation",
              "src": "6723:203:6",
              "text": " @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n Updates the investor struct with the amount of tokens he has withdrawn."
            },
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "can_release_percent",
            "nameLocation": "6940:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "6968:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "6960:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6960:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "6991:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "6984:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6984:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6959:42:6"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "7028:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7028:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7027:9:6"
            },
            "scope": 697,
            "src": "6931:2310:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "9398:1062:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 471,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9541:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9541:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 469,
                              "name": "legacy_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "9518:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1509",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1448,
                            "src": "9518:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9518:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 474,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "9555:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9518:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b656e7320666f7220746865207072696365207265717569726d656e742e",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9573:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c507897fbd9c92b9b5198c5093b4c5e1a3f079f5d4cb87e02a0916a81995fc76",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirment.\""
                        },
                        "value": "You don't have enough Legacy tokens for the price requirment."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c507897fbd9c92b9b5198c5093b4c5e1a3f079f5d4cb87e02a0916a81995fc76",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirment.\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9510:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9510:127:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "9510:127:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 482,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "9721:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 485,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9751:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$697",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$697",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9743:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9743:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9743:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 487,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "9758:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 479,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "9695:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1509",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1490,
                      "src": "9695:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9695:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "9695:71:6"
                },
                {
                  "condition": {
                    "id": 490,
                    "name": "_under250K",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 463,
                    "src": "9780:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "9900:87:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 504,
                              "name": "addresses_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "9914:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9914:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$_t_address_$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer) returns (address)"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9914:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "9914:22:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 512,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "9968:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 509,
                              "name": "tokens_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "9950:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9950:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9950:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "9950:26:6"
                      }
                    ]
                  },
                  "id": 516,
                  "nodeType": "IfStatement",
                  "src": "9777:210:6",
                  "trueBody": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "9791:105:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 494,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "9825:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 491,
                              "name": "addresses_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "9805:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9805:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9805:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "9805:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 500,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "9877:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 497,
                              "name": "tokens_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "9860:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9860:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9860:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "9860:25:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "investor",
                      "nameLocation": "10054:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "10038:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor"
                      },
                      "typeName": {
                        "id": 518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 517,
                          "name": "Investor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "10038:8:6"
                        },
                        "referencedDeclaration": 36,
                        "src": "10038:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                          "typeString": "struct LockContract.Investor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 521,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "10074:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10145:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 523,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "10197:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 526,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10262:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10262:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10255:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 524,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "10255:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10255:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10328:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 520,
                      "name": "Investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "10065:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                        "typeString": "type(struct LockContract.Investor storage pointer)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10065:268:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                      "typeString": "struct LockContract.Investor memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10038:295:6"
                },
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 532,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "10404:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 534,
                      "indexExpression": {
                        "id": 533,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "10421:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10404:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 535,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "10443:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor memory"
                      }
                    },
                    "src": "10404:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                      "typeString": "struct LockContract.Investor storage ref"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "10404:47:6"
                }
              ]
            },
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "9247:44:6",
              "text": " @dev Adds a new Investor."
            },
            "functionSelector": "d41d826a",
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 465,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 744,
                  "src": "9389:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "9389:9:6"
              }
            ],
            "name": "new_Investor",
            "nameLocation": "9305:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9326:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "9318:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9318:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "_newInvestor_address",
                  "nameLocation": "9343:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "9335:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_under250K",
                  "nameLocation": "9370:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "9365:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9365:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9317:64:6"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9398:0:6"
            },
            "scope": 697,
            "src": "9296:1164:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "10638:1987:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 546,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10731:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 549,
                            "indexExpression": {
                              "expression": {
                                "id": 547,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10748:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10748:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10731:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "10731:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 551,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10778:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 554,
                            "indexExpression": {
                              "expression": {
                                "id": 552,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10795:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10795:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10778:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "10778:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10731:91:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10841:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10723:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10723:149:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "10723:149:6"
                },
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "10891:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "10883:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 560,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10883:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 564,
                  "initialValue": {
                    "expression": {
                      "id": 562,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "10907:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "10907:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10883:39:6"
                },
                {
                  "assignments": [
                    566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "10941:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "10933:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10933:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10956:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10933:24:6"
                },
                {
                  "assignments": [
                    570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "11030:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "11022:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11022:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 572,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11051:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11022:30:6"
                },
                {
                  "assignments": [
                    574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 574,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "11068:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "11063:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 573,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11063:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 580,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 575,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11087:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 578,
                      "indexExpression": {
                        "expression": {
                          "id": 576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11104:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11104:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11087:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "11087:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11063:68:6"
                },
                {
                  "body": {
                    "id": 662,
                    "nodeType": "Block",
                    "src": "11204:1078:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 592,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "11230:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 593,
                              "name": "initLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "11246:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32353932303030",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11255:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2592000_by_1",
                                  "typeString": "int_const 2592000"
                                },
                                "value": "2592000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 595,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "11263:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11255:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11246:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11230:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "11914:358:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 629,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 570,
                                  "src": "12008:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 630,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 570,
                                      "src": "12029:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 635,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 631,
                                            "name": "initLock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 56,
                                            "src": "12051:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 634,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "32353932303030",
                                              "id": 632,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12060:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2592000_by_1",
                                                "typeString": "int_const 2592000"
                                              },
                                              "value": "2592000"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 633,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 582,
                                              "src": "12068:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "12060:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12051:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 636,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12050:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12029:41:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 638,
                                    "name": "_current_time",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 561,
                                    "src": "12073:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12029:57:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12008:78:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 641,
                              "nodeType": "ExpressionStatement",
                              "src": "12008:78:6"
                            },
                            {
                              "expression": {
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 642,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "12105:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 643,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 566,
                                    "src": "12120:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 656,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 654,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 652,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 650,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 644,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 574,
                                            "src": "12156:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 645,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "12196:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 649,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 648,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 646,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 582,
                                                "src": "12218:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 647,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12220:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "12218:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12196:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12156:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 651,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12223:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "12156:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12229:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "12156:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 655,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 570,
                                      "src": "12239:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12156:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12120:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12105:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 659,
                              "nodeType": "ExpressionStatement",
                              "src": "12105:152:6"
                            }
                          ]
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "11227:1045:6",
                        "trueBody": {
                          "id": 628,
                          "nodeType": "Block",
                          "src": "11265:645:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 599,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 570,
                                  "src": "11425:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 607,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 600,
                                          "name": "initLock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 56,
                                          "src": "11447:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 603,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "32353932303030",
                                            "id": 601,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11456:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2592000_by_1",
                                              "typeString": "int_const 2592000"
                                            },
                                            "value": "2592000"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 602,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 582,
                                            "src": "11464:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11456:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11447:18:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 605,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "11446:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 606,
                                    "name": "initLock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "11467:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11446:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11425:50:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 609,
                              "nodeType": "ExpressionStatement",
                              "src": "11425:50:6"
                            },
                            {
                              "expression": {
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 610,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "11588:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 611,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 566,
                                    "src": "11603:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 618,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 612,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 574,
                                            "src": "11639:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 613,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "11679:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 617,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 616,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 614,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 582,
                                                "src": "11701:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 615,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11703:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "11701:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "11679:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11639:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 619,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11706:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "11639:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11712:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "11639:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 623,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 570,
                                      "src": "11722:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11639:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11603:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11588:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 627,
                              "nodeType": "ExpressionStatement",
                              "src": "11588:152:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 585,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "11166:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 586,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "11170:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11170:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11166:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 663,
                  "initializationExpression": {
                    "assignments": [
                      582
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11159:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "11154:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11154:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 584,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11163:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11154:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11200:3:6",
                      "subExpression": {
                        "id": 589,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "11200:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 591,
                    "nodeType": "ExpressionStatement",
                    "src": "11200:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "11150:1132:6"
                },
                {
                  "assignments": [
                    665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 665,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "12365:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "12357:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 664,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12357:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 666,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "12382:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 669,
                      "indexExpression": {
                        "expression": {
                          "id": 667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12399:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12399:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12382:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "12382:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12357:69:6"
                },
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "12517:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 680,
                      "src": "12509:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 672,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12509:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 677,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 674,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 566,
                      "src": "12536:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 675,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "12551:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12536:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12509:56:6"
                },
                {
                  "expression": {
                    "id": 678,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 673,
                    "src": "12602:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 544,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "12594:24:6"
                }
              ]
            },
            "documentation": {
              "id": 540,
              "nodeType": "StructuredDocumentation",
              "src": "10466:101:6",
              "text": " @dev View function that an investor can use to see how many tokens he can withdraw"
            },
            "functionSelector": "f5cd7277",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "view_can_release_percent",
            "nameLocation": "10581:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10605:2:6"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "10629:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10628:9:6"
            },
            "scope": 697,
            "src": "10572:2053:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "12755:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 691,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12803:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$697",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$697",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12795:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 689,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12795:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12795:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 687,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "12772:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1509",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1448,
                      "src": "12772:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12772:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "12765:44:6"
                }
              ]
            },
            "documentation": {
              "id": 682,
              "nodeType": "StructuredDocumentation",
              "src": "12631:61:6",
              "text": " @dev View function to get contract balance"
            },
            "functionSelector": "057440d3",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contract_balance",
            "nameLocation": "12706:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12722:2:6"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "12746:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12746:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12745:9:6"
            },
            "scope": 697,
            "src": "12697:119:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 698,
        "src": "846:11972:6",
        "usedErrors": []
      }
    ],
    "src": "107:12711:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620018de380380620018de8339810160408190526200003491620006e7565b6200003f336200046e565b835162000054906008906020870190620004be565b508751600c8190558751600d55620000749060049060208b01906200050e565b5086516200008a9060059060208a01906200050e565b508551620000a0906006906020890190620004be565b508451620000b6906007906020880190620004be565b50600e839055600f82905560005b600c548110156200027e5760006001600160a01b031660048281548110620000f057620000f0620007ee565b6000918252602090912001546001600160a01b0316036200016d5760405162461bcd60e51b81526020600482015260346024820152600080516020620018be83398151915260448201527f72657373206973207a65726f206164647265737300000000000000000000000060648201526084015b60405180910390fd5b600060048281548110620001855762000185620007ee565b6000918252602082200154600680546001600160a01b0390921693509084908110620001b557620001b5620007ee565b60009182526020808320909101546040805160a0810182526001600160a01b039687168082528185018681528284019485526001600160401b0342811660608501908152600160808601818152948a5260029889905295909820935184549a166001600160a01b0319909a1699909917835551928201929092559151928201929092559151600390920180549151151568010000000000000000026001600160481b03199092169290941691909117179091555080620002758162000804565b915050620000c4565b5060005b600d54811015620004355760006001600160a01b031660058281548110620002ae57620002ae620007ee565b6000918252602090912001546001600160a01b031603620003275760405162461bcd60e51b81526020600482015260346024820152600080516020620018be83398151915260448201527f72657373206973207a65726f2061646472657373000000000000000000000000606482015260840162000164565b6000600582815481106200033f576200033f620007ee565b6000918252602082200154600780546001600160a01b03909216935090849081106200036f576200036f620007ee565b60009182526020808320909101546040805160a0810182526001600160a01b039687168082528185018681528284019485526001600160401b034281166060850190815260808501898152938952600297889052949097209251835499166001600160a01b0319909916989098178255965160018201559151928201929092559051600390910180549451151568010000000000000000026001600160481b031990951691909216179290921790915550806200042c8162000804565b91505062000282565b50601080546001600160a01b039092166001600160a01b0319928316811790915560018054909216179055506200082c95505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620004fc579160200282015b82811115620004fc578251825591602001919060010190620004df565b506200050a92915062000566565b5090565b828054828255906000526020600020908101928215620004fc579160200282015b82811115620004fc57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200052f565b5b808211156200050a576000815560010162000567565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005be57620005be6200057d565b604052919050565b60006001600160401b03821115620005e257620005e26200057d565b5060051b60200190565b80516001600160a01b03811681146200060457600080fd5b919050565b600082601f8301126200061b57600080fd5b81516020620006346200062e83620005c6565b62000593565b82815260059290921b840181019181810190868411156200065457600080fd5b8286015b848110156200067a576200066c81620005ec565b835291830191830162000658565b509695505050505050565b600082601f8301126200069757600080fd5b81516020620006aa6200062e83620005c6565b82815260059290921b84018101918181019086841115620006ca57600080fd5b8286015b848110156200067a5780518352918301918301620006ce565b600080600080600080600080610100898b0312156200070557600080fd5b88516001600160401b03808211156200071d57600080fd5b6200072b8c838d0162000609565b995060208b01519150808211156200074257600080fd5b620007508c838d0162000609565b985060408b01519150808211156200076757600080fd5b620007758c838d0162000685565b975060608b01519150808211156200078c57600080fd5b6200079a8c838d0162000685565b965060808b0151915080821115620007b157600080fd5b50620007c08b828c0162000685565b94505060a0890151925060c08901519150620007df60e08a01620005ec565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b6000600182016200082557634e487b7160e01b600052601160045260246000fd5b5060010190565b611082806200083c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806392347b5e1161006657806392347b5e146100ea578063d41d826a1461017f578063df12997914610192578063f2fde38b146101a5578063f5cd7277146101b857600080fd5b8063057440d314610098578063715018a6146100b357806386d1a69f146100bd5780638da5cb5b146100c5575b600080fd5b6100a06101c0565b6040519081526020015b60405180910390f35b6100bb610232565b005b6100bb610271565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100aa565b6101416100f8366004610e44565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919067ffffffffffffffff811690600160401b900460ff1685565b604080516001600160a01b03909616865260208601949094529284019190915267ffffffffffffffff1660608301521515608082015260a0016100aa565b6100bb61018d366004610e6d565b610319565b6001546100d2906001600160a01b031681565b6100bb6101b3366004610e44565b61060e565b6100a06106a9565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610ead565b905090565b6000546001600160a01b031633146102655760405162461bcd60e51b815260040161025c90610ec6565b60405180910390fd5b61026f60006108bc565b565b600061027d334261090c565b905080600a60008282546102919190610f11565b90915550506010546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26010546102ef906001600160a01b03163383610b8c565b3360009081526002602052604081206001018054839290610311908490610f11565b909155505050565b6000546001600160a01b031633146103435760405162461bcd60e51b815260040161025c90610ec6565b6001546040516370a0823160e01b815233600482015284916001600160a01b0316906370a0823190602401602060405180830381865afa15801561038b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103af9190610ead565b10156104235760405162461bcd60e51b815260206004820152603d60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f7220746865207072696365207265717569726d656e742e000000606482015260840161025c565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af115801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a09190610f29565b508015610524576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01839055610562565b6005805460019081019091556007805491820181556000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018390555b506040805160a0810182526001600160a01b039283168082526000602080840182815284860197885267ffffffffffffffff42811660608701908152600160808801818152968652600294859052979094209551865498166001600160a01b0319909816979097178555519484019490945594519282019290925592516003909301805491511515600160401b0268ffffffffffffffffff199092169390921692909217919091179055565b6000546001600160a01b031633146106385760405162461bcd60e51b815260040161025c90610ec6565b6001600160a01b03811661069d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025c565b6106a6816108bc565b50565b336000908152600260208190526040822090810154600190910154106107115760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d656400000000604482015260640161025c565b33600090815260026020819052604082200154429190819060015b6008548111610892576107428162278d00610f46565b60095461074f9190610f11565b8511156107e9576009546107668262278d00610f46565b6009546107739190610f11565b61077d9190610f65565b92508262278d006127106008610794600186610f65565b815481106107a4576107a4610f7c565b9060005260206000200154856107ba9190610f46565b6107c49190610f92565b6107ce9190610f92565b6107d89190610f46565b6107e29085610f11565b9350610880565b846107f78262278d00610f46565b6009546108049190610f11565b61080e9085610f11565b6108189190610f65565b92508262278d00612710600861082f600186610f65565b8154811061083f5761083f610f7c565b9060005260206000200154856108559190610f46565b61085f9190610f92565b6108699190610f92565b6108739190610f46565b61087d9085610f11565b93505b8061088a81610fb4565b91505061072c565b5033600090815260026020526040812060010154906108b18286610f65565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821660009081526002602081905260408220908101546001909101541061097d5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d656400000000604482015260640161025c565b6001600160a01b03831660009081526002602081905260408220015467ffffffffffffffff84169190819060015b6008548111610b11576109c18162278d00610f46565b6009546109ce9190610f11565b851115610a68576009546109e58262278d00610f46565b6009546109f29190610f11565b6109fc9190610f65565b92508262278d006127106008610a13600186610f65565b81548110610a2357610a23610f7c565b906000526020600020015485610a399190610f46565b610a439190610f92565b610a4d9190610f92565b610a579190610f46565b610a619085610f11565b9350610aff565b84610a768262278d00610f46565b600954610a839190610f11565b610a8d9085610f11565b610a979190610f65565b92508262278d006127106008610aae600186610f65565b81548110610abe57610abe610f7c565b906000526020600020015485610ad49190610f46565b610ade9190610f92565b610ae89190610f92565b610af29190610f46565b610afc9085610f11565b93505b80610b0981610fb4565b9150506109ab565b506001600160a01b03871660009081526002602052604081206001015490610b398286610f65565b6001600160a01b038a16600090815260026020526040902060010154909150610b63908290610f11565b6001600160a01b038a166000908152600260205260409020600101559550505050505092915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bde908490610be3565b505050565b6000610c38826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cb59092919063ffffffff16565b805190915015610bde5780806020019051810190610c569190610f29565b610bde5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161025c565b6060610cc48484600085610cce565b90505b9392505050565b606082471015610d2f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161025c565b6001600160a01b0385163b610d865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025c565b600080866001600160a01b03168587604051610da29190610ffd565b60006040518083038185875af1925050503d8060008114610ddf576040519150601f19603f3d011682016040523d82523d6000602084013e610de4565b606091505b50915091506108b182828660608315610dfe575081610cc7565b825115610e0e5782518084602001fd5b8160405162461bcd60e51b815260040161025c9190611019565b80356001600160a01b0381168114610e3f57600080fd5b919050565b600060208284031215610e5657600080fd5b610cc782610e28565b80151581146106a657600080fd5b600080600060608486031215610e8257600080fd5b83359250610e9260208501610e28565b91506040840135610ea281610e5f565b809150509250925092565b600060208284031215610ebf57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f2457610f24610efb565b500190565b600060208284031215610f3b57600080fd5b8151610cc781610e5f565b6000816000190483118215151615610f6057610f60610efb565b500290565b600082821015610f7757610f77610efb565b500390565b634e487b7160e01b600052603260045260246000fd5b600082610faf57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610fc657610fc6610efb565b5060010190565b60005b83811015610fe8578181015183820152602001610fd0565b83811115610ff7576000848401525b50505050565b6000825161100f818460208701610fcd565b9190910192915050565b6020815260008251806020840152611038816040850160208701610fcd565b601f01601f1916919091016040019291505056fea2646970667358221220b2900dccba62a33fa2405f98862ce9df243d8e7fcdbf47a10beecc4f0f33f4b764736f6c634300080f0033436f6e7374727563746f723a206c6f636b656420496e766573746f7220616464",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "51": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "52": [
            3735,
            3756,
            false
          ],
          "53": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "48": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "49": [
            7735,
            7742,
            false
          ],
          "50": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "6": {
        "LockContract.can_release_percent": {
          "46": [
            7130,
            7229,
            true
          ],
          "47": [
            7635,
            7669,
            false
          ]
        },
        "LockContract.new_Investor": {
          "42": [
            9518,
            9562,
            true
          ],
          "43": [
            9780,
            9790,
            false
          ]
        },
        "LockContract.view_can_release_percent": {
          "44": [
            10731,
            10822,
            true
          ],
          "45": [
            11230,
            11264,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "23": [
            2378,
            2395
          ],
          "24": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            1998,
            2071
          ],
          "16": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "34": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "33": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "35": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "36": [
            5137,
            5218
          ],
          "38": [
            5228,
            5288
          ],
          "39": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "37": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "40": [
            7758,
            7775
          ],
          "41": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "6": {
        "LockContract.can_release_percent": {
          "25": [
            7122,
            7279
          ],
          "26": [
            7830,
            7880
          ],
          "27": [
            7993,
            8145
          ],
          "28": [
            8413,
            8491
          ],
          "29": [
            8510,
            8662
          ],
          "30": [
            7605,
            7608
          ],
          "31": [
            9003,
            9182
          ],
          "32": [
            9210,
            9234
          ]
        },
        "LockContract.contract_balance": {
          "1": [
            12765,
            12809
          ]
        },
        "LockContract.new_Investor": {
          "8": [
            9510,
            9637
          ],
          "9": [
            9695,
            9766
          ],
          "10": [
            9805,
            9846
          ],
          "11": [
            9860,
            9885
          ],
          "12": [
            9914,
            9936
          ],
          "13": [
            9950,
            9976
          ],
          "14": [
            10404,
            10451
          ]
        },
        "LockContract.release": {
          "4": [
            6482,
            6509
          ],
          "5": [
            6519,
            6563
          ],
          "6": [
            6573,
            6641
          ],
          "7": [
            6651,
            6709
          ]
        },
        "LockContract.view_can_release_percent": {
          "17": [
            10723,
            10872
          ],
          "18": [
            11425,
            11475
          ],
          "19": [
            11588,
            11740
          ],
          "20": [
            12008,
            12086
          ],
          "21": [
            12105,
            12257
          ],
          "22": [
            11200,
            11203
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "846:11972:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12697:119;;;:::i;:::-;;;160:25:7;;;148:2;133:18;12697:119:6;;;;;;;;1668:101:0;;;:::i;:::-;;6352:364:6;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;360:32:7;;;342:51;;330:2;315:18;1036:85:0;196:203:7;1035:52:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:52:6;;;;;;;;;;-1:-1:-1;;;1035:52:6;;;;;;;;;;-1:-1:-1;;;;;1042:32:7;;;1024:51;;1106:2;1091:18;;1084:34;;;;1134:18;;;1127:34;;;;1209:18;1197:31;1192:2;1177:18;;1170:59;1273:14;1266:22;1260:3;1245:19;;1238:51;1011:3;996:19;1035:52:6;773:522:7;9296:1164:6;;;;;;:::i;:::-;;:::i;908:26::-;;;;;-1:-1:-1;;;;;908:26:6;;;1918:198:0;;;;;;:::i;:::-;;:::i;10572:2053:6:-;;;:::i;12697:119::-;12772:12;;:37;;-1:-1:-1;;;12772:37:6;;12803:4;12772:37;;;342:51:7;12746:7:6;;-1:-1:-1;;;;;12772:12:6;;:22;;315:18:7;;12772:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12765:44;;12697:119;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;6352:364:6:-;6395:18;6416:56;6436:10;6455:15;6416:19;:56::i;:::-;6395:77;;6499:10;6482:13;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;6538:12:6;;6524:39;;160:25:7;;;-1:-1:-1;;;;;6538:12:6;;;;6524:39;;148:2:7;133:18;6524:39:6;;;;;;;6603:12;;6573:68;;-1:-1:-1;;;;;6603:12:6;6618:10;6630;6573:22;:68::i;:::-;6668:10;6651:28;;;;:16;:28;;;;;:44;;:58;;6699:10;;6651:28;:58;;6699:10;;6651:58;:::i;:::-;;;;-1:-1:-1;;;6352:364:6:o;9296:1164::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;9518:12:6::1;::::0;:34:::1;::::0;-1:-1:-1;;;9518:34:6;;9541:10:::1;9518:34;::::0;::::1;342:51:7::0;9555:7:6;;-1:-1:-1;;;;;9518:12:6::1;::::0;:22:::1;::::0;315:18:7;;9518:34:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;9510:127;;;::::0;-1:-1:-1;;;9510:127:6;;3051:2:7;9510:127:6::1;::::0;::::1;3033:21:7::0;3090:2;3070:18;;;3063:30;3129:34;3109:18;;;3102:62;3200:31;3180:18;;;3173:59;3249:19;;9510:127:6::1;2849:425:7::0;9510:127:6::1;9695:12;::::0;:71:::1;::::0;-1:-1:-1;;;9695:71:6;;-1:-1:-1;;;;;3537:15:7;;;9695:71:6::1;::::0;::::1;3519:34:7::0;9751:4:6::1;3569:18:7::0;;;3562:43;3621:18;;;3614:34;;;9695:12:6;;::::1;::::0;:25:::1;::::0;3454:18:7;;9695:71:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9780:10;9777:210;;;9805:14;:41:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;9805:41:6::1;-1:-1:-1::0;;;;;9805:41:6;::::1;;::::0;;9860:11:::1;:25:::0;;;;::::1;::::0;;-1:-1:-1;9860:25:6;;::::1;::::0;;;9777:210:::1;;;9914:15;:22:::0;;::::1;::::0;;::::1;::::0;;;9950:12:::1;:26:::0;;;;::::1;::::0;;-1:-1:-1;9950:26:6;;::::1;::::0;;;9777:210:::1;-1:-1:-1::0;10065:268:6::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;10065:268:6;;::::1;::::0;;;10038:24:::1;10065:268;::::0;;::::1;::::0;;;;;;;;;::::1;10262:15;10065:268:::0;::::1;::::0;;;;;;10328:4:::1;10065:268:::0;;;;;;10404:38;;;:16:::1;:38:::0;;;;;;;;:47;;;;;::::1;-1:-1:-1::0;;;;;;10404:47:6;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;10404:47:6::1;-1:-1:-1::0;;10404:47:6;;;;;;::::1;::::0;;;;;;;::::1;::::0;;9296:1164::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4111:2:7;1998:73:0::1;::::0;::::1;4093:21:7::0;4150:2;4130:18;;;4123:30;4189:34;4169:18;;;4162:62;-1:-1:-1;;;4240:18:7;;;4233:36;4286:19;;1998:73:0::1;3909:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10572:2053:6:-;10795:10;10629:7;10778:28;;;:16;:28;;;;;;;:44;;;;10731;;;;;:91;10723:149;;;;-1:-1:-1;;;10723:149:6;;4518:2:7;10723:149:6;;;4500:21:7;4557:2;4537:18;;;4530:30;4596;4576:18;;;4569:58;4644:18;;10723:149:6;4316:352:7;10723:149:6;11104:10;10883:21;11087:28;;;:16;:28;;;;;;;:44;;10907:15;;10883:21;;;11163:1;11150:1132;11170:21;:28;11166:32;;11150:1132;;11255:9;11263:1;11255:7;:9;:::i;:::-;11246:8;;:18;;;;:::i;:::-;11230:13;:34;11227:1045;;;11467:8;;11456:9;11464:1;11456:7;:9;:::i;:::-;11447:8;;:18;;;;:::i;:::-;11446:29;;;;:::i;:::-;11425:50;-1:-1:-1;11425:50:6;11712:7;11706:5;11679:21;11701:3;11703:1;11701;:3;:::i;:::-;11679:26;;;;;;;;:::i;:::-;;;;;;;;;11639:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;11603:137;;:12;:137;:::i;:::-;11588:152;;11227:1045;;;12073:13;12060:9;12068:1;12060:7;:9;:::i;:::-;12051:8;;:18;;;;:::i;:::-;12029:41;;:18;:41;:::i;:::-;:57;;;;:::i;:::-;12008:78;-1:-1:-1;12008:78:6;12229:7;12223:5;12196:21;12218:3;12220:1;12218;:3;:::i;:::-;12196:26;;;;;;;;:::i;:::-;;;;;;;;;12156:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;12120:137;;:12;:137;:::i;:::-;12105:152;;11227:1045;11200:3;;;;:::i;:::-;;;;11150:1132;;;-1:-1:-1;12399:10:6;12357:22;12382:28;;;:16;:28;;;;;:44;;;;12536:29;12382:44;12536:12;:29;:::i;:::-;12509:56;10572:2053;-1:-1:-1;;;;;;;10572:2053:6:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;6931:2310:6:-;-1:-1:-1;;;;;7181:32:6;;7028:7;7181:32;;;:16;:32;;;;;;;:48;;;;7130;;;;;:99;7122:157;;;;-1:-1:-1;;;7122:157:6;;4518:2:7;7122:157:6;;;4500:21:7;4557:2;4537:18;;;4530:30;4596;4576:18;;;4569:58;4644:18;;7122:157:6;4316:352:7;7122:157:6;-1:-1:-1;;;;;7488:32:6;;7290:21;7488:32;;;:16;:32;;;;;;;:48;;7290:33;;;;:21;;;7568:1;7555:1132;7575:21;:28;7571:32;;7555:1132;;7660:9;7668:1;7660:7;:9;:::i;:::-;7651:8;;:18;;;;:::i;:::-;7635:13;:34;7632:1045;;;7872:8;;7861:9;7869:1;7861:7;:9;:::i;:::-;7852:8;;:18;;;;:::i;:::-;7851:29;;;;:::i;:::-;7830:50;-1:-1:-1;7830:50:6;8117:7;8111:5;8084:21;8106:3;8108:1;8106;:3;:::i;:::-;8084:26;;;;;;;;:::i;:::-;;;;;;;;;8044:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;8008:137;;:12;:137;:::i;:::-;7993:152;;7632:1045;;;8478:13;8465:9;8473:1;8465:7;:9;:::i;:::-;8456:8;;:18;;;;:::i;:::-;8434:41;;:18;:41;:::i;:::-;:57;;;;:::i;:::-;8413:78;-1:-1:-1;8413:78:6;8634:7;8628:5;8601:21;8623:3;8625:1;8623;:3;:::i;:::-;8601:26;;;;;;;;:::i;:::-;;;;;;;;;8561:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;8525:137;;:12;:137;:::i;:::-;8510:152;;7632:1045;7605:3;;;;:::i;:::-;;;;7555:1132;;;-1:-1:-1;;;;;;8787:32:6;;8762:22;8787:32;;;:16;:32;;;;;:48;;;;8945:29;8787:48;8945:12;:29;:::i;:::-;-1:-1:-1;;;;;9054:32:6;;;;;;:16;:32;;;;;:48;;;8918:56;;-1:-1:-1;9054:128:6;;8918:56;;9054:128;:::i;:::-;-1:-1:-1;;;;;9003:32:6;;;;;;:16;:32;;;;;:48;;:179;9218:16;-1:-1:-1;;;;;;6931:2310:6;;;;:::o;701:205:2:-;840:58;;;-1:-1:-1;;;;;5662:32:7;;840:58:2;;;5644:51:7;5711:18;;;;5704:34;;;840:58:2;;;;;;;;;;5617:18:7;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;5951:2:7;3811:85:2;;;5933:21:7;5990:2;5970:18;;;5963:30;6029:34;6009:18;;;6002:62;-1:-1:-1;;;6080:18:7;;;6073:40;6130:19;;3811:85:2;5749:406:7;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;6362:2:7;5137:81:3;;;6344:21:7;6401:2;6381:18;;;6374:30;6440:34;6420:18;;;6413:62;-1:-1:-1;;;6491:18:7;;;6484:36;6537:19;;5137:81:3;6160:402:7;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;6769:2:7;5228:60:3;;;6751:21:7;6808:2;6788:18;;;6781:30;6847:31;6827:18;;;6820:59;6896:18;;5228:60:3;6567:353:7;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;404:173:7:-;472:20;;-1:-1:-1;;;;;521:31:7;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;1300:118::-;1386:5;1379:13;1372:21;1365:5;1362:32;1352:60;;1408:1;1405;1398:12;1423:383;1497:6;1505;1513;1566:2;1554:9;1545:7;1541:23;1537:32;1534:52;;;1582:1;1579;1572:12;1534:52;1618:9;1605:23;1595:33;;1647:38;1681:2;1670:9;1666:18;1647:38;:::i;:::-;1637:48;;1735:2;1724:9;1720:18;1707:32;1748:28;1770:5;1748:28;:::i;:::-;1795:5;1785:15;;;1423:383;;;;;:::o;2034:184::-;2104:6;2157:2;2145:9;2136:7;2132:23;2128:32;2125:52;;;2173:1;2170;2163:12;2125:52;-1:-1:-1;2196:16:7;;2034:184;-1:-1:-1;2034:184:7:o;2223:356::-;2425:2;2407:21;;;2444:18;;;2437:30;2503:34;2498:2;2483:18;;2476:62;2570:2;2555:18;;2223:356::o;2584:127::-;2645:10;2640:3;2636:20;2633:1;2626:31;2676:4;2673:1;2666:15;2700:4;2697:1;2690:15;2716:128;2756:3;2787:1;2783:6;2780:1;2777:13;2774:39;;;2793:18;;:::i;:::-;-1:-1:-1;2829:9:7;;2716:128::o;3659:245::-;3726:6;3779:2;3767:9;3758:7;3754:23;3750:32;3747:52;;;3795:1;3792;3785:12;3747:52;3827:9;3821:16;3846:28;3868:5;3846:28;:::i;4673:168::-;4713:7;4779:1;4775;4771:6;4767:14;4764:1;4761:21;4756:1;4749:9;4742:17;4738:45;4735:71;;;4786:18;;:::i;:::-;-1:-1:-1;4826:9:7;;4673:168::o;4846:125::-;4886:4;4914:1;4911;4908:8;4905:34;;;4919:18;;:::i;:::-;-1:-1:-1;4956:9:7;;4846:125::o;4976:127::-;5037:10;5032:3;5028:20;5025:1;5018:31;5068:4;5065:1;5058:15;5092:4;5089:1;5082:15;5108:217;5148:1;5174;5164:132;;5218:10;5213:3;5209:20;5206:1;5199:31;5253:4;5250:1;5243:15;5281:4;5278:1;5271:15;5164:132;-1:-1:-1;5310:9:7;;5108:217::o;5330:135::-;5369:3;5390:17;;;5387:43;;5410:18;;:::i;:::-;-1:-1:-1;5457:1:7;5446:13;;5330:135::o;6925:258::-;6997:1;7007:113;7021:6;7018:1;7015:13;7007:113;;;7097:11;;;7091:18;7078:11;;;7071:39;7043:2;7036:10;7007:113;;;7138:6;7135:1;7132:13;7129:48;;;7173:1;7164:6;7159:3;7155:16;7148:27;7129:48;;6925:258;;;:::o;7188:274::-;7317:3;7355:6;7349:13;7371:53;7417:6;7412:3;7405:4;7397:6;7393:17;7371:53;:::i;:::-;7440:16;;;;;7188:274;-1:-1:-1;;7188:274:7:o;7467:383::-;7616:2;7605:9;7598:21;7579:4;7648:6;7642:13;7691:6;7686:2;7675:9;7671:18;7664:34;7707:66;7766:6;7761:2;7750:9;7746:18;7741:2;7733:6;7729:15;7707:66;:::i;:::-;7834:2;7813:15;-1:-1:-1;;7809:29:7;7794:45;;;;7841:2;7790:54;;7467:383;-1:-1:-1;;7467:383:7:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "contract_balance()": {
        "details": "View function to get contract balance"
      },
      "new_Investor(uint256,address,bool)": {
        "details": "Adds a new Investor."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release()": {
        "details": "Release the tokens  Emits a {ERC20Released} event."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "view_can_release_percent()": {
        "details": "View function that an investor can use to see how many tokens he can withdraw"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    846,
    12818
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92347B5E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x92347B5E EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0xD41D826A EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xDF129979 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xF5CD7277 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57440D3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x232 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x271 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0x141 PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0xBB PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x6A9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26F PUSH1 0x0 PUSH2 0x8BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D CALLER TIMESTAMP PUSH2 0x90C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x10 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xB8C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x311 SWAP1 DUP5 SWAP1 PUSH2 0xF11 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST LT ISZERO PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E7320666F7220746865207072696365207265717569726D656E742E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP4 SWAP1 SSTORE PUSH2 0x562 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP4 SWAP1 SSTORE JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD SWAP8 DUP9 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF TIMESTAMP DUP2 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE SWAP7 DUP7 MSTORE PUSH1 0x2 SWAP5 DUP6 SWAP1 MSTORE SWAP8 SWAP1 SWAP5 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP6 SSTORE MLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP5 MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP3 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP2 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH9 0xFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25C JUMP JUMPDEST PUSH2 0x6A6 DUP2 PUSH2 0x8BC JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x892 JUMPI PUSH2 0x742 DUP2 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x74F SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x9 SLOAD PUSH2 0x766 DUP3 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x77D SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x794 PUSH1 0x1 DUP7 PUSH2 0xF65 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0xF7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x7E2 SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP PUSH2 0x880 JUMP JUMPDEST DUP5 PUSH2 0x7F7 DUP3 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x80E SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x818 SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x82F PUSH1 0x1 DUP7 PUSH2 0xF65 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x83F JUMPI PUSH2 0x83F PUSH2 0xF7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x869 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x873 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0x87D SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP1 PUSH2 0x88A DUP2 PUSH2 0xFB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x72C JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0x8B1 DUP3 DUP7 PUSH2 0xF65 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xB11 JUMPI PUSH2 0x9C1 DUP2 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x9 SLOAD PUSH2 0x9E5 DUP3 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xA13 PUSH1 0x1 DUP7 PUSH2 0xF65 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA23 JUMPI PUSH2 0xA23 PUSH2 0xF7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xA39 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xA4D SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xA61 SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP PUSH2 0xAFF JUMP JUMPDEST DUP5 PUSH2 0xA76 DUP3 PUSH3 0x278D00 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xA83 SWAP2 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xA8D SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0xF65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xAAE PUSH1 0x1 DUP7 PUSH2 0xF65 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xABE JUMPI PUSH2 0xABE PUSH2 0xF7C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xADE SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xAE8 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH2 0xAFC SWAP1 DUP6 PUSH2 0xF11 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP1 PUSH2 0xB09 DUP2 PUSH2 0xFB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9AB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0xB39 DUP3 DUP7 PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xB63 SWAP1 DUP3 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBDE SWAP1 DUP5 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC38 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xBDE JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC56 SWAP2 SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCC4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8B1 DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0xDFE JUMPI POP DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xE0E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC7 DUP3 PUSH2 0xE28 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xE92 PUSH1 0x20 DUP6 ADD PUSH2 0xE28 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xEA2 DUP2 PUSH2 0xE5F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF24 JUMPI PUSH2 0xF24 PUSH2 0xEFB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xCC7 DUP2 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF60 PUSH2 0xEFB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0xEFB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFAF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xFC6 JUMPI PUSH2 0xFC6 PUSH2 0xEFB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFD0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFF7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x100F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xFCD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1038 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SWAP1 0xD 0xCC 0xBA PUSH3 0xA33FA2 BLOCKHASH 0x5F SWAP9 DUP7 0x2C 0xE9 0xDF 0x24 RETURNDATASIZE DUP15 PUSH32 0xCDBF47A10BEECC4F0F33F4B764736F6C634300080F0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "38": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "49": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA"
    },
    "53": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD41D826A"
    },
    "60": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "64": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDF129979"
    },
    "71": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192"
    },
    "75": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A5"
    },
    "86": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF5CD7277"
    },
    "93": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B8"
    },
    "97": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x57440D3"
    },
    "109": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB3"
    },
    "124": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86D1A69F"
    },
    "131": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "135": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5"
    },
    "146": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "DUP1",
      "path": "6"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        846,
        12818
      ],
      "op": "REVERT",
      "path": "6"
    },
    "152": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "153": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "156": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C0"
    },
    "159": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMP",
      "path": "6"
    },
    "160": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "161": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "163": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "DUP2"
    },
    "166": {
      "op": "MSTORE"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "169": {
      "op": "ADD"
    },
    "170": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "171": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "173": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "174": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "176": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "SUB",
      "path": "6"
    },
    "177": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "178": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "RETURN",
      "path": "6"
    },
    "179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "186": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "189": {
      "fn": "LockContract.release",
      "offset": [
        6352,
        6716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "190": {
      "fn": "LockContract.release",
      "offset": [
        6352,
        6716
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "193": {
      "fn": "LockContract.release",
      "offset": [
        6352,
        6716
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x271"
    },
    "196": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6352,
        6716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "197": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "198": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "207": {
      "op": "SHL"
    },
    "208": {
      "op": "SUB"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "210": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "213": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "op": "SUB"
    },
    "222": {
      "op": "SWAP1"
    },
    "223": {
      "op": "SWAP2"
    },
    "224": {
      "op": "AND"
    },
    "225": {
      "op": "DUP2"
    },
    "226": {
      "op": "MSTORE"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "229": {
      "op": "ADD"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "233": {
      "op": "JUMP"
    },
    "234": {
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "235": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x141"
    },
    "238": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF8"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "242": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "244": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE44"
    },
    "247": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "248": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "249": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "251": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "253": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "254": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "255": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "256": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "258": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "259": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "261": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "263": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "264": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "265": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "266": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "267": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "268": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "270": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "271": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "272": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "274": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "275": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "276": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "277": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "279": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "280": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "281": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "282": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "292": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "293": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "294": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "295": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "296": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "297": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "306": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "307": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "308": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DIV",
      "path": "6"
    },
    "316": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "318": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP6",
      "path": "6"
    },
    "320": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "321": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "324": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        1035,
        1087
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "SHL"
    },
    "333": {
      "op": "SUB"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "SWAP7"
    },
    "336": {
      "op": "AND"
    },
    "337": {
      "op": "DUP7"
    },
    "338": {
      "op": "MSTORE"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "341": {
      "op": "DUP7"
    },
    "342": {
      "op": "ADD"
    },
    "343": {
      "op": "SWAP5"
    },
    "344": {
      "op": "SWAP1"
    },
    "345": {
      "op": "SWAP5"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "SWAP3"
    },
    "348": {
      "op": "DUP5"
    },
    "349": {
      "op": "ADD"
    },
    "350": {
      "op": "SWAP2"
    },
    "351": {
      "op": "SWAP1"
    },
    "352": {
      "op": "SWAP2"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "363": {
      "op": "AND"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "366": {
      "op": "DUP4"
    },
    "367": {
      "op": "ADD"
    },
    "368": {
      "op": "MSTORE"
    },
    "369": {
      "op": "ISZERO"
    },
    "370": {
      "op": "ISZERO"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "373": {
      "op": "DUP3"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "op": "MSTORE"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA"
    },
    "382": {
      "op": "JUMP"
    },
    "383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB"
    },
    "387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18D"
    },
    "390": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "391": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "393": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6D"
    },
    "396": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMP",
      "path": "6"
    },
    "397": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "398": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x319"
    },
    "401": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMP",
      "path": "6"
    },
    "402": {
      "offset": [
        908,
        934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "403": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "405": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "406": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD2"
    },
    "409": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "op": "SUB"
    },
    "418": {
      "offset": [
        908,
        934
      ],
      "op": "AND",
      "path": "6"
    },
    "419": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "420": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE44"
    },
    "434": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60E"
    },
    "439": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10572,
        12625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "441": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10572,
        12625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "444": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10572,
        12625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A9"
    },
    "447": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        10572,
        12625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "448": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "449": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12784
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x1"
    },
    "451": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12784
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "452": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "454": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "455": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "464": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "465": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12803,
        12807
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "466": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "468": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP3",
      "path": "6"
    },
    "469": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ADD",
      "path": "6"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12746,
        12753
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "473": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12746,
        12753
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "op": "SUB"
    },
    "482": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12784
      ],
      "op": "AND",
      "path": "6"
    },
    "483": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12784
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "484": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12794
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "489": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12794
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "492": {
      "op": "ADD"
    },
    "493": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "495": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "497": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "498": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "499": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP4",
      "path": "6"
    },
    "500": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "SUB",
      "path": "6"
    },
    "501": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "502": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP7",
      "path": "6"
    },
    "503": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "GAS",
      "path": "6"
    },
    "504": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "505": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "506": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "507": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "508": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x209"
    },
    "511": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "512": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "513": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "515": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "516": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "517": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "518": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "520": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "521": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "522": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "523": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "524": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "525": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "526": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "528": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "529": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "530": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "532": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "NOT",
      "path": "6"
    },
    "533": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "535": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP3",
      "path": "6"
    },
    "536": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ADD",
      "path": "6"
    },
    "537": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "AND",
      "path": "6"
    },
    "538": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP3",
      "path": "6"
    },
    "539": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ADD",
      "path": "6"
    },
    "540": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "541": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "543": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "544": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "545": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "DUP2",
      "path": "6"
    },
    "546": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "ADD",
      "path": "6"
    },
    "547": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "548": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22D"
    },
    "551": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "552": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "553": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEAD"
    },
    "556": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        12772,
        12809
      ],
      "op": "JUMP",
      "path": "6"
    },
    "557": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12772,
        12809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "558": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12765,
        12809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "559": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12765,
        12809
      ],
      "op": "POP",
      "path": "6"
    },
    "560": {
      "fn": "LockContract.contract_balance",
      "offset": [
        12697,
        12816
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "561": {
      "fn": "LockContract.contract_balance",
      "jump": "o",
      "offset": [
        12697,
        12816
      ],
      "op": "JUMP",
      "path": "6"
    },
    "562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "563": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "565": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "575": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 2
    },
    "576": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "577": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "580": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "584": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "588": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "590": {
      "op": "SHL"
    },
    "591": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "592": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "595": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "599": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC6"
    },
    "603": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "607": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "610": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "611": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "612": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "613": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x26F"
    },
    "617": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "619": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BC"
    },
    "622": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "624": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "625": {
      "fn": "LockContract.release",
      "offset": [
        6352,
        6716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "626": {
      "fn": "LockContract.release",
      "offset": [
        6395,
        6413
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "628": {
      "fn": "LockContract.release",
      "offset": [
        6416,
        6472
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D"
    },
    "631": {
      "fn": "LockContract.release",
      "offset": [
        6436,
        6446
      ],
      "op": "CALLER",
      "path": "6"
    },
    "632": {
      "fn": "LockContract.release",
      "offset": [
        6455,
        6470
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "633": {
      "fn": "LockContract.release",
      "offset": [
        6416,
        6435
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x90C"
    },
    "636": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6416,
        6472
      ],
      "op": "JUMP",
      "path": "6"
    },
    "637": {
      "fn": "LockContract.release",
      "offset": [
        6416,
        6472
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "638": {
      "fn": "LockContract.release",
      "offset": [
        6395,
        6472
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "639": {
      "fn": "LockContract.release",
      "offset": [
        6395,
        6472
      ],
      "op": "POP",
      "path": "6"
    },
    "640": {
      "fn": "LockContract.release",
      "offset": [
        6499,
        6509
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 4
    },
    "641": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "643": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6495
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "645": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "DUP3",
      "path": "6"
    },
    "646": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "DUP3",
      "path": "6"
    },
    "647": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "648": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x291"
    },
    "651": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "652": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "653": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "656": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6482,
        6509
      ],
      "op": "JUMP",
      "path": "6"
    },
    "657": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "658": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "659": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "660": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6509
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x10"
    },
    "665": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "666": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "668": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "669": {
      "op": "DUP3"
    },
    "670": {
      "op": "DUP2"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "op": "SUB"
    },
    "680": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "681": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "682": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "AND",
      "path": "6"
    },
    "683": {
      "fn": "LockContract.release",
      "offset": [
        6538,
        6550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "684": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "717": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "723": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "724": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "DUP1",
      "path": "6"
    },
    "725": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "726": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "SUB",
      "path": "6"
    },
    "727": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "728": {
      "fn": "LockContract.release",
      "offset": [
        6524,
        6563
      ],
      "op": "LOG2",
      "path": "6"
    },
    "729": {
      "fn": "LockContract.release",
      "offset": [
        6603,
        6615
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x10"
    },
    "731": {
      "fn": "LockContract.release",
      "offset": [
        6603,
        6615
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "732": {
      "fn": "LockContract.release",
      "offset": [
        6573,
        6641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EF"
    },
    "735": {
      "fn": "LockContract.release",
      "offset": [
        6573,
        6641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "op": "SUB"
    },
    "744": {
      "fn": "LockContract.release",
      "offset": [
        6603,
        6615
      ],
      "op": "AND",
      "path": "6"
    },
    "745": {
      "fn": "LockContract.release",
      "offset": [
        6618,
        6628
      ],
      "op": "CALLER",
      "path": "6"
    },
    "746": {
      "fn": "LockContract.release",
      "offset": [
        6630,
        6640
      ],
      "op": "DUP4",
      "path": "6"
    },
    "747": {
      "fn": "LockContract.release",
      "offset": [
        6573,
        6595
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8C"
    },
    "750": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6573,
        6641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "751": {
      "fn": "LockContract.release",
      "offset": [
        6573,
        6641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "752": {
      "fn": "LockContract.release",
      "offset": [
        6668,
        6678
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 7
    },
    "753": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "755": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "756": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "DUP2",
      "path": "6"
    },
    "757": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "758": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6667
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "760": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "762": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "763": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "765": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "DUP2",
      "path": "6"
    },
    "766": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "767": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "769": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6695
      ],
      "op": "ADD",
      "path": "6"
    },
    "770": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "DUP1",
      "path": "6"
    },
    "771": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "772": {
      "fn": "LockContract.release",
      "offset": [
        6699,
        6709
      ],
      "op": "DUP4",
      "path": "6"
    },
    "773": {
      "fn": "LockContract.release",
      "offset": [
        6699,
        6709
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "774": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6679
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "775": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x311"
    },
    "778": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "779": {
      "fn": "LockContract.release",
      "offset": [
        6699,
        6709
      ],
      "op": "DUP5",
      "path": "6"
    },
    "780": {
      "fn": "LockContract.release",
      "offset": [
        6699,
        6709
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "781": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "784": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6651,
        6709
      ],
      "op": "JUMP",
      "path": "6"
    },
    "785": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "786": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "787": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "788": {
      "fn": "LockContract.release",
      "offset": [
        6651,
        6709
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        6352,
        6716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "793": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "794": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "796": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "803": {
      "op": "SHL"
    },
    "804": {
      "op": "SUB"
    },
    "805": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "807": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "808": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "811": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "823": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "824": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "826": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "827": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "830": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC6"
    },
    "834": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9530
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x1"
    },
    "838": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9530
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "839": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "841": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "842": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "851": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "852": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9541,
        9551
      ],
      "op": "CALLER",
      "path": "6"
    },
    "853": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "855": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP3",
      "path": "6"
    },
    "856": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ADD",
      "path": "6"
    },
    "857": {
      "op": "MSTORE"
    },
    "858": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9555,
        9562
      ],
      "op": "DUP5",
      "path": "6"
    },
    "859": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9555,
        9562
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9530
      ],
      "op": "AND",
      "path": "6"
    },
    "869": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9530
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "870": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9540
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "875": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9540
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "881": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "883": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "884": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP1",
      "path": "6"
    },
    "885": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP4",
      "path": "6"
    },
    "886": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "SUB",
      "path": "6"
    },
    "887": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "888": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP7",
      "path": "6"
    },
    "889": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "GAS",
      "path": "6"
    },
    "890": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "891": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "892": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP1",
      "path": "6"
    },
    "893": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "894": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38B"
    },
    "897": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "898": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "899": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "901": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP1",
      "path": "6"
    },
    "902": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "903": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "904": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "906": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "REVERT",
      "path": "6"
    },
    "907": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "908": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "POP",
      "path": "6"
    },
    "909": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "POP",
      "path": "6"
    },
    "910": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "POP",
      "path": "6"
    },
    "911": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "POP",
      "path": "6"
    },
    "912": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "914": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "915": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "916": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "918": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "NOT",
      "path": "6"
    },
    "919": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "921": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP3",
      "path": "6"
    },
    "922": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ADD",
      "path": "6"
    },
    "923": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "AND",
      "path": "6"
    },
    "924": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP3",
      "path": "6"
    },
    "925": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ADD",
      "path": "6"
    },
    "926": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP1",
      "path": "6"
    },
    "927": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "929": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "930": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "POP",
      "path": "6"
    },
    "931": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "DUP2",
      "path": "6"
    },
    "932": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "ADD",
      "path": "6"
    },
    "933": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "934": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3AF"
    },
    "937": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "938": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "939": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEAD"
    },
    "942": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9518,
        9552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "943": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "944": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9562
      ],
      "op": "LT",
      "path": "6"
    },
    "945": {
      "branch": 42,
      "fn": "LockContract.new_Investor",
      "offset": [
        9518,
        9562
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "946": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x423"
    },
    "949": {
      "branch": 42,
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "950": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "952": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "961": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "964": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "966": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "DUP3",
      "path": "6"
    },
    "967": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "ADD",
      "path": "6"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "973": {
      "op": "DUP3"
    },
    "974": {
      "op": "ADD"
    },
    "975": {
      "op": "MSTORE"
    },
    "976": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "ADD"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH32",
      "value": "0x656E7320666F7220746865207072696365207265717569726D656E742E000000"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1049": {
      "op": "DUP3"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "op": "MSTORE"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1054": {
      "op": "ADD"
    },
    "1055": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25C"
    },
    "1058": {
      "op": "JUMP"
    },
    "1059": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9510,
        9637
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1060": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x1"
    },
    "1062": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1063": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1065": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1066": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1075": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1082": {
      "op": "SHL"
    },
    "1083": {
      "op": "SUB"
    },
    "1084": {
      "op": "DUP5"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "AND"
    },
    "1087": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1089": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1090": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ADD",
      "path": "6"
    },
    "1091": {
      "op": "MSTORE"
    },
    "1092": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9751,
        9755
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1095": {
      "op": "DUP4"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "DUP7"
    },
    "1103": {
      "op": "SWAP1"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1106": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1107": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "AND",
      "path": "6"
    },
    "1108": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9707
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1109": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9720
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1114": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9720
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1120": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1122": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1123": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1124": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1125": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "SUB",
      "path": "6"
    },
    "1126": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1127": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1129": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1130": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "GAS",
      "path": "6"
    },
    "1131": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "CALL",
      "path": "6"
    },
    "1132": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1133": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1134": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1135": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x47C"
    },
    "1138": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1139": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1140": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1142": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1143": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1144": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1145": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1147": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1148": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1149": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1150": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1151": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1152": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1153": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1155": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1156": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1157": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1159": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "NOT",
      "path": "6"
    },
    "1160": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1162": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1163": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ADD",
      "path": "6"
    },
    "1164": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "AND",
      "path": "6"
    },
    "1165": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1166": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ADD",
      "path": "6"
    },
    "1167": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1168": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1170": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1171": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1172": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1173": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "ADD",
      "path": "6"
    },
    "1174": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1175": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4A0"
    },
    "1178": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1179": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1180": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF29"
    },
    "1183": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9695,
        9766
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1184": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1185": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9695,
        9766
      ],
      "op": "POP",
      "path": "6"
    },
    "1186": {
      "branch": 43,
      "fn": "LockContract.new_Investor",
      "offset": [
        9780,
        9790
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1187": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1188": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x524"
    },
    "1191": {
      "branch": 43,
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1192": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9819
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x4"
    },
    "1194": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1195": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1196": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1198": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1199": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1200": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "ADD",
      "path": "6"
    },
    "1201": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1202": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1203": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1204": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1237": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "ADD",
      "path": "6"
    },
    "1238": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1239": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1246": {
      "op": "SHL"
    },
    "1247": {
      "op": "SUB"
    },
    "1248": {
      "op": "NOT"
    },
    "1249": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "AND",
      "path": "6"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1259": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "AND",
      "path": "6"
    },
    "1260": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "OR",
      "path": "6"
    },
    "1261": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1262": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9805,
        9846
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1263": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9871
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x6"
    },
    "1265": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1266": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1267": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1268": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1269": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "ADD",
      "path": "6"
    },
    "1270": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1271": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1274": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1275": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1308": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "ADD",
      "path": "6"
    },
    "1309": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1310": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1311": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9860,
        9885
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1312": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x562"
    },
    "1315": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1316": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1317": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9929
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x5"
    },
    "1319": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1320": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1321": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1323": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1324": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1325": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "ADD",
      "path": "6"
    },
    "1326": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1327": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1328": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9914,
        9936
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1329": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9962
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x7"
    },
    "1331": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1332": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1333": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1334": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1335": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "ADD",
      "path": "6"
    },
    "1336": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1337": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1340": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1341": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1374": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "ADD",
      "path": "6"
    },
    "1375": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1376": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1377": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9950,
        9976
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1378": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9777,
        9987
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1382": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1384": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "1386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "ADD",
      "path": "6"
    },
    "1388": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1389": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1399": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1400": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "AND",
      "path": "6"
    },
    "1401": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1402": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1403": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1404": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10038,
        10062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1406": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1408": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1409": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1410": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "ADD",
      "path": "6"
    },
    "1411": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1412": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1413": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1414": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1415": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1416": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "ADD",
      "path": "6"
    },
    "1417": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1418": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1419": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1420": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1429": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10262,
        10277
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1430": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1431": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "AND",
      "path": "6"
    },
    "1432": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1434": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1435": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "ADD",
      "path": "6"
    },
    "1436": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1437": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1438": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1439": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10328,
        10332
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1441": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1443": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1444": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "ADD",
      "path": "6"
    },
    "1445": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1446": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1447": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10065,
        10333
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1448": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP7",
      "path": "6",
      "statement": 14
    },
    "1449": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1450": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1451": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10420
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1453": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1454": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1455": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1456": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1457": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1458": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1459": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1460": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10442
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1461": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1462": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1463": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1464": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1465": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "1466": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "AND",
      "path": "6"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "op": "NOT"
    },
    "1476": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1477": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "1478": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "AND",
      "path": "6"
    },
    "1479": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1480": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1481": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1482": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "OR",
      "path": "6"
    },
    "1483": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1484": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1485": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1486": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1487": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1488": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "ADD",
      "path": "6"
    },
    "1489": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1490": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1491": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1492": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1493": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1494": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1495": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1496": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1497": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "ADD",
      "path": "6"
    },
    "1498": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1499": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1500": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1501": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1502": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1503": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1504": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1506": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1507": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1508": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "ADD",
      "path": "6"
    },
    "1509": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1510": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1511": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1512": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1513": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1514": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "MUL",
      "path": "6"
    },
    "1521": {
      "op": "PUSH9",
      "value": "0xFFFFFFFFFFFFFFFFFF"
    },
    "1531": {
      "op": "NOT"
    },
    "1532": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1533": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1534": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "AND",
      "path": "6"
    },
    "1535": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1536": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1537": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1538": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "AND",
      "path": "6"
    },
    "1539": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1540": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1541": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1542": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "OR",
      "path": "6"
    },
    "1543": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1544": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1545": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1546": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "OR",
      "path": "6"
    },
    "1547": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1548": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10404,
        10451
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1549": {
      "fn": "LockContract.new_Investor",
      "jump": "o",
      "offset": [
        9296,
        10460
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1551": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1553": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1560": {
      "op": "SHL"
    },
    "1561": {
      "op": "SUB"
    },
    "1562": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1563": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1564": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1565": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x638"
    },
    "1568": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1569": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1571": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1580": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1584": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "1587": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC6"
    },
    "1591": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1592": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "1602": {
      "branch": 51,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69D"
    },
    "1606": {
      "branch": 51,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1624": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1630": {
      "op": "DUP3"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1668": {
      "op": "DUP3"
    },
    "1669": {
      "op": "ADD"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1688": {
      "op": "ADD"
    },
    "1689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25C"
    },
    "1692": {
      "op": "JUMP"
    },
    "1693": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1694": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x6A6"
    },
    "1697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BC"
    },
    "1701": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1705": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10572,
        12625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1706": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10795,
        10805
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 17
    },
    "1707": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10629,
        10636
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1709": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1710": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1711": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1712": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10794
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1714": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1716": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1717": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1718": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1719": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1721": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1722": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10806
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1723": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10822
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1724": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10822
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1725": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10822
      ],
      "op": "ADD",
      "path": "6"
    },
    "1726": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10778,
        10822
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1727": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1729": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10775
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1730": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10775
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1731": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10775
      ],
      "op": "ADD",
      "path": "6"
    },
    "1732": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10775
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1733": {
      "branch": 44,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10731,
        10822
      ],
      "op": "LT",
      "path": "6"
    },
    "1734": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x711"
    },
    "1737": {
      "branch": 44,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1738": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1740": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1749": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1752": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1754": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1755": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "ADD",
      "path": "6"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1761": {
      "op": "DUP3"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1799": {
      "op": "DUP3"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "MSTORE"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25C"
    },
    "1808": {
      "op": "JUMP"
    },
    "1809": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10723,
        10872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1810": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11104,
        11114
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1811": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10883,
        10904
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1813": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1814": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1815": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1816": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11103
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1818": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1820": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1821": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1822": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1823": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1825": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1826": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11115
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1827": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11131
      ],
      "op": "ADD",
      "path": "6"
    },
    "1828": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11087,
        11131
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1829": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10907,
        10922
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1830": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10907,
        10922
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1831": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10883,
        10904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1832": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10883,
        10904
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1833": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10883,
        10904
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1834": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11163,
        11164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1836": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1837": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11170,
        11191
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1839": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11170,
        11198
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1840": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11166,
        11198
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1841": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11166,
        11198
      ],
      "op": "GT",
      "path": "6"
    },
    "1842": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x892"
    },
    "1845": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1846": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11255,
        11264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x742"
    },
    "1849": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11263,
        11264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1850": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11255,
        11262
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "1854": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11255,
        11264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "1857": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11255,
        11264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1858": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11255,
        11264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1859": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11254
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1861": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11254
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1862": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74F"
    },
    "1865": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11264
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1866": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1867": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "1870": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11246,
        11264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1871": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11246,
        11264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1872": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11230,
        11243
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1873": {
      "branch": 45,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11230,
        11264
      ],
      "op": "GT",
      "path": "6"
    },
    "1874": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1875": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E9"
    },
    "1878": {
      "branch": 45,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1879": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11467,
        11475
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x9"
    },
    "1881": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11467,
        11475
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1882": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11456,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x766"
    },
    "1885": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11464,
        11465
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1886": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11456,
        11463
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "1890": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11456,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "1893": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11456,
        11465
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1894": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11456,
        11465
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1895": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1897": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11455
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1898": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x773"
    },
    "1901": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11465
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1902": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11465
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1903": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11465
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "1906": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11447,
        11465
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1907": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11447,
        11465
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1908": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11446,
        11475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77D"
    },
    "1911": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11446,
        11475
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1912": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11446,
        11475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1913": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11446,
        11475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "1916": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11446,
        11475
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1917": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11446,
        11475
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1918": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11425,
        11475
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11425,
        11475
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1921": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11712,
        11719
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 19,
      "value": "0x278D00"
    },
    "1925": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11706,
        11711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "1928": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11700
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1930": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11701,
        11704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x794"
    },
    "1933": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11703,
        11704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1935": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11701,
        11702
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1936": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11701,
        11704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "1939": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11701,
        11704
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1940": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11701,
        11704
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1941": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1942": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1943": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1944": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "LT",
      "path": "6"
    },
    "1945": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A4"
    },
    "1948": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1949": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7A4"
    },
    "1952": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7C"
    },
    "1955": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11679,
        11705
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1956": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1957": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1958": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1960": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1961": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1963": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1965": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1966": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "ADD",
      "path": "6"
    },
    "1967": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11679,
        11705
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1968": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11655
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1969": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7BA"
    },
    "1972": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11705
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1973": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11705
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1974": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "1977": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11639,
        11705
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1978": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11705
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1979": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C4"
    },
    "1982": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11711
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1983": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11711
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1984": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "1987": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11639,
        11711
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1988": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11711
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1989": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CE"
    },
    "1992": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11719
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1993": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11719
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1994": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11719
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "1997": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11639,
        11719
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1998": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11719
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1999": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7D8"
    },
    "2002": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11740
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2003": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2004": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2007": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11639,
        11740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2008": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11639,
        11740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2009": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11603,
        11740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E2"
    },
    "2012": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11603,
        11740
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2013": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11603,
        11615
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2014": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11603,
        11740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2017": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11603,
        11740
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2018": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11603,
        11740
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2019": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11588,
        11740
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2020": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11588,
        11740
      ],
      "op": "POP",
      "path": "6"
    },
    "2021": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x880"
    },
    "2024": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2025": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2026": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12073,
        12086
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 20
    },
    "2027": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12060,
        12069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F7"
    },
    "2030": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12068,
        12069
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2031": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12060,
        12067
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2035": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12060,
        12069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2038": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12060,
        12069
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2039": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12060,
        12069
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2040": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2042": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12059
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2043": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x804"
    },
    "2046": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12069
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2047": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12069
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2048": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12069
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2051": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12051,
        12069
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2052": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12051,
        12069
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2053": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12070
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80E"
    },
    "2056": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12070
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2057": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12047
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2058": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12070
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2061": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12029,
        12070
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2062": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12070
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2063": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12086
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x818"
    },
    "2066": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12086
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2067": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12086
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2068": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12086
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2071": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12029,
        12086
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2072": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12029,
        12086
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2073": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12008,
        12086
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12008,
        12086
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2076": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12229,
        12236
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 21,
      "value": "0x278D00"
    },
    "2080": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12223,
        12228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2083": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2085": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12218,
        12221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82F"
    },
    "2088": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12220,
        12221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2090": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12218,
        12219
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2091": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12218,
        12221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2094": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12218,
        12221
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2095": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12218,
        12221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2096": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2097": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2098": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2099": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "LT",
      "path": "6"
    },
    "2100": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x83F"
    },
    "2103": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2104": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x83F"
    },
    "2107": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7C"
    },
    "2110": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12196,
        12222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2111": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2112": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2113": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2115": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2116": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2118": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2120": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2121": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "ADD",
      "path": "6"
    },
    "2122": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12196,
        12222
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2123": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12172
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2124": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x855"
    },
    "2127": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12222
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2128": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12222
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2129": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2132": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12156,
        12222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2133": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2134": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85F"
    },
    "2137": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2138": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2139": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2142": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12156,
        12228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2143": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2144": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12236
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x869"
    },
    "2147": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12236
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2148": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12236
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2149": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12236
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2152": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12156,
        12236
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2153": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12236
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2154": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x873"
    },
    "2157": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2158": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2159": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2162": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12156,
        12257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2163": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12156,
        12257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2164": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12120,
        12257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87D"
    },
    "2167": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12120,
        12257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2168": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12120,
        12132
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2169": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12120,
        12257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2172": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12120,
        12257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2173": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12120,
        12257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2174": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12105,
        12257
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2175": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12105,
        12257
      ],
      "op": "POP",
      "path": "6"
    },
    "2176": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11227,
        12272
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2177": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 22
    },
    "2178": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88A"
    },
    "2181": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2182": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB4"
    },
    "2185": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11200,
        11203
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2186": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2187": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2188": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "POP",
      "path": "6"
    },
    "2189": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11200,
        11203
      ],
      "op": "POP",
      "path": "6"
    },
    "2190": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x72C"
    },
    "2193": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2194": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11150,
        12282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12399,
        12409
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2197": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12357,
        12379
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2199": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2200": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2201": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2202": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12398
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2204": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2206": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2207": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2209": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2210": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12410
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2211": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12426
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2213": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12426
      ],
      "op": "ADD",
      "path": "6"
    },
    "2214": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12426
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2215": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2216": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12536,
        12565
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8B1"
    },
    "2219": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12382,
        12426
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2220": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12536,
        12548
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2221": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12536,
        12565
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2224": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12536,
        12565
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2225": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12536,
        12565
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2226": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12509,
        12565
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2227": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        10572,
        12625
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "op": "POP"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "op": "POP"
    },
    "2235": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        10572,
        12625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2236": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2237": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 23
    },
    "2250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "op": "NOT"
    },
    "2261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2267": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x40"
    },
    "2269": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2270": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2271": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2272": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2273": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2274": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2275": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2277": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2310": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2311": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2312": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2313": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2315": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2316": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        6931,
        9241
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "SUB"
    },
    "2325": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 25
    },
    "2326": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "AND",
      "path": "6"
    },
    "2327": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7028,
        7035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2329": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2330": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2331": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2332": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7197
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2334": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2336": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2337": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2338": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2339": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2341": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2342": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7213
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2343": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7229
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2344": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7229
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2345": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7229
      ],
      "op": "ADD",
      "path": "6"
    },
    "2346": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7181,
        7229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2347": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7178
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2349": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7178
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2350": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7178
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2351": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7178
      ],
      "op": "ADD",
      "path": "6"
    },
    "2352": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7178
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2353": {
      "branch": 46,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7130,
        7229
      ],
      "op": "LT",
      "path": "6"
    },
    "2354": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97D"
    },
    "2357": {
      "branch": 46,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2358": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2360": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2369": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2372": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2374": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2375": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "ADD",
      "path": "6"
    },
    "2376": {
      "op": "MSTORE"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2381": {
      "op": "DUP3"
    },
    "2382": {
      "op": "ADD"
    },
    "2383": {
      "op": "MSTORE"
    },
    "2384": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2419": {
      "op": "DUP3"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "MSTORE"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25C"
    },
    "2428": {
      "op": "JUMP"
    },
    "2429": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7122,
        7279
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "SUB"
    },
    "2438": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2439": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "AND",
      "path": "6"
    },
    "2440": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2442": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2443": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2444": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2445": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7504
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2447": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2449": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2450": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2451": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2452": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2454": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2455": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7520
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2456": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7536
      ],
      "op": "ADD",
      "path": "6"
    },
    "2457": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7488,
        7536
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2458": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7323
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2467": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7323
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2468": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7323
      ],
      "op": "AND",
      "path": "6"
    },
    "2469": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7323
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2470": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2471": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2472": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7290,
        7311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2473": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7568,
        7569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2475": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2476": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7575,
        7596
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2478": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7575,
        7603
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2479": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7571,
        7603
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2480": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7571,
        7603
      ],
      "op": "GT",
      "path": "6"
    },
    "2481": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB11"
    },
    "2484": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2485": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7660,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C1"
    },
    "2488": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7668,
        7669
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2489": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7660,
        7667
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2493": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7660,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2496": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7660,
        7669
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2497": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7660,
        7669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2498": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2500": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2501": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CE"
    },
    "2504": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7669
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2505": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7669
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2506": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7669
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2509": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7651,
        7669
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2510": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7651,
        7669
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2511": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7635,
        7648
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2512": {
      "branch": 47,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7635,
        7669
      ],
      "op": "GT",
      "path": "6"
    },
    "2513": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2514": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA68"
    },
    "2517": {
      "branch": 47,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2518": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7872,
        7880
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x9"
    },
    "2520": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7872,
        7880
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2521": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7861,
        7870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9E5"
    },
    "2524": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7869,
        7870
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2525": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7861,
        7868
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2529": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7861,
        7870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2532": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7861,
        7870
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2533": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7861,
        7870
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2534": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7860
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2536": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7860
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2537": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F2"
    },
    "2540": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7870
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2541": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2542": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2545": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7852,
        7870
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2546": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7852,
        7870
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2547": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7851,
        7880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9FC"
    },
    "2550": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7851,
        7880
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2551": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7851,
        7880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2552": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7851,
        7880
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2555": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7851,
        7880
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2556": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7851,
        7880
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2557": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7830,
        7880
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2558": {
      "op": "POP"
    },
    "2559": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7830,
        7880
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2560": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8117,
        8124
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 27,
      "value": "0x278D00"
    },
    "2564": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8111,
        8116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2567": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8105
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2569": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        8109
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA13"
    },
    "2572": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8108,
        8109
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2574": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        8107
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2575": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        8109
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2578": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8106,
        8109
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2579": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        8109
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2580": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2581": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2582": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2583": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "LT",
      "path": "6"
    },
    "2584": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA23"
    },
    "2587": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2588": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA23"
    },
    "2591": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7C"
    },
    "2594": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8084,
        8110
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2595": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2596": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2597": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2599": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2600": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2602": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2604": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2605": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "ADD",
      "path": "6"
    },
    "2606": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8084,
        8110
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2607": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8060
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2608": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8110
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA39"
    },
    "2611": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8110
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2612": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8110
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2613": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8110
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2616": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8044,
        8110
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2617": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8110
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2618": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA43"
    },
    "2621": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8116
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2622": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8116
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2623": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2626": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8044,
        8116
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2627": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8116
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2628": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA4D"
    },
    "2631": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8124
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2632": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2633": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2636": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8044,
        8124
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2637": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2638": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA57"
    },
    "2641": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8145
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2642": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2643": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2646": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8044,
        8145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2647": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8044,
        8145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2648": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8008,
        8145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA61"
    },
    "2651": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8008,
        8145
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2652": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8008,
        8020
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2653": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8008,
        8145
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2656": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8008,
        8145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2657": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8008,
        8145
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2658": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7993,
        8145
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2659": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7993,
        8145
      ],
      "op": "POP",
      "path": "6"
    },
    "2660": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFF"
    },
    "2663": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2664": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2665": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8478,
        8491
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 28
    },
    "2666": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8465,
        8474
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA76"
    },
    "2669": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8473,
        8474
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2670": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8465,
        8472
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2674": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8465,
        8474
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2677": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8465,
        8474
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2678": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8465,
        8474
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2679": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8464
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "2681": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8464
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2682": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8474
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA83"
    },
    "2685": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8474
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2686": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8474
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2687": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8474
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2690": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8456,
        8474
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2691": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8456,
        8474
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2692": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8D"
    },
    "2695": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2696": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8452
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2697": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2700": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8434,
        8475
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2701": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8475
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2702": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA97"
    },
    "2705": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8491
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2706": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8491
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2707": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2710": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8434,
        8491
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2711": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8434,
        8491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2712": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8413,
        8491
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8413,
        8491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2715": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8634,
        8641
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 29,
      "value": "0x278D00"
    },
    "2719": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8628,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2722": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8622
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2724": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAAE"
    },
    "2727": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8625,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2729": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8624
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2730": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2733": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8623,
        8626
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2734": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2735": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2736": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2737": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2738": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "LT",
      "path": "6"
    },
    "2739": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xABE"
    },
    "2742": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2743": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xABE"
    },
    "2746": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7C"
    },
    "2749": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2750": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2751": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2752": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2754": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2755": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2757": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2759": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2760": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "ADD",
      "path": "6"
    },
    "2761": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2762": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8577
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2763": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD4"
    },
    "2766": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2767": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2768": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2771": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8627
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2772": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2773": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADE"
    },
    "2776": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2777": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2778": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2781": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8633
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2782": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2783": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE8"
    },
    "2786": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2787": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2788": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF92"
    },
    "2791": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2792": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2793": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF2"
    },
    "2796": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2797": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2798": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF46"
    },
    "2801": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8662
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2802": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2803": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFC"
    },
    "2806": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2807": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8537
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2808": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2811": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8525,
        8662
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2812": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2813": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8510,
        8662
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2814": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8510,
        8662
      ],
      "op": "POP",
      "path": "6"
    },
    "2815": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7632,
        8677
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2816": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 30
    },
    "2817": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB09"
    },
    "2820": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2821": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFB4"
    },
    "2824": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        7605,
        7608
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2825": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2826": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2827": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "POP",
      "path": "6"
    },
    "2828": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7605,
        7608
      ],
      "op": "POP",
      "path": "6"
    },
    "2829": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9AB"
    },
    "2832": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2833": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7555,
        8687
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2844": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "AND",
      "path": "6"
    },
    "2845": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8762,
        8784
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2847": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2848": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2849": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2850": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2852": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2854": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2855": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2857": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2858": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8819
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2859": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8835
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2861": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8835
      ],
      "op": "ADD",
      "path": "6"
    },
    "2862": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8835
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2863": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8835
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2864": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8945,
        8974
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB39"
    },
    "2867": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8787,
        8835
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2868": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8945,
        8957
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2869": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8945,
        8974
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF65"
    },
    "2872": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8945,
        8974
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2873": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8945,
        8974
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "op": "SUB"
    },
    "2882": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "DUP11",
      "path": "6",
      "statement": 31
    },
    "2883": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "AND",
      "path": "6"
    },
    "2884": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2886": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2887": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2888": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2889": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9070
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2891": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2893": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2894": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2896": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2897": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9086
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2898": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9102
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2900": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9102
      ],
      "op": "ADD",
      "path": "6"
    },
    "2901": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9102
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2902": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8918,
        8974
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2903": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8918,
        8974
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2904": {
      "op": "POP"
    },
    "2905": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9182
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB63"
    },
    "2908": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9182
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2909": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8918,
        8974
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2910": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8918,
        8974
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2911": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9182
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF11"
    },
    "2914": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9054,
        9182
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2915": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9054,
        9182
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "DUP11",
      "path": "6"
    },
    "2925": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "AND",
      "path": "6"
    },
    "2926": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2928": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2929": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2930": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2931": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9019
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2933": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2935": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2936": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2938": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2939": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9035
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2940": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2942": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9051
      ],
      "op": "ADD",
      "path": "6"
    },
    "2943": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9003,
        9182
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2944": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9218,
        9234
      ],
      "op": "SWAP6",
      "path": "6",
      "statement": 32
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        6931,
        9241
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2952": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        6931,
        9241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2953": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        6931,
        9241
      ],
      "op": "POP",
      "path": "6"
    },
    "2954": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        6931,
        9241
      ],
      "op": "POP",
      "path": "6"
    },
    "2955": {
      "fn": "LockContract.can_release_percent",
      "jump": "o",
      "offset": [
        6931,
        9241
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2956": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2957": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x40"
    },
    "2959": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2960": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "op": "SUB"
    },
    "2969": {
      "op": "DUP5"
    },
    "2970": {
      "op": "AND"
    },
    "2971": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2973": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2974": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "2975": {
      "op": "MSTORE"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2978": {
      "op": "DUP1"
    },
    "2979": {
      "op": "DUP3"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "op": "DUP5"
    },
    "2982": {
      "op": "SWAP1"
    },
    "2983": {
      "op": "MSTORE"
    },
    "2984": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2985": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2986": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2987": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2988": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "2989": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2990": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2991": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "2992": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2996": {
      "op": "SWAP1"
    },
    "2997": {
      "op": "SWAP2"
    },
    "2998": {
      "op": "ADD"
    },
    "2999": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3000": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3001": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3002": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3004": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3005": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3006": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3007": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "op": "SUB"
    },
    "3016": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3017": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3026": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3027": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3028": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBDE"
    },
    "3031": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3032": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3033": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3034": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE3"
    },
    "3037": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3038": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3039": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3040": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3041": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3042": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3043": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3044": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3046": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC38"
    },
    "3049": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3052": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3053": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3054": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3056": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3057": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3059": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3060": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3061": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3063": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3064": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3067": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3068": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3101": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3102": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3103": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "3104": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "op": "SUB"
    },
    "3113": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "3114": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB5"
    },
    "3117": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3119": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3120": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3121": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3126": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "3127": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3128": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3129": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3130": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3132": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "branch": 52,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3135": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBDE"
    },
    "3138": {
      "branch": 52,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3139": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 34
    },
    "3140": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3141": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3143": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3144": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3145": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3146": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3147": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3148": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3149": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC56"
    },
    "3152": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF29"
    },
    "3157": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3158": {
      "branch": 53,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3159": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBDE"
    },
    "3162": {
      "branch": 53,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3163": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3174": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3177": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3180": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3186": {
      "op": "DUP3"
    },
    "3187": {
      "op": "ADD"
    },
    "3188": {
      "op": "MSTORE"
    },
    "3189": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3224": {
      "op": "DUP3"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "op": "MSTORE"
    },
    "3227": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3243": {
      "op": "DUP3"
    },
    "3244": {
      "op": "ADD"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3248": {
      "op": "ADD"
    },
    "3249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C"
    },
    "3252": {
      "op": "JUMP"
    },
    "3253": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3254": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3256": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 35,
      "value": "0xCC4"
    },
    "3259": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3260": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3261": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3263": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3264": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCE"
    },
    "3267": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3268": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3269": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3270": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "3271": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3272": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3273": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3274": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3275": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3276": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3277": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3278": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 36
    },
    "3282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3283": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "3284": {
      "branch": 48,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2F"
    },
    "3288": {
      "branch": 48,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3298": {
      "op": "SHL"
    },
    "3299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3307": {
      "op": "MSTORE"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3312": {
      "op": "DUP3"
    },
    "3313": {
      "op": "ADD"
    },
    "3314": {
      "op": "MSTORE"
    },
    "3315": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3350": {
      "op": "DUP3"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "op": "MSTORE"
    },
    "3353": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3365": {
      "op": "DUP3"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "op": "MSTORE"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3370": {
      "op": "ADD"
    },
    "3371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C"
    },
    "3374": {
      "op": "JUMP"
    },
    "3375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 37
    },
    "3385": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "3386": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3387": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 38,
      "value": "0xD86"
    },
    "3390": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3391": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3405": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3407": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3408": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3409": {
      "op": "MSTORE"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3414": {
      "op": "DUP3"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "op": "MSTORE"
    },
    "3417": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C"
    },
    "3461": {
      "op": "JUMP"
    },
    "3462": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "op": "SUB"
    },
    "3475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "3476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "3484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFD"
    },
    "3489": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "3499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3502": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "3503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "3504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "3514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDF"
    },
    "3517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "3526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "3531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE4"
    },
    "3550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3559": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0x8B1"
    },
    "3565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3566": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3568": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3570": {
      "branch": 49,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3571": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3572": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFE"
    },
    "3575": {
      "branch": 49,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 40
    },
    "3578": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC7"
    },
    "3581": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3582": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3583": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3584": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3585": {
      "branch": 50,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3586": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0E"
    },
    "3589": {
      "branch": 50,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3590": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3591": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3592": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3593": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3594": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3596": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "3597": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3598": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3599": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 41
    },
    "3600": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3602": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3609": {
      "op": "SHL"
    },
    "3610": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3611": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3612": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3614": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "3615": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25C"
    },
    "3618": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3619": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3620": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1019"
    },
    "3623": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "DUP1"
    },
    "3626": {
      "op": "CALLDATALOAD"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3633": {
      "op": "SHL"
    },
    "3634": {
      "op": "SUB"
    },
    "3635": {
      "op": "DUP2"
    },
    "3636": {
      "op": "AND"
    },
    "3637": {
      "op": "DUP2"
    },
    "3638": {
      "op": "EQ"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0xE3F"
    },
    "3642": {
      "op": "JUMPI"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP1"
    },
    "3646": {
      "op": "REVERT"
    },
    "3647": {
      "op": "JUMPDEST"
    },
    "3648": {
      "op": "SWAP2"
    },
    "3649": {
      "op": "SWAP1"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "jump": "o",
      "op": "JUMP"
    },
    "3652": {
      "op": "JUMPDEST"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3657": {
      "op": "DUP3"
    },
    "3658": {
      "op": "DUP5"
    },
    "3659": {
      "op": "SUB"
    },
    "3660": {
      "op": "SLT"
    },
    "3661": {
      "op": "ISZERO"
    },
    "3662": {
      "op": "PUSH2",
      "value": "0xE56"
    },
    "3665": {
      "op": "JUMPI"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3668": {
      "op": "DUP1"
    },
    "3669": {
      "op": "REVERT"
    },
    "3670": {
      "op": "JUMPDEST"
    },
    "3671": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3674": {
      "op": "DUP3"
    },
    "3675": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3678": {
      "jump": "i",
      "op": "JUMP"
    },
    "3679": {
      "op": "JUMPDEST"
    },
    "3680": {
      "op": "DUP1"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "ISZERO"
    },
    "3683": {
      "op": "DUP2"
    },
    "3684": {
      "op": "EQ"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0x6A6"
    },
    "3688": {
      "op": "JUMPI"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3691": {
      "op": "DUP1"
    },
    "3692": {
      "op": "REVERT"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3696": {
      "op": "DUP1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3701": {
      "op": "DUP5"
    },
    "3702": {
      "op": "DUP7"
    },
    "3703": {
      "op": "SUB"
    },
    "3704": {
      "op": "SLT"
    },
    "3705": {
      "op": "ISZERO"
    },
    "3706": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3709": {
      "op": "JUMPI"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3712": {
      "op": "DUP1"
    },
    "3713": {
      "op": "REVERT"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "op": "DUP4"
    },
    "3716": {
      "op": "CALLDATALOAD"
    },
    "3717": {
      "op": "SWAP3"
    },
    "3718": {
      "op": "POP"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xE92"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "op": "DUP6"
    },
    "3725": {
      "op": "ADD"
    },
    "3726": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3729": {
      "jump": "i",
      "op": "JUMP"
    },
    "3730": {
      "op": "JUMPDEST"
    },
    "3731": {
      "op": "SWAP2"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3735": {
      "op": "DUP5"
    },
    "3736": {
      "op": "ADD"
    },
    "3737": {
      "op": "CALLDATALOAD"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xEA2"
    },
    "3741": {
      "op": "DUP2"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xE5F"
    },
    "3745": {
      "jump": "i",
      "op": "JUMP"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "DUP1"
    },
    "3748": {
      "op": "SWAP2"
    },
    "3749": {
      "op": "POP"
    },
    "3750": {
      "op": "POP"
    },
    "3751": {
      "op": "SWAP3"
    },
    "3752": {
      "op": "POP"
    },
    "3753": {
      "op": "SWAP3"
    },
    "3754": {
      "op": "POP"
    },
    "3755": {
      "op": "SWAP3"
    },
    "3756": {
      "jump": "o",
      "op": "JUMP"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3762": {
      "op": "DUP3"
    },
    "3763": {
      "op": "DUP5"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "op": "SLT"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEBF"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3773": {
      "op": "DUP1"
    },
    "3774": {
      "op": "REVERT"
    },
    "3775": {
      "op": "JUMPDEST"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "MLOAD"
    },
    "3778": {
      "op": "SWAP2"
    },
    "3779": {
      "op": "SWAP1"
    },
    "3780": {
      "op": "POP"
    },
    "3781": {
      "jump": "o",
      "op": "JUMP"
    },
    "3782": {
      "op": "JUMPDEST"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3785": {
      "op": "DUP1"
    },
    "3786": {
      "op": "DUP3"
    },
    "3787": {
      "op": "MSTORE"
    },
    "3788": {
      "op": "DUP2"
    },
    "3789": {
      "op": "DUP2"
    },
    "3790": {
      "op": "ADD"
    },
    "3791": {
      "op": "MSTORE"
    },
    "3792": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "MSTORE"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "SWAP1"
    },
    "3834": {
      "jump": "o",
      "op": "JUMP"
    },
    "3835": {
      "op": "JUMPDEST"
    },
    "3836": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3843": {
      "op": "SHL"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3851": {
      "op": "MSTORE"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3856": {
      "op": "REVERT"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "DUP3"
    },
    "3861": {
      "op": "NOT"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "GT"
    },
    "3864": {
      "op": "ISZERO"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3868": {
      "op": "JUMPI"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xF24"
    },
    "3872": {
      "op": "PUSH2",
      "value": "0xEFB"
    },
    "3875": {
      "jump": "i",
      "op": "JUMP"
    },
    "3876": {
      "op": "JUMPDEST"
    },
    "3877": {
      "op": "POP"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "SWAP1"
    },
    "3880": {
      "jump": "o",
      "op": "JUMP"
    },
    "3881": {
      "op": "JUMPDEST"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3886": {
      "op": "DUP3"
    },
    "3887": {
      "op": "DUP5"
    },
    "3888": {
      "op": "SUB"
    },
    "3889": {
      "op": "SLT"
    },
    "3890": {
      "op": "ISZERO"
    },
    "3891": {
      "op": "PUSH2",
      "value": "0xF3B"
    },
    "3894": {
      "op": "JUMPI"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "REVERT"
    },
    "3899": {
      "op": "JUMPDEST"
    },
    "3900": {
      "op": "DUP2"
    },
    "3901": {
      "op": "MLOAD"
    },
    "3902": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3905": {
      "op": "DUP2"
    },
    "3906": {
      "op": "PUSH2",
      "value": "0xE5F"
    },
    "3909": {
      "jump": "i",
      "op": "JUMP"
    },
    "3910": {
      "op": "JUMPDEST"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3913": {
      "op": "DUP2"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3916": {
      "op": "NOT"
    },
    "3917": {
      "op": "DIV"
    },
    "3918": {
      "op": "DUP4"
    },
    "3919": {
      "op": "GT"
    },
    "3920": {
      "op": "DUP3"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "ISZERO"
    },
    "3923": {
      "op": "AND"
    },
    "3924": {
      "op": "ISZERO"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF60"
    },
    "3928": {
      "op": "JUMPI"
    },
    "3929": {
      "op": "PUSH2",
      "value": "0xF60"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xEFB"
    },
    "3935": {
      "jump": "i",
      "op": "JUMP"
    },
    "3936": {
      "op": "JUMPDEST"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "op": "MUL"
    },
    "3939": {
      "op": "SWAP1"
    },
    "3940": {
      "jump": "o",
      "op": "JUMP"
    },
    "3941": {
      "op": "JUMPDEST"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "DUP3"
    },
    "3946": {
      "op": "LT"
    },
    "3947": {
      "op": "ISZERO"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xF77"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0xF77"
    },
    "3955": {
      "op": "PUSH2",
      "value": "0xEFB"
    },
    "3958": {
      "jump": "i",
      "op": "JUMP"
    },
    "3959": {
      "op": "JUMPDEST"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "SUB"
    },
    "3962": {
      "op": "SWAP1"
    },
    "3963": {
      "jump": "o",
      "op": "JUMP"
    },
    "3964": {
      "op": "JUMPDEST"
    },
    "3965": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3972": {
      "op": "SHL"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3975": {
      "op": "MSTORE"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3980": {
      "op": "MSTORE"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3985": {
      "op": "REVERT"
    },
    "3986": {
      "op": "JUMPDEST"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3989": {
      "op": "DUP3"
    },
    "3990": {
      "op": "PUSH2",
      "value": "0xFAF"
    },
    "3993": {
      "op": "JUMPI"
    },
    "3994": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4009": {
      "op": "MSTORE"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4014": {
      "op": "REVERT"
    },
    "4015": {
      "op": "JUMPDEST"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "DIV"
    },
    "4018": {
      "op": "SWAP1"
    },
    "4019": {
      "jump": "o",
      "op": "JUMP"
    },
    "4020": {
      "op": "JUMPDEST"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4025": {
      "op": "DUP3"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "PUSH2",
      "value": "0xFC6"
    },
    "4030": {
      "op": "JUMPI"
    },
    "4031": {
      "op": "PUSH2",
      "value": "0xFC6"
    },
    "4034": {
      "op": "PUSH2",
      "value": "0xEFB"
    },
    "4037": {
      "jump": "i",
      "op": "JUMP"
    },
    "4038": {
      "op": "JUMPDEST"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "ADD"
    },
    "4043": {
      "op": "SWAP1"
    },
    "4044": {
      "jump": "o",
      "op": "JUMP"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "DUP4"
    },
    "4050": {
      "op": "DUP2"
    },
    "4051": {
      "op": "LT"
    },
    "4052": {
      "op": "ISZERO"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4056": {
      "op": "JUMPI"
    },
    "4057": {
      "op": "DUP2"
    },
    "4058": {
      "op": "DUP2"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "MLOAD"
    },
    "4061": {
      "op": "DUP4"
    },
    "4062": {
      "op": "DUP3"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4067": {
      "op": "ADD"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xFD0"
    },
    "4071": {
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "DUP4"
    },
    "4074": {
      "op": "DUP2"
    },
    "4075": {
      "op": "GT"
    },
    "4076": {
      "op": "ISZERO"
    },
    "4077": {
      "op": "PUSH2",
      "value": "0xFF7"
    },
    "4080": {
      "op": "JUMPI"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4083": {
      "op": "DUP5"
    },
    "4084": {
      "op": "DUP5"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "MSTORE"
    },
    "4087": {
      "op": "JUMPDEST"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "jump": "o",
      "op": "JUMP"
    },
    "4093": {
      "op": "JUMPDEST"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4096": {
      "op": "DUP3"
    },
    "4097": {
      "op": "MLOAD"
    },
    "4098": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4101": {
      "op": "DUP2"
    },
    "4102": {
      "op": "DUP5"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4105": {
      "op": "DUP8"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "op": "PUSH2",
      "value": "0xFCD"
    },
    "4110": {
      "jump": "i",
      "op": "JUMP"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "SWAP2"
    },
    "4113": {
      "op": "SWAP1"
    },
    "4114": {
      "op": "SWAP2"
    },
    "4115": {
      "op": "ADD"
    },
    "4116": {
      "op": "SWAP3"
    },
    "4117": {
      "op": "SWAP2"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "op": "POP"
    },
    "4120": {
      "jump": "o",
      "op": "JUMP"
    },
    "4121": {
      "op": "JUMPDEST"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4124": {
      "op": "DUP2"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4128": {
      "op": "DUP3"
    },
    "4129": {
      "op": "MLOAD"
    },
    "4130": {
      "op": "DUP1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4133": {
      "op": "DUP5"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4139": {
      "op": "DUP2"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4142": {
      "op": "DUP6"
    },
    "4143": {
      "op": "ADD"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4146": {
      "op": "DUP8"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "PUSH2",
      "value": "0xFCD"
    },
    "4151": {
      "jump": "i",
      "op": "JUMP"
    },
    "4152": {
      "op": "JUMPDEST"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4158": {
      "op": "NOT"
    },
    "4159": {
      "op": "AND"
    },
    "4160": {
      "op": "SWAP2"
    },
    "4161": {
      "op": "SWAP1"
    },
    "4162": {
      "op": "SWAP2"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "SWAP3"
    },
    "4168": {
      "op": "SWAP2"
    },
    "4169": {
      "op": "POP"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "64cd4274bfd6f76fba673ce372012347bccdb471",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context, Ownable  {\n\n    //Token\n    IERC20 public legacy_token;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Investor) public walletToInvestor;\n\n    //Structs\n    struct Investor {\n        address investor_address;// probably can take it out\n\n        uint256 tokens_received;// amount of tokens the Investor has received\n\n        uint256 tokens_promised;// amount of tokens the Investor is owed\n\n        //uint256 can_withdraw;// percentage of his tokens the investor can withdraw at the moment\n\n        //uint256 has_withdrawn;// percentage of tokens th einvestor has withdrawn\n\n        uint64 lock_start;// saves the date of the initial locking of the contract\n\n        bool under250k_investor;// if true than it is an investor between 50k-250k, if false it is 250k+\n    }\n\n    //Variables\n    address[] investor_address;// array with all the investor aaddresses\n    address[] addresses_O50I;\n    address[] addresses_O250I;\n    uint256[] tokens_O50I;\n    uint256[] tokens_O250I;\n    uint256[] percent_per_milestone;\n    uint256 initLock;// initial lock period \n    uint256 erc20Released;// total amount of released tokens\n    uint256 numMilestones;// number of milestones (number of payments for each Investor)\n    uint256 num_O50I;// number of under 50k token vested investors\n    uint256 num_O250I;// number of over 50k token vested investors\n    uint256 totalTokens_O50I;// total tokens promised to investors with 50k-250k tokens vested\n    uint256 totalTokens_O250I;// total tokens promised to investors with more than 250k tokens vested\n    address tokenAddress;// token address\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        address[] memory _addresses_O50I,\n        address[] memory _addresses_O250I,\n        uint256[] memory _tokens_O50I,\n        uint256[] memory _tokens_O250I,\n        uint256[] memory _percent_per_milestone,\n        uint256 _tokens_O50ITotal,// sum all the tokens for the investors with with 50k-250k tokens vested\n        uint256 _tokens_O250ITotal,// ... more than 250k tokens\n        address _tokenAddress\n    ) {\n\n        // percentage of tokens an investor can withdraw at each milestone\n        percent_per_milestone = _percent_per_milestone;\n\n        // number of investors with...\n        num_O50I = _addresses_O50I.length;// with 50k-250k tokens vested\n        num_O250I = _addresses_O250I.length;// more than 250k tokens vested\n\n        // array of addresses of investors with ...\n        addresses_O50I= _addresses_O50I;// with 50k-250k tokens vested\n        addresses_O250I= _addresses_O250I;// more than 250k tokens vested\n\n        // array of tokens promised to investors with ...\n        tokens_O50I = _tokens_O50I;// with 50k-250k tokens vested\n        tokens_O250I = _tokens_O250I;// more than 250k tokens vested\n\n        // total tokens promised to investors with ...\n        totalTokens_O50I = _tokens_O50ITotal;// with 50k-250k tokens vested\n        totalTokens_O250I = _tokens_O250ITotal;// more than 250k tokens vested\n\n        // create an Investor struct for each investor with less than 50k tokens\n        for (uint i=0; i<num_O50I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O50I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O50I[i];\n            uint256 _investor_tokens = tokens_O50I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                uint64(block.timestamp), \n                                                true);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // create an Investor struct for each investor with more than 250k tokens\n        for (uint i=0; i<num_O250I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O250I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O250I[i];\n            uint256 _investor_tokens = tokens_O250I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                uint64(block.timestamp), \n                                                false);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // establish token address\n        tokenAddress = _tokenAddress;\n\n        // establish the IERC20 for legacy token to contract interactions\n        legacy_token = IERC20(_tokenAddress);\n\n    }\n\n\n    /**\n     * @dev Release the tokens \n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual{\n        uint256 releasable = can_release_percent(msg.sender, uint64(block.timestamp));\n        erc20Released += releasable;\n        emit ERC20Released(tokenAddress, releasable);\n        SafeERC20.safeTransfer(IERC20(tokenAddress), msg.sender, releasable);\n        walletToInvestor[msg.sender].tokens_received += releasable;\n    }\n\n\n    /**\n     * @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     * Updates the investor struct with the amount of tokens he has withdrawn.\n     */\n    function can_release_percent(address _callerAddress, uint64 timestamp) internal virtual returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[_callerAddress].tokens_received < walletToInvestor[_callerAddress].tokens_promised, \n                \"All tokens have been claimed\");\n\n        uint256 _current_time = timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[_callerAddress].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > initLock+2592000*i){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket = (initLock+2592000*i)-initLock;\n\n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n\n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _second_in_bracket + (initLock+2592000*i) - _current_time;\n\n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[_callerAddress].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //Update \n        walletToInvestor[_callerAddress].tokens_received = walletToInvestor[_callerAddress].tokens_received \n                                                            + _able_to_release;\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev Adds a new Investor.\n     */\n    function new_Investor(uint256 _amount, address _newInvestor_address, bool _under250K) public onlyOwner{\n\n        //require that the owner has enough legacy tokens to satisfy the promised tokens for locking\n        require(legacy_token.balanceOf(msg.sender)>= _amount, \n        \"You don't have enough Legacy tokens for the price requirment.\");\n\n        // transfer the tokens to the contract\n        legacy_token.transferFrom(_newInvestor_address, address(this), _amount);\n\n        if(_under250K){\n            addresses_O50I.push(_newInvestor_address);\n            tokens_O50I.push(_amount);\n        }else{\n            addresses_O250I.push();\n            tokens_O250I.push(_amount);\n        }\n\n        // create the new Investor struc\n        Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                uint64(block.timestamp),\n                                                true);\n        // push the new Investor structto the Investors arra\n        walletToInvestor[_newInvestor_address]=investor;  \n    }\n\n    /**\n     * @dev View function that an investor can use to see how many tokens he can withdraw\n     */\n    function view_can_release_percent() public view returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[msg.sender].tokens_received < walletToInvestor[msg.sender].tokens_promised, \n                \"All tokens have been claimed\");\n\n        uint256 _current_time = block.timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > initLock+2592000*i){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket = (initLock+2592000*i)-initLock;\n\n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n\n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _second_in_bracket + (initLock+2592000*i) - _current_time;\n\n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[msg.sender].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev View function to get contract balance\n     */\n    function contract_balance() public view returns (uint256) {\n        return legacy_token.balanceOf(address(this));\n    }\n}",
  "sourceMap": "846:11972:6:-:0;;;2652:3600;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;3171:46:6;;;;:21;;:46;;;;;:::i;:::-;-1:-1:-1;3278:22:6;;3267:8;:33;;;3352:23;;3340:9;:35;3469:31;;:14;;:31;;;;;:::i;:::-;-1:-1:-1;3540:33:6;;;;:15;;:33;;;;;:::i;:::-;-1:-1:-1;3673:26:6;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;3739:28:6;;;;:12;;:28;;;;;:::i;:::-;-1:-1:-1;3864:16:6;:36;;;3940:17;:38;;;-1:-1:-1;4101:926:6;4118:8;;4116:1;:10;4101:926;;;4242:1;-1:-1:-1;;;;;4213:31:6;:14;4228:1;4213:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4213:17:6;:31;4205:117;;;;-1:-1:-1;;;4205:117:6;;4003:2:7;4205:117:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;4205:117:6;;;;;;;;;4424:25;4452:14;4467:1;4452:17;;;;;;;;:::i;:::-;;;;;;;;;;4510:11;:14;;-1:-1:-1;;;;;4452:17:6;;;;-1:-1:-1;4510:11:6;4522:1;;4510:14;;;;;;:::i;:::-;;;;;;;;;;;;;4623:275;;;;;;;;-1:-1:-1;;;;;4623:275:6;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4826:15:6;4623:275;;;;;;;;4893:4;4623:275;;;;;;4971:35;;;:16;:35;;;;;;;;:44;;;;;;-1:-1:-1;;;;;;4971:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4971:44:6;;;;;;;;;;;;;;;-1:-1:-1;4128:3:6;;;;:::i;:::-;;;;4101:926;;;;5124:6;5119:931;5136:9;;5134:1;:11;5119:931;;;5262:1;-1:-1:-1;;;;;5232:32:6;:15;5248:1;5232:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5232:18:6;:32;5224:118;;;;-1:-1:-1;;;5224:118:6;;4003:2:7;5224:118:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;5224:118:6;3801:416:7;5224:118:6;5444:25;5472:15;5488:1;5472:18;;;;;;;;:::i;:::-;;;;;;;;;;5531:12;:15;;-1:-1:-1;;;;;5472:18:6;;;;-1:-1:-1;5531:12:6;5544:1;;5531:15;;;;;;:::i;:::-;;;;;;;;;;;;;5645:276;;;;;;;;-1:-1:-1;;;;;5645:276:6;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5848:15:6;5645:276;;;;;;;;;;;;;;5994:35;;;:16;:35;;;;;;;;:44;;;;;;-1:-1:-1;;;;;;5994:44:6;;;;;;;;;;;5645:276;5994:44;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5994:44:6;;;;;;;;;;;;;;;-1:-1:-1;5147:3:6;;;;:::i;:::-;;;;5119:931;;;-1:-1:-1;6095:12:6;:28;;-1:-1:-1;;;;;6095:28:6;;;-1:-1:-1;;;;;;6095:28:6;;;;;;;;;6208:36;;;;;;;;-1:-1:-1;846:11972:6;;-1:-1:-1;;;;;;846:11972:6;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;846:11972:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;846:11972:6;;;-1:-1:-1;846:11972:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;846:11972:6;-1:-1:-1;;;;;846:11972:6;;;;;;;;;;;-1:-1:-1;846:11972:6;;;;;;;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:7;247:40;;-1:-1:-1;;;;;302:34:7;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:7:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:7;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:7;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:7;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:7;796:683;-1:-1:-1;;;;;;796:683:7:o;1484:659::-;1549:5;1602:3;1595:4;1587:6;1583:17;1579:27;1569:55;;1620:1;1617;1610:12;1569:55;1649:6;1643:13;1675:4;1699:60;1715:43;1755:2;1715:43;:::i;1699:60::-;1793:15;;;1879:1;1875:10;;;;1863:23;;1859:32;;;1824:12;;;;1903:15;;;1900:35;;;1931:1;1928;1921:12;1900:35;1967:2;1959:6;1955:15;1979:135;1995:6;1990:3;1987:15;1979:135;;;2061:10;;2049:23;;2092:12;;;;2012;;1979:135;;2148:1516;2406:6;2414;2422;2430;2438;2446;2454;2462;2515:3;2503:9;2494:7;2490:23;2486:33;2483:53;;;2532:1;2529;2522:12;2483:53;2559:16;;-1:-1:-1;;;;;2624:14:7;;;2621:34;;;2651:1;2648;2641:12;2621:34;2674:72;2738:7;2729:6;2718:9;2714:22;2674:72;:::i;:::-;2664:82;;2792:2;2781:9;2777:18;2771:25;2755:41;;2821:2;2811:8;2808:16;2805:36;;;2837:1;2834;2827:12;2805:36;2860:74;2926:7;2915:8;2904:9;2900:24;2860:74;:::i;:::-;2850:84;;2980:2;2969:9;2965:18;2959:25;2943:41;;3009:2;2999:8;2996:16;2993:36;;;3025:1;3022;3015:12;2993:36;3048:74;3114:7;3103:8;3092:9;3088:24;3048:74;:::i;:::-;3038:84;;3168:2;3157:9;3153:18;3147:25;3131:41;;3197:2;3187:8;3184:16;3181:36;;;3213:1;3210;3203:12;3181:36;3236:74;3302:7;3291:8;3280:9;3276:24;3236:74;:::i;:::-;3226:84;;3356:3;3345:9;3341:19;3335:26;3319:42;;3386:2;3376:8;3373:16;3370:36;;;3402:1;3399;3392:12;3370:36;;3425:74;3491:7;3480:8;3469:9;3465:24;3425:74;:::i;:::-;3415:84;;;3539:3;3528:9;3524:19;3518:26;3508:36;;3584:3;3573:9;3569:19;3563:26;3553:36;;3608:50;3653:3;3642:9;3638:19;3608:50;:::i;:::-;3598:60;;2148:1516;;;;;;;;;;;:::o;3669:127::-;3730:10;3725:3;3721:20;3718:1;3711:31;3761:4;3758:1;3751:15;3785:4;3782:1;3775:15;4222:232;4261:3;4282:17;;;4279:140;;4341:10;4336:3;4332:20;4329:1;4322:31;4376:4;4373:1;4366:15;4404:4;4401:1;4394:15;4279:140;-1:-1:-1;4446:1:7;4435:13;;4222:232::o;:::-;846:11972:6;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}