{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses_O50I",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses_O250I",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O50I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O250I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percent_per_milestone",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O50ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O250ITotal",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contract_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_initLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legacy_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newInvestor_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_under250K",
          "type": "bool"
        }
      ],
      "name": "new_Investor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "view_can_release_percent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "investor_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens_received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lock_start",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "under250k_investor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "6": "contracts/LockContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        1395
      ],
      "Context": [
        1417
      ],
      "IERC20": [
        1583
      ],
      "LockContract": [
        771
      ],
      "Math": [
        1505
      ],
      "Ownable": [
        876
      ],
      "SafeERC20": [
        1100
      ]
    },
    "id": 772,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:6"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 1101,
        "src": "132:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 1396,
        "src": "198:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 1418,
        "src": "250:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 1506,
        "src": "302:53:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 772,
        "sourceUnit": 877,
        "src": "356:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1417,
              "src": "871:7:6"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "871:7:6"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 876,
              "src": "880:7:6"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "880:7:6"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "410:435:6",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 771,
        "linearizedBaseContracts": [
          771,
          876,
          1417
        ],
        "name": "LockContract",
        "nameLocation": "855:12:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "df129979",
            "id": 14,
            "mutability": "mutable",
            "name": "legacy_token",
            "nameLocation": "922:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "908:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1583",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1583,
                "src": "908:6:6"
              },
              "referencedDeclaration": 1583,
              "src": "908:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1583",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 20,
            "name": "ERC20Released",
            "nameLocation": "960:13:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "990:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "974:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1006:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "998:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:40:6"
            },
            "src": "954:60:6"
          },
          {
            "constant": false,
            "functionSelector": "92347b5e",
            "id": 25,
            "mutability": "mutable",
            "name": "walletToInvestor",
            "nameLocation": "1071:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1035:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
              "typeString": "mapping(address => struct LockContract.Investor)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1043:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1035:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                "typeString": "mapping(address => struct LockContract.Investor)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36,
                  "src": "1054:8:6"
                },
                "referencedDeclaration": 36,
                "src": "1054:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                  "typeString": "struct LockContract.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Investor",
            "id": 36,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "investor_address",
                "nameLocation": "1142:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1134:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1134:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "tokens_received",
                "nameLocation": "1204:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1196:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1196:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1283:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1275:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1275:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "lock_start",
                "nameLocation": "1357:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1349:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1349:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "under250k_investor",
                "nameLocation": "1439:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 36,
                "src": "1434:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 34,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1434:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1115:8:6",
            "nodeType": "StructDefinition",
            "scope": 771,
            "src": "1108:428:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "investor_address",
            "nameLocation": "1568:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1558:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1558:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 38,
              "nodeType": "ArrayTypeName",
              "src": "1558:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "addresses_O50I",
            "nameLocation": "1641:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1631:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1631:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 41,
              "nodeType": "ArrayTypeName",
              "src": "1631:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "addresses_O250I",
            "nameLocation": "1671:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1661:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1661:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 44,
              "nodeType": "ArrayTypeName",
              "src": "1661:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "tokens_O50I",
            "nameLocation": "1702:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1692:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 46,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1692:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 47,
              "nodeType": "ArrayTypeName",
              "src": "1692:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "tokens_O250I",
            "nameLocation": "1729:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1719:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1719:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 50,
              "nodeType": "ArrayTypeName",
              "src": "1719:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "percent_per_milestone",
            "nameLocation": "1757:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1747:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 52,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1747:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 53,
              "nodeType": "ArrayTypeName",
              "src": "1747:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "initLock",
            "nameLocation": "1855:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1847:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 55,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1847:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 58,
            "mutability": "mutable",
            "name": "erc20Released",
            "nameLocation": "1900:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1892:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1892:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "numMilestones",
            "nameLocation": "1961:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "1953:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1953:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "num_O50I",
            "nameLocation": "2050:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2042:16:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 61,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2042:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "num_O250I",
            "nameLocation": "2117:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2109:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2109:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 66,
            "mutability": "mutable",
            "name": "totalTokens_O50I",
            "nameLocation": "2184:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2176:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2176:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "totalTokens_O250I",
            "nameLocation": "2279:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2271:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 67,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2271:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "2381:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2373:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2373:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "2429:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 771,
            "src": "2415:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 71,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2415:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "3026:3273:6",
              "statements": [
                {
                  "expression": {
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "initLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "3037:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 98,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3048:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3048:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3037:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:26:6"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3149:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 103,
                      "name": "_percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3173:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3149:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:46:6"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3245:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 107,
                        "name": "_addresses_O50I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "3256:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3256:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3245:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:33:6"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 111,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3318:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 112,
                        "name": "_addresses_O250I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3330:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3330:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3318:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:35:6"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3447:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 117,
                      "name": "_addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "3463:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3447:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:31:6"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120,
                      "name": "addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "3518:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 121,
                      "name": "_addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "3535:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3518:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:33:6"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3651:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3665:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3651:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:26:6"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "3717:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "3732:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3717:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:28:6"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "totalTokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "3842:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_tokens_O50ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "3861:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3842:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:36:6"
                },
                {
                  "expression": {
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "totalTokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "3918:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 137,
                      "name": "_tokens_O250ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "3938:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3918:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:38:6"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "4110:887:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 151,
                                  "name": "addresses_O50I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42,
                                  "src": "4191:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 153,
                                "indexExpression": {
                                  "id": 152,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 141,
                                  "src": "4206:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4191:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 156,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4220:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4212:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 154,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4212:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4212:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4191:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4245:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4183:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4183:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "4183:117:6"
                      },
                      {
                        "assignments": [
                          163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "4410:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "4402:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4402:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 167,
                        "initialValue": {
                          "baseExpression": {
                            "id": 164,
                            "name": "addresses_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4430:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 166,
                          "indexExpression": {
                            "id": 165,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "4445:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4430:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4402:45:6"
                      },
                      {
                        "assignments": [
                          169
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 169,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "4469:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "4461:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 168,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4461:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 173,
                        "initialValue": {
                          "baseExpression": {
                            "id": 170,
                            "name": "tokens_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "4488:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 172,
                          "indexExpression": {
                            "id": 171,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "4500:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4488:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4461:41:6"
                      },
                      {
                        "assignments": [
                          176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 176,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "4590:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "4574:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 175,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 174,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "4574:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "4574:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 185,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 178,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "4610:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4678:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 180,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "4730:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 181,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4797:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4797:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4863:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 177,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "4601:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4601:267:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4574:294:6"
                      },
                      {
                        "expression": {
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 186,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "4941:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 188,
                            "indexExpression": {
                              "id": 187,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "4958:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4941:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 189,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "4977:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "4941:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "4941:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 144,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "4094:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 145,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4096:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4094:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 193,
                  "initializationExpression": {
                    "assignments": [
                      141
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4089:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "4084:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 143,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4091:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4084:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4106:3:6",
                      "subExpression": {
                        "id": 147,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "4106:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 149,
                    "nodeType": "ExpressionStatement",
                    "src": "4106:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "4079:918:6"
                },
                {
                  "body": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "5121:891:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 205,
                                  "name": "addresses_O250I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "5202:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 207,
                                "indexExpression": {
                                  "id": 206,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 195,
                                  "src": "5218:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5202:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5232:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5224:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 208,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5224:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5224:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5202:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5257:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 204,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5194:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5194:118:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "5194:118:6"
                      },
                      {
                        "assignments": [
                          217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 217,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "5422:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 246,
                            "src": "5414:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5414:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 221,
                        "initialValue": {
                          "baseExpression": {
                            "id": 218,
                            "name": "addresses_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "5442:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "id": 219,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "5458:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5442:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5414:46:6"
                      },
                      {
                        "assignments": [
                          223
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 223,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "5482:16:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 246,
                            "src": "5474:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5474:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "baseExpression": {
                            "id": 224,
                            "name": "tokens_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5501:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 226,
                          "indexExpression": {
                            "id": 225,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "5514:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5501:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5474:42:6"
                      },
                      {
                        "assignments": [
                          230
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 230,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "5604:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 246,
                            "src": "5588:24:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 229,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 228,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 36,
                                "src": "5588:8:6"
                              },
                              "referencedDeclaration": 36,
                              "src": "5588:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 239,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 232,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "5624:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5692:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 234,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "5744:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 235,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5811:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5811:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5877:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 231,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "5615:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5615:268:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5588:295:6"
                      },
                      {
                        "expression": {
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 240,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "5956:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 242,
                            "indexExpression": {
                              "id": 241,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "5973:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5956:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 243,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "5992:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "5956:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$36_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 245,
                        "nodeType": "ExpressionStatement",
                        "src": "5956:44:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 198,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "5104:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 199,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5106:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5104:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "initializationExpression": {
                    "assignments": [
                      195
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5099:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "5094:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5094:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 197,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5101:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5094:8:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5117:3:6",
                      "subExpression": {
                        "id": 201,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5117:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 203,
                    "nodeType": "ExpressionStatement",
                    "src": "5117:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "5089:923:6"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 248,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "6057:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 249,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "6072:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6057:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:28:6"
                },
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 252,
                      "name": "legacy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "6170:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1583",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 254,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "6192:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 253,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "6185:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1583_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6185:21:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1583",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6170:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1583",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "6170:36:6"
                },
                {
                  "expression": {
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 258,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6277:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6286:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6277:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:14:6"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "2493:95:6",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 263,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_addresses_O50I",
                  "nameLocation": "2631:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2614:32:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2614:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 75,
                    "nodeType": "ArrayTypeName",
                    "src": "2614:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_addresses_O250I",
                  "nameLocation": "2673:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2656:33:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2656:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78,
                    "nodeType": "ArrayTypeName",
                    "src": "2656:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_tokens_O50I",
                  "nameLocation": "2716:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2699:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2699:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "nodeType": "ArrayTypeName",
                    "src": "2699:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_tokens_O250I",
                  "nameLocation": "2755:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2738:30:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 83,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2738:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 84,
                    "nodeType": "ArrayTypeName",
                    "src": "2738:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_percent_per_milestone",
                  "nameLocation": "2795:22:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2778:39:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2778:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87,
                    "nodeType": "ArrayTypeName",
                    "src": "2778:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_tokens_O50ITotal",
                  "nameLocation": "2835:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2827:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_tokens_O250ITotal",
                  "nameLocation": "2942:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2934:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3006:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2998:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2998:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:421:6"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3026:0:6"
            },
            "scope": 771,
            "src": "2593:3706:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "6394:109:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6412:7:6",
                        "subExpression": {
                          "id": 267,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "6413:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072652d656e7472616e6379",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        },
                        "value": "No re-entrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6404:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6404:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "6404:34:6"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6448:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6457:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6448:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "6448:13:6"
                },
                {
                  "id": 276,
                  "nodeType": "PlaceholderStatement",
                  "src": "6471:1:6"
                },
                {
                  "expression": {
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 277,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "6482:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6491:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6482:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "6482:14:6"
                }
              ]
            },
            "documentation": {
              "id": 264,
              "nodeType": "StructuredDocumentation",
              "src": "6323:43:6",
              "text": " @dev Prevents reentrancy"
            },
            "id": 282,
            "name": "noReentrant",
            "nameLocation": "6380:11:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:2:6"
            },
            "src": "6371:132:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "6595:105:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 286,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6613:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 289,
                            "indexExpression": {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6630:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6630:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6613:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "6613:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6661:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6613:49:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20696e766573746f72",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6664:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        },
                        "value": "Not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6605:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6605:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "6605:77:6"
                },
                {
                  "id": 296,
                  "nodeType": "PlaceholderStatement",
                  "src": "6692:1:6"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "6509:57:6",
              "text": " @dev Only investors can call functions"
            },
            "id": 298,
            "name": "onlyInvestor",
            "nameLocation": "6580:12:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6592:2:6"
            },
            "src": "6571:129:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "6861:332:6",
              "statements": [
                {
                  "assignments": [
                    307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 307,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "6879:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "6871:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6871:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 309,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6912:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6912:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 313,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6932:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6932:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6924:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 311,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6924:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6924:24:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 308,
                      "name": "can_release_percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "6892:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6892:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6871:78:6"
                },
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6959:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 319,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "6976:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6959:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "6959:27:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 323,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "7015:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 324,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "7029:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 322,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "7001:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7001:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 326,
                  "nodeType": "EmitStatement",
                  "src": "6996:44:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 331,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "7080:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 330,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1583,
                          "src": "7073:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1583_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7073:20:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1583",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7095:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7095:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "7107:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1583",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 327,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1100,
                        "src": "7050:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1100_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 907,
                      "src": "7050:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1583_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7050:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "7050:68:6"
                },
                {
                  "expression": {
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 338,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "7128:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 341,
                        "indexExpression": {
                          "expression": {
                            "id": 339,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7145:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7145:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7128:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "7128:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 343,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "7176:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7128:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "7128:58:6"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "6706:88:6",
              "text": " @dev Release the tokens \n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 302,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 301,
                  "name": "noReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 282,
                  "src": "6833:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6833:13:6"
              },
              {
                "arguments": [],
                "id": 304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 303,
                  "name": "onlyInvestor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 298,
                  "src": "6847:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6847:14:6"
              }
            ],
            "name": "release",
            "nameLocation": "6808:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6815:2:6"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6861:0:6"
            },
            "scope": 771,
            "src": "6799:394:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "7515:2104:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 358,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7608:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 361,
                            "indexExpression": {
                              "expression": {
                                "id": 359,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7625:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7625:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7608:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "7608:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 363,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7655:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 366,
                            "indexExpression": {
                              "expression": {
                                "id": 364,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7672:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7672:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7655:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "7655:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7608:91:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7718:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7600:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7600:149:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "7600:149:6"
                },
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "7777:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "7769:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 372,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7769:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "id": 374,
                    "name": "timestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "7792:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7769:32:6"
                },
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "7820:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "7812:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7812:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7835:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7812:24:6"
                },
                {
                  "assignments": [
                    381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 381,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "7909:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "7901:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7901:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7930:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7901:30:6"
                },
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "7947:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "7942:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7942:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 391,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 386,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7966:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 389,
                      "indexExpression": {
                        "expression": {
                          "id": 387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7983:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7983:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7966:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "7966:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7942:68:6"
                },
                {
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "8083:1189:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 403,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "8109:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 404,
                                      "name": "walletToInvestor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "8126:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                        "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                      }
                                    },
                                    "id": 407,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 405,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "8143:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 406,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8143:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8126:28:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                                      "typeString": "struct LockContract.Investor storage ref"
                                    }
                                  },
                                  "id": 408,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lock_start",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "8126:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8166:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 410,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 393,
                                    "src": "8174:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8166:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8126:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 413,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8125:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8109:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 483,
                          "nodeType": "Block",
                          "src": "8852:410:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 447,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 381,
                                  "src": "8946:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 448,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "8967:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 454,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 449,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8983:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 452,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 450,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 393,
                                              "src": "8992:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 451,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "8994:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "8992:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 453,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8991:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8983:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8967:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 456,
                                        "name": "walletToInvestor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "8997:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                        }
                                      },
                                      "id": 459,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 457,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9014:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9014:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8997:28:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                                        "typeString": "struct LockContract.Investor storage ref"
                                      }
                                    },
                                    "id": 460,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lock_start",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "8997:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8967:69:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8946:90:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 463,
                              "nodeType": "ExpressionStatement",
                              "src": "8946:90:6"
                            },
                            {
                              "expression": {
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 464,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "9071:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 465,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "9086:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 476,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 472,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 466,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 385,
                                            "src": "9122:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 467,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "9162:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 471,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 470,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 468,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 393,
                                                "src": "9184:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 469,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "9186:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "9184:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9162:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9122:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 473,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9189:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "9122:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9195:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "9122:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 477,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 381,
                                      "src": "9205:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9122:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9086:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9071:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 481,
                              "nodeType": "ExpressionStatement",
                              "src": "9071:152:6"
                            },
                            {
                              "id": 482,
                              "nodeType": "Break",
                              "src": "9242:5:6"
                            }
                          ]
                        },
                        "id": 484,
                        "nodeType": "IfStatement",
                        "src": "8106:1156:6",
                        "trueBody": {
                          "id": 446,
                          "nodeType": "Block",
                          "src": "8177:671:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 415,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 381,
                                  "src": "8337:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8357:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 417,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 393,
                                      "src": "8365:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8357:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8368:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 422,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 420,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 393,
                                            "src": "8377:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 421,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8379:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8377:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 423,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "8376:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8368:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8357:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8337:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 427,
                              "nodeType": "ExpressionStatement",
                              "src": "8337:44:6"
                            },
                            {
                              "expression": {
                                "id": 444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 428,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "8510:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 429,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "8525:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 438,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 436,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 430,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 385,
                                            "src": "8561:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 431,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "8601:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 435,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 434,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 432,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 393,
                                                "src": "8623:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 433,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8625:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "8623:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8601:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8561:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8628:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "8561:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8634:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "8561:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 441,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 381,
                                      "src": "8644:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8561:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8525:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8510:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 445,
                              "nodeType": "ExpressionStatement",
                              "src": "8510:152:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 396,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "8045:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 397,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8049:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8049:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8045:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 486,
                  "initializationExpression": {
                    "assignments": [
                      393
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8038:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "8033:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8033:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 395,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8042:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8033:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8079:3:6",
                      "subExpression": {
                        "id": 400,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "8079:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 402,
                    "nodeType": "ExpressionStatement",
                    "src": "8079:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "8029:1243:6"
                },
                {
                  "assignments": [
                    488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "9355:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "9347:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9347:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 489,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "9372:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 491,
                      "indexExpression": {
                        "id": 490,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "9389:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9372:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "9372:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9347:73:6"
                },
                {
                  "assignments": [
                    495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "9511:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "9503:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9503:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 496,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "9530:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 497,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "9545:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9530:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9503:56:6"
                },
                {
                  "expression": {
                    "id": 500,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 495,
                    "src": "9596:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 356,
                  "id": 501,
                  "nodeType": "Return",
                  "src": "9588:24:6"
                }
              ]
            },
            "documentation": {
              "id": 348,
              "nodeType": "StructuredDocumentation",
              "src": "7200:203:6",
              "text": " @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n Updates the investor struct with the amount of tokens he has withdrawn."
            },
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "can_release_percent",
            "nameLocation": "7417:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "7445:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "7437:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7437:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "7469:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "7461:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7461:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7436:43:6"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "7506:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7506:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7505:9:6"
            },
            "scope": 771,
            "src": "7408:2211:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "9767:1212:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 516,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "9910:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 514,
                              "name": "legacy_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "9887:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1583",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1522,
                            "src": "9887:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9887:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 518,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "9934:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9887:54:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b656e7320666f722074686520707269636520726571756972656d656e742e",
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9952:64:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        },
                        "value": "You don't have enough Legacy tokens for the price requirement."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9879:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9879:138:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 522,
                  "nodeType": "ExpressionStatement",
                  "src": "9879:138:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 524,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10036:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 526,
                            "indexExpression": {
                              "id": 525,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "10053:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10036:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "10036:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10093:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10036:58:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320697320616c726561647920696e207468652076657374696e6720636f6e74726163742e",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10105:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        },
                        "value": "This address is already in the vesting contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10028:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:128:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "10028:128:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 536,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "10240:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 539,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10270:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$771",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$771",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10262:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 537,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10262:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10262:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 541,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "10277:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 533,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "10214:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1583",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1564,
                      "src": "10214:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10214:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "10214:71:6"
                },
                {
                  "condition": {
                    "id": 544,
                    "name": "_under250K",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 510,
                    "src": "10299:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 569,
                    "nodeType": "Block",
                    "src": "10419:87:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 558,
                              "name": "addresses_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "10433:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10433:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$_t_address_$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer) returns (address)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10433:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "10433:22:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 566,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "10487:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 563,
                              "name": "tokens_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "10469:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10469:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10469:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "10469:26:6"
                      }
                    ]
                  },
                  "id": 570,
                  "nodeType": "IfStatement",
                  "src": "10296:210:6",
                  "trueBody": {
                    "id": 557,
                    "nodeType": "Block",
                    "src": "10310:105:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 548,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "10344:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 545,
                              "name": "addresses_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "10324:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10324:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10324:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "10324:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 554,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "10396:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 551,
                              "name": "tokens_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "10379:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "10379:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10379:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "10379:25:6"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "investor",
                      "nameLocation": "10573:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 592,
                      "src": "10557:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor"
                      },
                      "typeName": {
                        "id": 572,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 571,
                          "name": "Investor",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36,
                          "src": "10557:8:6"
                        },
                        "referencedDeclaration": 36,
                        "src": "10557:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$36_storage_ptr",
                          "typeString": "struct LockContract.Investor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 585,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "10593:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10664:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 577,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "10716:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 580,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10781:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10781:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10774:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 578,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "10774:6:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10774:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10847:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 574,
                      "name": "Investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "10584:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Investor_$36_storage_ptr_$",
                        "typeString": "type(struct LockContract.Investor storage pointer)"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10584:268:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                      "typeString": "struct LockContract.Investor memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10557:295:6"
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 586,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "10923:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 588,
                      "indexExpression": {
                        "id": 587,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "10940:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10923:38:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 589,
                      "name": "investor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "10962:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_memory_ptr",
                        "typeString": "struct LockContract.Investor memory"
                      }
                    },
                    "src": "10923:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                      "typeString": "struct LockContract.Investor storage ref"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "10923:47:6"
                }
              ]
            },
            "documentation": {
              "id": 504,
              "nodeType": "StructuredDocumentation",
              "src": "9625:44:6",
              "text": " @dev Adds a new Investor."
            },
            "functionSelector": "d41d826a",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "new_Investor",
            "nameLocation": "9683:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9704:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "9696:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9696:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_newInvestor_address",
                  "nameLocation": "9721:20:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "9713:28:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9713:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_under250K",
                  "nameLocation": "9748:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 593,
                  "src": "9743:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9743:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9695:64:6"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9767:0:6"
            },
            "scope": 771,
            "src": "9674:1305:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "11157:2107:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 600,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11250:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 603,
                            "indexExpression": {
                              "expression": {
                                "id": 601,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11267:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11267:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11250:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_received",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "11250:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "11297:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 608,
                            "indexExpression": {
                              "expression": {
                                "id": 606,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11314:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11314:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11297:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$36_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31,
                          "src": "11297:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11250:91:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11360:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11242:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11242:149:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "11242:149:6"
                },
                {
                  "assignments": [
                    615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "11419:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "11411:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11411:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 618,
                  "initialValue": {
                    "expression": {
                      "id": 616,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "11435:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "11435:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11411:39:6"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "11469:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "11461:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11461:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 622,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11484:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11461:24:6"
                },
                {
                  "assignments": [
                    624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 624,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "11558:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "11550:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11550:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 626,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11579:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11550:30:6"
                },
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "11596:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "11591:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 627,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11591:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 634,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 629,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "11615:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 632,
                      "indexExpression": {
                        "expression": {
                          "id": 630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11632:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11632:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11615:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 31,
                    "src": "11615:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11591:68:6"
                },
                {
                  "body": {
                    "id": 728,
                    "nodeType": "Block",
                    "src": "11732:1189:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 646,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 615,
                            "src": "11758:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 647,
                                      "name": "walletToInvestor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "11775:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                        "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                      }
                                    },
                                    "id": 650,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 648,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "11792:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "11792:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11775:28:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$36_storage",
                                      "typeString": "struct LockContract.Investor storage ref"
                                    }
                                  },
                                  "id": 651,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lock_start",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "11775:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11815:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 653,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 636,
                                    "src": "11823:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11815:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11775:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 656,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11774:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11758:67:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 726,
                          "nodeType": "Block",
                          "src": "12501:410:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 690,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 624,
                                  "src": "12595:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 691,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 615,
                                      "src": "12616:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 692,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12632:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 695,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 693,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 636,
                                              "src": "12641:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 694,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12643:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "12641:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 696,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "12640:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12632:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12616:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 699,
                                        "name": "walletToInvestor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "12646:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                                        }
                                      },
                                      "id": 702,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 700,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "12663:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 701,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "12663:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12646:28:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                                        "typeString": "struct LockContract.Investor storage ref"
                                      }
                                    },
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lock_start",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "12646:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12616:69:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12595:90:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 706,
                              "nodeType": "ExpressionStatement",
                              "src": "12595:90:6"
                            },
                            {
                              "expression": {
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 707,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 620,
                                  "src": "12720:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 708,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "12735:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 719,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 717,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 715,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 709,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 628,
                                            "src": "12771:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 710,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "12811:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 714,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 713,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 711,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 636,
                                                "src": "12833:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 712,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12835:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "12833:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12811:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12771:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 716,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12838:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "12771:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 718,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12844:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "12771:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 720,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 624,
                                      "src": "12854:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12771:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12735:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12720:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 724,
                              "nodeType": "ExpressionStatement",
                              "src": "12720:152:6"
                            },
                            {
                              "id": 725,
                              "nodeType": "Break",
                              "src": "12891:5:6"
                            }
                          ]
                        },
                        "id": 727,
                        "nodeType": "IfStatement",
                        "src": "11755:1156:6",
                        "trueBody": {
                          "id": 689,
                          "nodeType": "Block",
                          "src": "11826:671:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 658,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 624,
                                  "src": "11986:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12006:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 660,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 636,
                                      "src": "12014:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12006:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12017:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 665,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 663,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 636,
                                            "src": "12026:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 664,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12028:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "12026:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 666,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12025:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12017:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12006:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11986:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 670,
                              "nodeType": "ExpressionStatement",
                              "src": "11986:44:6"
                            },
                            {
                              "expression": {
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 671,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 620,
                                  "src": "12159:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 672,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "12174:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 681,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 679,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 673,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 628,
                                            "src": "12210:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 674,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "12250:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 678,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 677,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 675,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 636,
                                                "src": "12272:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 676,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12274:1:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "12272:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "12250:26:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12210:66:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 680,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12277:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "12210:72:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 682,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12283:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "12210:80:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 684,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 624,
                                      "src": "12293:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12210:101:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12174:137:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12159:152:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 688,
                              "nodeType": "ExpressionStatement",
                              "src": "12159:152:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 639,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "11694:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 640,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "11698:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11698:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11694:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "initializationExpression": {
                    "assignments": [
                      636
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11687:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "11682:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11682:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 638,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11691:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11682:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11728:3:6",
                      "subExpression": {
                        "id": 643,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "11728:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 645,
                    "nodeType": "ExpressionStatement",
                    "src": "11728:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "11678:1243:6"
                },
                {
                  "assignments": [
                    731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 731,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "13004:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "12996:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12996:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 732,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "13021:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$36_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 735,
                      "indexExpression": {
                        "expression": {
                          "id": 733,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13038:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13038:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13021:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$36_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "13021:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12996:69:6"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "13156:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "13148:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13148:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 740,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "13175:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 741,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "13190:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13175:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13148:56:6"
                },
                {
                  "expression": {
                    "id": 744,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 739,
                    "src": "13241:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 745,
                  "nodeType": "Return",
                  "src": "13233:24:6"
                }
              ]
            },
            "documentation": {
              "id": 594,
              "nodeType": "StructuredDocumentation",
              "src": "10985:101:6",
              "text": " @dev View function that an investor can use to see how many tokens he can withdraw"
            },
            "functionSelector": "f5cd7277",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "view_can_release_percent",
            "nameLocation": "11100:24:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11124:2:6"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "11148:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11148:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11147:9:6"
            },
            "scope": 771,
            "src": "11091:2173:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "13394:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 757,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13442:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$771",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$771",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13434:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13434:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13434:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 753,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "13411:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1583",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1522,
                      "src": "13411:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13411:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 752,
                  "id": 760,
                  "nodeType": "Return",
                  "src": "13404:44:6"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "13270:61:6",
              "text": " @dev View function to get contract balance"
            },
            "functionSelector": "057440d3",
            "id": 762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contract_balance",
            "nameLocation": "13345:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13361:2:6"
            },
            "returnParameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "13385:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13385:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13384:9:6"
            },
            "scope": 771,
            "src": "13336:119:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "13513:32:6",
              "statements": [
                {
                  "expression": {
                    "id": 767,
                    "name": "initLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "13530:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 766,
                  "id": 768,
                  "nodeType": "Return",
                  "src": "13523:15:6"
                }
              ]
            },
            "functionSelector": "910d25ba",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_initLock",
            "nameLocation": "13470:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13482:2:6"
            },
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "13505:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13505:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13504:9:6"
            },
            "scope": 771,
            "src": "13461:84:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 772,
        "src": "846:12701:6",
        "usedErrors": []
      }
    ],
    "src": "107:13440:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620019cc380380620019cc8339810160408190526200003491620006b8565b6200003f336200043f565b426009558351620000589060089060208701906200048f565b508751600c8190558751600d55620000789060049060208b0190620004df565b5086516200008e9060059060208a0190620004df565b508551620000a49060069060208901906200048f565b508451620000ba9060079060208801906200048f565b50600e839055600f82905560005b600c54811015620002665760006001600160a01b031660048281548110620000f457620000f4620007bf565b6000918252602090912001546001600160a01b031603620001715760405162461bcd60e51b81526020600482015260346024820152600080516020620019ac83398151915260448201527f72657373206973207a65726f206164647265737300000000000000000000000060648201526084015b60405180910390fd5b600060048281548110620001895762000189620007bf565b6000918252602082200154600680546001600160a01b0390921693509084908110620001b957620001b9620007bf565b6000918252602080832091909101546040805160a0810182526001600160a01b03968716808252818501868152828401948552426060840190815260016080850181815293895260029788905294909720925183546001600160a01b03191699169890981782559651918101919091559051918101919091559051600382015591516004909201805460ff19169215159290921790915550806200025d81620007d5565b915050620000c8565b5060005b600d54811015620003ff5760006001600160a01b031660058281548110620002965762000296620007bf565b6000918252602090912001546001600160a01b0316036200030f5760405162461bcd60e51b81526020600482015260346024820152600080516020620019ac83398151915260448201527f72657373206973207a65726f2061646472657373000000000000000000000000606482015260840162000168565b600060058281548110620003275762000327620007bf565b6000918252602082200154600780546001600160a01b0390921693509084908110620003575762000357620007bf565b6000918252602080832091909101546040805160a0810182526001600160a01b0396871680825281850186815282840194855242606084019081526080840188815292885260029687905293909620915182546001600160a01b03191698169790971781559351600185015590519183019190915551600382015591516004909201805460ff1916921515929092179091555080620003f681620007d5565b9150506200026a565b5060108054600180546001600160a01b0319166001600160a01b0390941693841790556001600160a81b031916909117905550620007fd95505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620004cd579160200282015b82811115620004cd578251825591602001919060010190620004b0565b50620004db92915062000537565b5090565b828054828255906000526020600020908101928215620004cd579160200282015b82811115620004cd57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000500565b5b80821115620004db576000815560010162000538565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200058f576200058f6200054e565b604052919050565b60006001600160401b03821115620005b357620005b36200054e565b5060051b60200190565b80516001600160a01b0381168114620005d557600080fd5b919050565b600082601f830112620005ec57600080fd5b8151602062000605620005ff8362000597565b62000564565b82815260059290921b840181019181810190868411156200062557600080fd5b8286015b848110156200064b576200063d81620005bd565b835291830191830162000629565b509695505050505050565b600082601f8301126200066857600080fd5b815160206200067b620005ff8362000597565b82815260059290921b840181019181810190868411156200069b57600080fd5b8286015b848110156200064b57805183529183019183016200069f565b600080600080600080600080610100898b031215620006d657600080fd5b88516001600160401b0380821115620006ee57600080fd5b620006fc8c838d01620005da565b995060208b01519150808211156200071357600080fd5b620007218c838d01620005da565b985060408b01519150808211156200073857600080fd5b620007468c838d0162000656565b975060608b01519150808211156200075d57600080fd5b6200076b8c838d0162000656565b965060808b01519150808211156200078257600080fd5b50620007918b828c0162000656565b94505060a0890151925060c08901519150620007b060e08a01620005bd565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b600060018201620007f657634e487b7160e01b600052601160045260246000fd5b5060010190565b61119f806200080d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806392347b5e1161006657806392347b5e146100fd578063d41d826a1461017b578063df1299791461018e578063f2fde38b146101a1578063f5cd7277146101b457600080fd5b8063057440d3146100a3578063715018a6146100be57806386d1a69f146100c85780638da5cb5b146100d0578063910d25ba146100f5575b600080fd5b6100ab6101bc565b6040519081526020015b60405180910390f35b6100c661022e565b005b6100c6610299565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b6009546100ab565b61014761010b366004610f96565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100b5565b6100c6610189366004610fbf565b6103ff565b6001546100dd906001600160a01b031681565b6100c66101af366004610f96565b61073a565b6100ab610805565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610fff565b905090565b6000546001600160a01b0316331461028d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102976000610a44565b565b601054600160a01b900460ff16156102e45760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610284565b6010805460ff60a01b1916600160a01b17905533600090815260026020819052604082200154900361034a5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030b71034b73b32b9ba37b960891b6044820152606401610284565b60006103563342610a94565b905080600a600082825461036a919061102e565b90915550506010546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a26010546103c8906001600160a01b03163383610cde565b33600090815260026020526040812060010180548392906103ea90849061102e565b90915550506010805460ff60a01b1916905550565b6001546040516370a0823160e01b81526001600160a01b038481166004830152859216906370a0823190602401602060405180830381865afa158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d9190610fff565b10156104e15760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610284565b6001600160a01b03821660009081526002602081905260409091200154156105645760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610284565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201869052909116906323b872dd906064016020604051808303816000875af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190611046565b508015610665576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385161790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018390556106a3565b6005805460019081019091556007805491820181556000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688018390555b506040805160a0810182526001600160a01b03928316808252600060208084018281528486019788524267ffffffffffffffff166060860190815260016080870181815295855260029384905296909320945185546001600160a01b031916971696909617845594519383019390935593519281019290925551600382015590516004909101805460ff1916911515919091179055565b6000546001600160a01b031633146107945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610284565b6001600160a01b0381166107f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610284565b61080281610a44565b50565b3360009081526002602081905260408220908101546001909101541061086d5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b33600090815260026020819052604082200154429190819060015b6008548111610a1a5761089e8162278d00611063565b336000908152600260205260409020600301546108bb919061102e565b85111561095d576108cd600182611082565b6108da9062278d00611063565b6108e78262278d00611063565b6108f19190611082565b92508262278d006127106008610908600186611082565b8154811061091857610918611099565b90600052602060002001548561092e9190611063565b61093891906110af565b61094291906110af565b61094c9190611063565b610956908561102e565b9350610a08565b3360009081526002602052604090206003015461097b600183611082565b6109889062278d00611063565b6109929087611082565b61099c9190611082565b92508262278d0061271060086109b3600186611082565b815481106109c3576109c3611099565b9060005260206000200154856109d99190611063565b6109e391906110af565b6109ed91906110af565b6109f79190611063565b610a01908561102e565b9350610a1a565b80610a12816110d1565b915050610888565b503360009081526002602052604081206001015490610a398286611082565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33600090815260026020819052604082209081015460019091015410610afc5760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610284565b33600090815260026020819052604082200154839190819060015b6008548111610ca957610b2d8162278d00611063565b33600090815260026020526040902060030154610b4a919061102e565b851115610bec57610b5c600182611082565b610b699062278d00611063565b610b768262278d00611063565b610b809190611082565b92508262278d006127106008610b97600186611082565b81548110610ba757610ba7611099565b906000526020600020015485610bbd9190611063565b610bc791906110af565b610bd191906110af565b610bdb9190611063565b610be5908561102e565b9350610c97565b33600090815260026020526040902060030154610c0a600183611082565b610c179062278d00611063565b610c219087611082565b610c2b9190611082565b92508262278d006127106008610c42600186611082565b81548110610c5257610c52611099565b906000526020600020015485610c689190611063565b610c7291906110af565b610c7c91906110af565b610c869190611063565b610c90908561102e565b9350610ca9565b80610ca1816110d1565b915050610b17565b506001600160a01b03871660009081526002602052604081206001015490610cd18286611082565b9998505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610d30908490610d35565b505050565b6000610d8a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e079092919063ffffffff16565b805190915015610d305780806020019051810190610da89190611046565b610d305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610284565b6060610e168484600085610e20565b90505b9392505050565b606082471015610e815760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610284565b6001600160a01b0385163b610ed85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610284565b600080866001600160a01b03168587604051610ef4919061111a565b60006040518083038185875af1925050503d8060008114610f31576040519150601f19603f3d011682016040523d82523d6000602084013e610f36565b606091505b5091509150610a3982828660608315610f50575081610e19565b825115610f605782518084602001fd5b8160405162461bcd60e51b81526004016102849190611136565b80356001600160a01b0381168114610f9157600080fd5b919050565b600060208284031215610fa857600080fd5b610e1982610f7a565b801515811461080257600080fd5b600080600060608486031215610fd457600080fd5b83359250610fe460208501610f7a565b91506040840135610ff481610fb1565b809150509250925092565b60006020828403121561101157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561104157611041611018565b500190565b60006020828403121561105857600080fd5b8151610e1981610fb1565b600081600019048311821515161561107d5761107d611018565b500290565b60008282101561109457611094611018565b500390565b634e487b7160e01b600052603260045260246000fd5b6000826110cc57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016110e3576110e3611018565b5060010190565b60005b838110156111055781810151838201526020016110ed565b83811115611114576000848401525b50505050565b6000825161112c8184602087016110ea565b9190910192915050565b60208152600082518060208401526111558160408501602087016110ea565b601f01601f1916919091016040019291505056fea2646970667358221220bb6d35fd0ab0fca9a5b3dd0acde013f6b42b4a2039f2f6a2358be899c74b352764736f6c634300080f0033436f6e7374727563746f723a206c6f636b656420496e766573746f7220616464",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "55": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "56": [
            3735,
            3756,
            false
          ],
          "57": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "52": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "53": [
            7735,
            7742,
            false
          ],
          "54": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "6": {
        "LockContract.can_release_percent": {
          "50": [
            7608,
            7699,
            true
          ],
          "51": [
            8109,
            8176,
            false
          ]
        },
        "LockContract.new_Investor": {
          "45": [
            9887,
            9941,
            true
          ],
          "46": [
            10036,
            10094,
            true
          ],
          "47": [
            10299,
            10309,
            false
          ]
        },
        "LockContract.release": {
          "44": [
            6613,
            6662,
            true
          ]
        },
        "LockContract.view_can_release_percent": {
          "48": [
            11250,
            11341,
            true
          ],
          "49": [
            11758,
            11825,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "26": [
            2378,
            2395
          ],
          "27": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "17": [
            1998,
            2071
          ],
          "18": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "36": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "35": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "37": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "38": [
            5137,
            5218
          ],
          "40": [
            5228,
            5288
          ],
          "41": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "39": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "42": [
            7758,
            7775
          ],
          "43": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "6": {
        "LockContract.can_release_percent": {
          "28": [
            7600,
            7749
          ],
          "29": [
            8337,
            8381
          ],
          "30": [
            8510,
            8662
          ],
          "31": [
            8946,
            9036
          ],
          "32": [
            9071,
            9223
          ],
          "33": [
            9242,
            9247
          ],
          "34": [
            8079,
            8082
          ]
        },
        "LockContract.contract_balance": {
          "2": [
            13404,
            13448
          ]
        },
        "LockContract.get_initLock": {
          "1": [
            13523,
            13538
          ]
        },
        "LockContract.new_Investor": {
          "9": [
            9879,
            10017
          ],
          "10": [
            10028,
            10156
          ],
          "11": [
            10214,
            10285
          ],
          "12": [
            10324,
            10365
          ],
          "13": [
            10379,
            10404
          ],
          "14": [
            10433,
            10455
          ],
          "15": [
            10469,
            10495
          ],
          "16": [
            10923,
            10970
          ]
        },
        "LockContract.release": {
          "5": [
            6959,
            6986
          ],
          "6": [
            6996,
            7040
          ],
          "7": [
            7050,
            7118
          ],
          "8": [
            7128,
            7186
          ]
        },
        "LockContract.view_can_release_percent": {
          "19": [
            11242,
            11391
          ],
          "20": [
            11986,
            12030
          ],
          "21": [
            12159,
            12311
          ],
          "22": [
            12595,
            12685
          ],
          "23": [
            12720,
            12872
          ],
          "24": [
            12891,
            12896
          ],
          "25": [
            11728,
            11731
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "846:12701:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13336:119;;;:::i;:::-;;;160:25:7;;;148:2;133:18;13336:119:6;;;;;;;;1668:101:0;;;:::i;:::-;;6799:394:6;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;360:32:7;;;342:51;;330:2;315:18;1036:85:0;196:203:7;13461:84:6;13530:8;;13461:84;;1035:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1035:52:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1044:32:7;;;1026:51;;1108:2;1093:18;;1086:34;;;;1136:18;;;1129:34;;;;1194:2;1179:18;;1172:34;1250:14;1243:22;1237:3;1222:19;;1215:51;1013:3;998:19;1035:52:6;773:499:7;9674:1305:6;;;;;;:::i;:::-;;:::i;908:26::-;;;;;-1:-1:-1;;;;;908:26:6;;;1918:198:0;;;;;;:::i;:::-;;:::i;11091:2173:6:-;;;:::i;13336:119::-;13411:12;;:37;;-1:-1:-1;;;13411:37:6;;13442:4;13411:37;;;342:51:7;13385:7:6;;-1:-1:-1;;;;;13411:12:6;;:22;;315:18:7;;13411:37:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13404:44;;13336:119;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:7;1240:68:0;;;2384:21:7;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;6799:394:6:-;6413:6;;-1:-1:-1;;;6413:6:6;;;;6412:7;6404:34;;;;-1:-1:-1;;;6404:34:6;;2763:2:7;6404:34:6;;;2745:21:7;2802:2;2782:18;;;2775:30;-1:-1:-1;;;2821:18:7;;;2814:44;2875:18;;6404:34:6;2561:338:7;6404:34:6;6448:6;:13;;-1:-1:-1;;;;6448:13:6;-1:-1:-1;;;6448:13:6;;;6630:10:::1;6448:13:::0;6613:28;;;:16:::1;:28;::::0;;;;;;:44:::1;::::0;:49;;6605:77:::1;;;::::0;-1:-1:-1;;;6605:77:6;;3106:2:7;6605:77:6::1;::::0;::::1;3088:21:7::0;3145:2;3125:18;;;3118:30;-1:-1:-1;;;3164:18:7;;;3157:45;3219:18;;6605:77:6::1;2904:339:7::0;6605:77:6::1;6871:18:::2;6892:57;6912:10;6932:15;6892:19;:57::i;:::-;6871:78;;6976:10;6959:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7015:12:6::2;::::0;7001:39:::2;::::0;160:25:7;;;-1:-1:-1;;;;;7015:12:6;;::::2;::::0;7001:39:::2;::::0;148:2:7;133:18;7001:39:6::2;;;;;;;7080:12;::::0;7050:68:::2;::::0;-1:-1:-1;;;;;7080:12:6::2;7095:10;7107::::0;7050:22:::2;:68::i;:::-;7145:10;7128:28;::::0;;;:16:::2;:28;::::0;;;;:44:::2;;:58:::0;;7176:10;;7128:28;:58:::2;::::0;7176:10;;7128:58:::2;:::i;:::-;::::0;;;-1:-1:-1;;6482:6:6;:14;;-1:-1:-1;;;;6482:14:6;;;-1:-1:-1;6799:394:6:o;9674:1305::-;9887:12;;:44;;-1:-1:-1;;;9887:44:6;;-1:-1:-1;;;;;360:32:7;;;9887:44:6;;;342:51:7;9934:7:6;;9887:12;;:22;;315:18:7;;9887:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;9879:138;;;;-1:-1:-1;;;9879:138:6;;3715:2:7;9879:138:6;;;3697:21:7;3754:2;3734:18;;;3727:30;3793:34;3773:18;;;3766:62;3864:32;3844:18;;;3837:60;3914:19;;9879:138:6;3513:426:7;9879:138:6;-1:-1:-1;;;;;10036:38:6;;;;;;:16;:38;;;;;;;;:54;;:58;10028:128;;;;-1:-1:-1;;;10028:128:6;;4146:2:7;10028:128:6;;;4128:21:7;4185:2;4165:18;;;4158:30;4224:34;4204:18;;;4197:62;-1:-1:-1;;;4275:18:7;;;4268:46;4331:19;;10028:128:6;3944:412:7;10028:128:6;10214:12;;:71;;-1:-1:-1;;;10214:71:6;;-1:-1:-1;;;;;4619:15:7;;;10214:71:6;;;4601:34:7;10270:4:6;4651:18:7;;;4644:43;4703:18;;;4696:34;;;10214:12:6;;;;:25;;4536:18:7;;10214:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10299:10;10296:210;;;10324:14;:41;;;;;;;;;;;;;-1:-1:-1;;;;;;10324:41:6;-1:-1:-1;;;;;10324:41:6;;;;;10379:11;:25;;;;;;;-1:-1:-1;10379:25:6;;;;;;10296:210;;;10433:15;:22;;;;;;;;;10469:12;:26;;;;;;;-1:-1:-1;10469:26:6;;;;;;10296:210;-1:-1:-1;10584:268:6;;;;;;;;-1:-1:-1;;;;;10584:268:6;;;;;;-1:-1:-1;10584:268:6;;;;;;;;;;;;;10781:15;10584:268;;;;;;;;10847:4;10584:268;;;;;;10923:38;;;:16;:38;;;;;;;;:47;;;;-1:-1:-1;;;;;;10923:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10923:47:6;;;;;;;;;;9674:1305::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;2402:2:7;1240:68:0;;;2384:21:7;;;2421:18;;;2414:30;2480:34;2460:18;;;2453:62;2532:18;;1240:68:0;2200:356:7;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5193:2:7;1998:73:0::1;::::0;::::1;5175:21:7::0;5232:2;5212:18;;;5205:30;5271:34;5251:18;;;5244:62;-1:-1:-1;;;5322:18:7;;;5315:36;5368:19;;1998:73:0::1;4991:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;11091:2173:6:-;11314:10;11148:7;11297:28;;;:16;:28;;;;;;;:44;;;;11250;;;;;:91;11242:149;;;;-1:-1:-1;;;11242:149:6;;5600:2:7;11242:149:6;;;5582:21:7;5639:2;5619:18;;;5612:30;5678;5658:18;;;5651:58;5726:18;;11242:149:6;5398:352:7;11242:149:6;11632:10;11411:21;11615:28;;;:16;:28;;;;;;;:44;;11435:15;;11411:21;;;11691:1;11678:1243;11698:21;:28;11694:32;;11678:1243;;11815:9;11823:1;11815:7;:9;:::i;:::-;11792:10;11775:28;;;;:16;:28;;;;;:39;;;:49;;;;:::i;:::-;11758:13;:67;11755:1156;;;12026:3;12028:1;12026;:3;:::i;:::-;12017:13;;:7;:13;:::i;:::-;12006:9;12014:1;12006:7;:9;:::i;:::-;:24;;;;:::i;:::-;11986:44;-1:-1:-1;11986:44:6;12283:7;12277:5;12250:21;12272:3;12274:1;12272;:3;:::i;:::-;12250:26;;;;;;;;:::i;:::-;;;;;;;;;12210:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;12174:137;;:12;:137;:::i;:::-;12159:152;;11755:1156;;;12663:10;12646:28;;;;:16;:28;;;;;:39;;;12641:3;12643:1;12641;:3;:::i;:::-;12632:13;;:7;:13;:::i;:::-;12616:29;;:13;:29;:::i;:::-;:69;;;;:::i;:::-;12595:90;-1:-1:-1;12595:90:6;12844:7;12838:5;12811:21;12833:3;12835:1;12833;:3;:::i;:::-;12811:26;;;;;;;;:::i;:::-;;;;;;;;;12771:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;12735:137;;:12;:137;:::i;:::-;12720:152;;12891:5;;11755:1156;11728:3;;;;:::i;:::-;;;;11678:1243;;;-1:-1:-1;13038:10:6;12996:22;13021:28;;;:16;:28;;;;;:44;;;;13175:29;13021:44;13175:12;:29;:::i;:::-;13148:56;11091:2173;-1:-1:-1;;;;;;;11091:2173:6:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;7408:2211:6:-;7672:10;7506:7;7655:28;;;:16;:28;;;;;;;:44;;;;7608;;;;;:91;7600:149;;;;-1:-1:-1;;;7600:149:6;;5600:2:7;7600:149:6;;;5582:21:7;5639:2;5619:18;;;5612:30;5678;5658:18;;;5651:58;5726:18;;7600:149:6;5398:352:7;7600:149:6;7983:10;7769:21;7966:28;;;:16;:28;;;;;;;:44;;7792:9;;7769:21;;;8042:1;8029:1243;8049:21;:28;8045:32;;8029:1243;;8166:9;8174:1;8166:7;:9;:::i;:::-;8143:10;8126:28;;;;:16;:28;;;;;:39;;;:49;;;;:::i;:::-;8109:13;:67;8106:1156;;;8377:3;8379:1;8377;:3;:::i;:::-;8368:13;;:7;:13;:::i;:::-;8357:9;8365:1;8357:7;:9;:::i;:::-;:24;;;;:::i;:::-;8337:44;-1:-1:-1;8337:44:6;8634:7;8628:5;8601:21;8623:3;8625:1;8623;:3;:::i;:::-;8601:26;;;;;;;;:::i;:::-;;;;;;;;;8561:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;8525:137;;:12;:137;:::i;:::-;8510:152;;8106:1156;;;9014:10;8997:28;;;;:16;:28;;;;;:39;;;8992:3;8994:1;8992;:3;:::i;:::-;8983:13;;:7;:13;:::i;:::-;8967:29;;:13;:29;:::i;:::-;:69;;;;:::i;:::-;8946:90;-1:-1:-1;8946:90:6;9195:7;9189:5;9162:21;9184:3;9186:1;9184;:3;:::i;:::-;9162:26;;;;;;;;:::i;:::-;;;;;;;;;9122:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;9086:137;;:12;:137;:::i;:::-;9071:152;;9242:5;;8106:1156;8079:3;;;;:::i;:::-;;;;8029:1243;;;-1:-1:-1;;;;;;9372:32:6;;9347:22;9372:32;;;:16;:32;;;;;:48;;;;9530:29;9372:48;9530:12;:29;:::i;:::-;9503:56;7408:2211;-1:-1:-1;;;;;;;;;7408:2211:6:o;701:205:2:-;840:58;;;-1:-1:-1;;;;;6744:32:7;;840:58:2;;;6726:51:7;6793:18;;;;6786:34;;;840:58:2;;;;;;;;;;6699:18:7;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;7033:2:7;3811:85:2;;;7015:21:7;7072:2;7052:18;;;7045:30;7111:34;7091:18;;;7084:62;-1:-1:-1;;;7162:18:7;;;7155:40;7212:19;;3811:85:2;6831:406:7;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;7444:2:7;5137:81:3;;;7426:21:7;7483:2;7463:18;;;7456:30;7522:34;7502:18;;;7495:62;-1:-1:-1;;;7573:18:7;;;7566:36;7619:19;;5137:81:3;7242:402:7;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;7851:2:7;5228:60:3;;;7833:21:7;7890:2;7870:18;;;7863:30;7929:31;7909:18;;;7902:59;7978:18;;5228:60:3;7649:353:7;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;404:173:7:-;472:20;;-1:-1:-1;;;;;521:31:7;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;1277:118::-;1363:5;1356:13;1349:21;1342:5;1339:32;1329:60;;1385:1;1382;1375:12;1400:383;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1595:9;1582:23;1572:33;;1624:38;1658:2;1647:9;1643:18;1624:38;:::i;:::-;1614:48;;1712:2;1701:9;1697:18;1684:32;1725:28;1747:5;1725:28;:::i;:::-;1772:5;1762:15;;;1400:383;;;;;:::o;2011:184::-;2081:6;2134:2;2122:9;2113:7;2109:23;2105:32;2102:52;;;2150:1;2147;2140:12;2102:52;-1:-1:-1;2173:16:7;;2011:184;-1:-1:-1;2011:184:7:o;3248:127::-;3309:10;3304:3;3300:20;3297:1;3290:31;3340:4;3337:1;3330:15;3364:4;3361:1;3354:15;3380:128;3420:3;3451:1;3447:6;3444:1;3441:13;3438:39;;;3457:18;;:::i;:::-;-1:-1:-1;3493:9:7;;3380:128::o;4741:245::-;4808:6;4861:2;4849:9;4840:7;4836:23;4832:32;4829:52;;;4877:1;4874;4867:12;4829:52;4909:9;4903:16;4928:28;4950:5;4928:28;:::i;5755:168::-;5795:7;5861:1;5857;5853:6;5849:14;5846:1;5843:21;5838:1;5831:9;5824:17;5820:45;5817:71;;;5868:18;;:::i;:::-;-1:-1:-1;5908:9:7;;5755:168::o;5928:125::-;5968:4;5996:1;5993;5990:8;5987:34;;;6001:18;;:::i;:::-;-1:-1:-1;6038:9:7;;5928:125::o;6058:127::-;6119:10;6114:3;6110:20;6107:1;6100:31;6150:4;6147:1;6140:15;6174:4;6171:1;6164:15;6190:217;6230:1;6256;6246:132;;6300:10;6295:3;6291:20;6288:1;6281:31;6335:4;6332:1;6325:15;6363:4;6360:1;6353:15;6246:132;-1:-1:-1;6392:9:7;;6190:217::o;6412:135::-;6451:3;6472:17;;;6469:43;;6492:18;;:::i;:::-;-1:-1:-1;6539:1:7;6528:13;;6412:135::o;8007:258::-;8079:1;8089:113;8103:6;8100:1;8097:13;8089:113;;;8179:11;;;8173:18;8160:11;;;8153:39;8125:2;8118:10;8089:113;;;8220:6;8217:1;8214:13;8211:48;;;8255:1;8246:6;8241:3;8237:16;8230:27;8211:48;;8007:258;;;:::o;8270:274::-;8399:3;8437:6;8431:13;8453:53;8499:6;8494:3;8487:4;8479:6;8475:17;8453:53;:::i;:::-;8522:16;;;;;8270:274;-1:-1:-1;;8270:274:7:o;8549:383::-;8698:2;8687:9;8680:21;8661:4;8730:6;8724:13;8773:6;8768:2;8757:9;8753:18;8746:34;8789:66;8848:6;8843:2;8832:9;8828:18;8823:2;8815:6;8811:15;8789:66;:::i;:::-;8916:2;8895:15;-1:-1:-1;;8891:29:7;8876:45;;;;8923:2;8872:54;;8549:383;-1:-1:-1;;8549:383:7:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "contract_balance()": {
        "details": "View function to get contract balance"
      },
      "new_Investor(uint256,address,bool)": {
        "details": "Adds a new Investor."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release()": {
        "details": "Release the tokens  Emits a {ERC20Released} event."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "view_can_release_percent()": {
        "details": "View function that an investor can use to see how many tokens he can withdraw"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    846,
    13547
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x92347B5E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x92347B5E EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xD41D826A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xDF129979 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF5CD7277 EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57440D3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x910D25BA EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xAB JUMP JUMPDEST PUSH2 0x147 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xDD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xF96 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0xAB PUSH2 0x805 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x297 PUSH1 0x0 PUSH2 0xA44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F2072652D656E7472616E6379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SUB PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030B71034B73B32B9BA37B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x356 CALLER TIMESTAMP PUSH2 0xA94 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x10 SLOAD PUSH2 0x3C8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xCDE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3EA SWAP1 DUP5 SWAP1 PUSH2 0x102E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST LT ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E7320666F722074686520707269636520726571756972656D656E742E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320616C726561647920696E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B9BA34B7339031B7B73A3930B1BA17 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP4 SWAP1 SSTORE PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD DUP4 SWAP1 SSTORE JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD SWAP8 DUP9 MSTORE TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP8 ADD DUP2 DUP2 MSTORE SWAP6 DUP6 MSTORE PUSH1 0x2 SWAP4 DUP5 SWAP1 MSTORE SWAP7 SWAP1 SWAP4 KECCAK256 SWAP5 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP5 SSTORE SWAP5 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP4 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD PUSH1 0x3 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0xA44 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD TIMESTAMP SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xA1A JUMPI PUSH2 0x89E DUP2 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x8BB SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x8CD PUSH1 0x1 DUP3 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x8DA SWAP1 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x8E7 DUP3 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x908 PUSH1 0x1 DUP7 PUSH2 0x1082 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x1099 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x956 SWAP1 DUP6 PUSH2 0x102E JUMP JUMPDEST SWAP4 POP PUSH2 0xA08 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x97B PUSH1 0x1 DUP4 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x988 SWAP1 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x992 SWAP1 DUP8 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0x9B3 PUSH1 0x1 DUP7 PUSH2 0x1082 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9C3 JUMPI PUSH2 0x9C3 PUSH2 0x1099 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x9ED SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xA01 SWAP1 DUP6 PUSH2 0x102E JUMP JUMPDEST SWAP4 POP PUSH2 0xA1A JUMP JUMPDEST DUP1 PUSH2 0xA12 DUP2 PUSH2 0x10D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x888 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0xA39 DUP3 DUP7 PUSH2 0x1082 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD LT PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD DUP4 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xCA9 JUMPI PUSH2 0xB2D DUP2 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xBEC JUMPI PUSH2 0xB5C PUSH1 0x1 DUP3 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xB76 DUP3 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xB97 PUSH1 0x1 DUP7 PUSH2 0x1082 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBA7 JUMPI PUSH2 0xBA7 PUSH2 0x1099 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xBD1 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xBE5 SWAP1 DUP6 PUSH2 0x102E JUMP JUMPDEST SWAP4 POP PUSH2 0xC97 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xC0A PUSH1 0x1 DUP4 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC17 SWAP1 PUSH3 0x278D00 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xC21 SWAP1 DUP8 PUSH2 0x1082 JUMP JUMPDEST PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xC42 PUSH1 0x1 DUP7 PUSH2 0x1082 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC52 JUMPI PUSH2 0xC52 PUSH2 0x1099 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xC7C SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0xC90 SWAP1 DUP6 PUSH2 0x102E JUMP JUMPDEST SWAP4 POP PUSH2 0xCA9 JUMP JUMPDEST DUP1 PUSH2 0xCA1 DUP2 PUSH2 0x10D1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 PUSH2 0xCD1 DUP3 DUP7 PUSH2 0x1082 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xD30 SWAP1 DUP5 SWAP1 PUSH2 0xD35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE07 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD30 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDA8 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE16 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE20 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x284 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xA39 DUP3 DUP3 DUP7 PUSH1 0x60 DUP4 ISZERO PUSH2 0xF50 JUMPI POP DUP2 PUSH2 0xE19 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF60 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE19 DUP3 PUSH2 0xF7A JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xFE4 PUSH1 0x20 DUP6 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xFF4 DUP2 PUSH2 0xFB1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1041 PUSH2 0x1018 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE19 DUP2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x107D JUMPI PUSH2 0x107D PUSH2 0x1018 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1094 JUMPI PUSH2 0x1094 PUSH2 0x1018 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10E3 JUMPI PUSH2 0x10E3 PUSH2 0x1018 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1105 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10ED JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1114 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x112C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x10EA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1155 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB PUSH14 0x35FD0AB0FCA9A5B3DD0ACDE013F6 0xB4 0x2B 0x4A KECCAK256 CODECOPY CALLCODE 0xF6 LOG2 CALLDATALOAD DUP12 0xE8 SWAP10 0xC7 0x4B CALLDATALOAD 0x27 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "38": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x92347B5E"
    },
    "49": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD"
    },
    "53": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD41D826A"
    },
    "60": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17B"
    },
    "64": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDF129979"
    },
    "71": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18E"
    },
    "75": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A1"
    },
    "86": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF5CD7277"
    },
    "93": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B4"
    },
    "97": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "REVERT",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x57440D3"
    },
    "109": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE"
    },
    "124": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x86D1A69F"
    },
    "131": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC8"
    },
    "135": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD0"
    },
    "146": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x910D25BA"
    },
    "153": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5"
    },
    "157": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "DUP1",
      "path": "6"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        846,
        13547
      ],
      "op": "REVERT",
      "path": "6"
    },
    "163": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "164": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "167": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BC"
    },
    "170": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMP",
      "path": "6"
    },
    "171": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "172": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "174": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "175": {
      "op": "SWAP1"
    },
    "176": {
      "op": "DUP2"
    },
    "177": {
      "op": "MSTORE"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "180": {
      "op": "ADD"
    },
    "181": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "182": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "184": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "185": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "187": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "SUB",
      "path": "6"
    },
    "188": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "189": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "RETURN",
      "path": "6"
    },
    "190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22E"
    },
    "197": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "198": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "200": {
      "fn": "LockContract.release",
      "offset": [
        6799,
        7193
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "201": {
      "fn": "LockContract.release",
      "offset": [
        6799,
        7193
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6"
    },
    "204": {
      "fn": "LockContract.release",
      "offset": [
        6799,
        7193
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x299"
    },
    "207": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6799,
        7193
      ],
      "op": "JUMP",
      "path": "6"
    },
    "208": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "211": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "221": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "224": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "231": {
      "op": "SHL"
    },
    "232": {
      "op": "SUB"
    },
    "233": {
      "op": "SWAP1"
    },
    "234": {
      "op": "SWAP2"
    },
    "235": {
      "op": "AND"
    },
    "236": {
      "op": "DUP2"
    },
    "237": {
      "op": "MSTORE"
    },
    "238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "240": {
      "op": "ADD"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "244": {
      "op": "JUMP"
    },
    "245": {
      "fn": "LockContract.get_initLock",
      "offset": [
        13461,
        13545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "246": {
      "fn": "LockContract.get_initLock",
      "offset": [
        13530,
        13538
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x9"
    },
    "248": {
      "fn": "LockContract.get_initLock",
      "offset": [
        13530,
        13538
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "249": {
      "fn": "LockContract.get_initLock",
      "offset": [
        13461,
        13545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "252": {
      "fn": "LockContract.get_initLock",
      "offset": [
        13461,
        13545
      ],
      "op": "JUMP",
      "path": "6"
    },
    "253": {
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "254": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x147"
    },
    "257": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B"
    },
    "260": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "261": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "263": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF96"
    },
    "266": {
      "fn": "LockContract.get_initLock",
      "jump": "i",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "267": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "268": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "270": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "272": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP2",
      "path": "6"
    },
    "273": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "274": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "275": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "277": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "278": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "279": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "280": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "282": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "283": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "284": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "285": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "286": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "287": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "289": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "290": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "291": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "292": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "293": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP3",
      "path": "6"
    },
    "294": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "295": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "296": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "298": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "299": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "300": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "301": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "303": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "304": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "305": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "ADD",
      "path": "6"
    },
    "306": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "SUB"
    },
    "315": {
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "316": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "317": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "318": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "319": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "320": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "321": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "322": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "324": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "AND",
      "path": "6"
    },
    "325": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP6",
      "path": "6"
    },
    "326": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMP",
      "path": "6"
    },
    "327": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "328": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "330": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "DUP1",
      "path": "6"
    },
    "331": {
      "fn": "LockContract.get_initLock",
      "offset": [
        1035,
        1087
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "SWAP7"
    },
    "342": {
      "op": "AND"
    },
    "343": {
      "op": "DUP7"
    },
    "344": {
      "op": "MSTORE"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "347": {
      "op": "DUP7"
    },
    "348": {
      "op": "ADD"
    },
    "349": {
      "op": "SWAP5"
    },
    "350": {
      "op": "SWAP1"
    },
    "351": {
      "op": "SWAP5"
    },
    "352": {
      "op": "MSTORE"
    },
    "353": {
      "op": "SWAP3"
    },
    "354": {
      "op": "DUP5"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "op": "SWAP2"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "SWAP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "362": {
      "op": "DUP4"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "op": "MSTORE"
    },
    "365": {
      "op": "ISZERO"
    },
    "366": {
      "op": "ISZERO"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "369": {
      "op": "DUP3"
    },
    "370": {
      "op": "ADD"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "offset": [
        1035,
        1087
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6"
    },
    "383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x189"
    },
    "386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "389": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFBF"
    },
    "392": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "393": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "394": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FF"
    },
    "397": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "398": {
      "offset": [
        908,
        934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "399": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "401": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "402": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDD"
    },
    "405": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "offset": [
        908,
        934
      ],
      "op": "AND",
      "path": "6"
    },
    "415": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "416": {
      "fn": "LockContract.new_Investor",
      "offset": [
        908,
        934
      ],
      "op": "JUMP",
      "path": "6"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF96"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73A"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11091,
        13264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "437": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11091,
        13264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11091,
        13264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x805"
    },
    "443": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11091,
        13264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "444": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "445": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13423
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "447": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13423
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "448": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "450": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "451": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP2",
      "path": "6"
    },
    "460": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "461": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13442,
        13446
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "462": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "464": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP3",
      "path": "6"
    },
    "465": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ADD",
      "path": "6"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13385,
        13392
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "469": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13385,
        13392
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13423
      ],
      "op": "AND",
      "path": "6"
    },
    "479": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13423
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "480": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13433
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "485": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13433
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "491": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "493": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "494": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "495": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP4",
      "path": "6"
    },
    "496": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "SUB",
      "path": "6"
    },
    "497": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP2",
      "path": "6"
    },
    "498": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP7",
      "path": "6"
    },
    "499": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "GAS",
      "path": "6"
    },
    "500": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "501": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "502": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "503": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "504": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x205"
    },
    "507": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "508": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "509": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "511": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "512": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "513": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "514": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "516": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "REVERT",
      "path": "6"
    },
    "517": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "518": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "519": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "520": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "521": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "522": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "524": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "525": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "526": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "528": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "NOT",
      "path": "6"
    },
    "529": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "531": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP3",
      "path": "6"
    },
    "532": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ADD",
      "path": "6"
    },
    "533": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "AND",
      "path": "6"
    },
    "534": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP3",
      "path": "6"
    },
    "535": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ADD",
      "path": "6"
    },
    "536": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "537": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "539": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "540": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "541": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "DUP2",
      "path": "6"
    },
    "542": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "ADD",
      "path": "6"
    },
    "543": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "544": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x229"
    },
    "547": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "548": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "549": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFFF"
    },
    "552": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        13411,
        13448
      ],
      "op": "JUMP",
      "path": "6"
    },
    "553": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13411,
        13448
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "554": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13404,
        13448
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "555": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13404,
        13448
      ],
      "op": "POP",
      "path": "6"
    },
    "556": {
      "fn": "LockContract.contract_balance",
      "offset": [
        13336,
        13455
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "557": {
      "fn": "LockContract.contract_balance",
      "jump": "o",
      "offset": [
        13336,
        13455
      ],
      "op": "JUMP",
      "path": "6"
    },
    "558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "559": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "561": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "op": "SUB"
    },
    "570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "571": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 3
    },
    "572": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "573": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "576": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "577": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "580": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "591": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "595": {
      "op": "DUP2"
    },
    "596": {
      "op": "SWAP1"
    },
    "597": {
      "op": "MSTORE"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "638": {
      "op": "DUP3"
    },
    "639": {
      "op": "ADD"
    },
    "640": {
      "op": "MSTORE"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x297"
    },
    "657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "659": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA44"
    },
    "662": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "664": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "665": {
      "fn": "LockContract.release",
      "offset": [
        6799,
        7193
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "666": {
      "offset": [
        6413,
        6419
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "668": {
      "fn": "LockContract.release",
      "offset": [
        6413,
        6419
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "offset": [
        6413,
        6419
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "675": {
      "fn": "LockContract.release",
      "offset": [
        6413,
        6419
      ],
      "op": "DIV",
      "path": "6"
    },
    "676": {
      "fn": "LockContract.release",
      "offset": [
        6413,
        6419
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "678": {
      "fn": "LockContract.release",
      "offset": [
        6413,
        6419
      ],
      "op": "AND",
      "path": "6"
    },
    "679": {
      "offset": [
        6412,
        6419
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "680": {
      "offset": [
        6404,
        6438
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4"
    },
    "683": {
      "offset": [
        6404,
        6438
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "684": {
      "fn": "LockContract.release",
      "offset": [
        6404,
        6438
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "686": {
      "fn": "LockContract.release",
      "offset": [
        6404,
        6438
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "offset": [
        6404,
        6438
      ],
      "op": "DUP2",
      "path": "6"
    },
    "695": {
      "fn": "LockContract.release",
      "offset": [
        6404,
        6438
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "offset": [
        6404,
        6438
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "700": {
      "fn": "LockContract.release",
      "offset": [
        6404,
        6438
      ],
      "op": "DUP3",
      "path": "6"
    },
    "701": {
      "fn": "LockContract.release",
      "offset": [
        6404,
        6438
      ],
      "op": "ADD",
      "path": "6"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "707": {
      "op": "DUP3"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH14",
      "value": "0x4E6F2072652D656E7472616E6379"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "730": {
      "op": "DUP3"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "MSTORE"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "offset": [
        6404,
        6438
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "739": {
      "op": "JUMP"
    },
    "740": {
      "offset": [
        6404,
        6438
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "741": {
      "offset": [
        6448,
        6454
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "743": {
      "offset": [
        6448,
        6461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "744": {
      "fn": "LockContract.release",
      "offset": [
        6448,
        6461
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "NOT"
    },
    "751": {
      "offset": [
        6448,
        6461
      ],
      "op": "AND",
      "path": "6"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "offset": [
        6448,
        6461
      ],
      "op": "OR",
      "path": "6"
    },
    "758": {
      "fn": "LockContract.release",
      "offset": [
        6448,
        6461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "759": {
      "fn": "LockContract.release",
      "offset": [
        6448,
        6461
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "760": {
      "offset": [
        6630,
        6640
      ],
      "op": "CALLER",
      "path": "6"
    },
    "761": {
      "offset": [
        6448,
        6461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "763": {
      "offset": [
        6613,
        6641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "764": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "765": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "766": {
      "offset": [
        6613,
        6629
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "768": {
      "offset": [
        6613,
        6641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "770": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "DUP2",
      "path": "6"
    },
    "771": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "772": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "773": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "775": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "DUP3",
      "path": "6"
    },
    "776": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6641
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "777": {
      "offset": [
        6613,
        6657
      ],
      "op": "ADD",
      "path": "6"
    },
    "778": {
      "fn": "LockContract.release",
      "offset": [
        6613,
        6657
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "779": {
      "offset": [
        6613,
        6662
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "780": {
      "branch": 44,
      "fn": "LockContract.release",
      "offset": [
        6613,
        6662
      ],
      "op": "SUB",
      "path": "6"
    },
    "781": {
      "offset": [
        6605,
        6682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34A"
    },
    "784": {
      "branch": 44,
      "offset": [
        6605,
        6682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "785": {
      "fn": "LockContract.release",
      "offset": [
        6605,
        6682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "787": {
      "fn": "LockContract.release",
      "offset": [
        6605,
        6682
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "offset": [
        6605,
        6682
      ],
      "op": "DUP2",
      "path": "6"
    },
    "796": {
      "fn": "LockContract.release",
      "offset": [
        6605,
        6682
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "799": {
      "offset": [
        6605,
        6682
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "801": {
      "fn": "LockContract.release",
      "offset": [
        6605,
        6682
      ],
      "op": "DUP3",
      "path": "6"
    },
    "802": {
      "fn": "LockContract.release",
      "offset": [
        6605,
        6682
      ],
      "op": "ADD",
      "path": "6"
    },
    "803": {
      "op": "MSTORE"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "808": {
      "op": "DUP3"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH15",
      "value": "0x2737BA1030B71034B73B32B9BA37B9"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "offset": [
        6605,
        6682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "841": {
      "op": "JUMP"
    },
    "842": {
      "offset": [
        6605,
        6682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "843": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "845": {
      "fn": "LockContract.release",
      "offset": [
        6892,
        6949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356"
    },
    "848": {
      "fn": "LockContract.release",
      "offset": [
        6912,
        6922
      ],
      "op": "CALLER",
      "path": "6"
    },
    "849": {
      "fn": "LockContract.release",
      "offset": [
        6932,
        6947
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "850": {
      "fn": "LockContract.release",
      "offset": [
        6892,
        6911
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA94"
    },
    "853": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6892,
        6949
      ],
      "op": "JUMP",
      "path": "6"
    },
    "854": {
      "fn": "LockContract.release",
      "offset": [
        6892,
        6949
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "855": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "856": {
      "fn": "LockContract.release",
      "offset": [
        6871,
        6949
      ],
      "op": "POP",
      "path": "6"
    },
    "857": {
      "fn": "LockContract.release",
      "offset": [
        6976,
        6986
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 5
    },
    "858": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "860": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6972
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "862": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "863": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "864": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "865": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A"
    },
    "868": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "869": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "870": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "873": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        6959,
        6986
      ],
      "op": "JUMP",
      "path": "6"
    },
    "874": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "875": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "876": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "877": {
      "fn": "LockContract.release",
      "offset": [
        6959,
        6986
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "878": {
      "op": "POP"
    },
    "879": {
      "op": "POP"
    },
    "880": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x10"
    },
    "882": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "883": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "885": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "886": {
      "op": "DUP3"
    },
    "887": {
      "op": "DUP2"
    },
    "888": {
      "op": "MSTORE"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "898": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "899": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "AND",
      "path": "6"
    },
    "900": {
      "fn": "LockContract.release",
      "offset": [
        7015,
        7027
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "901": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "934": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "940": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "941": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "DUP1",
      "path": "6"
    },
    "942": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "943": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "SUB",
      "path": "6"
    },
    "944": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "945": {
      "fn": "LockContract.release",
      "offset": [
        7001,
        7040
      ],
      "op": "LOG2",
      "path": "6"
    },
    "946": {
      "fn": "LockContract.release",
      "offset": [
        7080,
        7092
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x10"
    },
    "948": {
      "fn": "LockContract.release",
      "offset": [
        7080,
        7092
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "949": {
      "fn": "LockContract.release",
      "offset": [
        7050,
        7118
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C8"
    },
    "952": {
      "fn": "LockContract.release",
      "offset": [
        7050,
        7118
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "fn": "LockContract.release",
      "offset": [
        7080,
        7092
      ],
      "op": "AND",
      "path": "6"
    },
    "962": {
      "fn": "LockContract.release",
      "offset": [
        7095,
        7105
      ],
      "op": "CALLER",
      "path": "6"
    },
    "963": {
      "fn": "LockContract.release",
      "offset": [
        7107,
        7117
      ],
      "op": "DUP4",
      "path": "6"
    },
    "964": {
      "fn": "LockContract.release",
      "offset": [
        7050,
        7072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCDE"
    },
    "967": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        7050,
        7118
      ],
      "op": "JUMP",
      "path": "6"
    },
    "968": {
      "fn": "LockContract.release",
      "offset": [
        7050,
        7118
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "969": {
      "fn": "LockContract.release",
      "offset": [
        7145,
        7155
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 8
    },
    "970": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "972": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "973": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "974": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "975": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7144
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "977": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "979": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "980": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "982": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "983": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "984": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7172
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "986": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7172
      ],
      "op": "ADD",
      "path": "6"
    },
    "987": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "988": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "989": {
      "fn": "LockContract.release",
      "offset": [
        7176,
        7186
      ],
      "op": "DUP4",
      "path": "6"
    },
    "990": {
      "fn": "LockContract.release",
      "offset": [
        7176,
        7186
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "991": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "992": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EA"
    },
    "995": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "996": {
      "fn": "LockContract.release",
      "offset": [
        7176,
        7186
      ],
      "op": "DUP5",
      "path": "6"
    },
    "997": {
      "fn": "LockContract.release",
      "offset": [
        7176,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "998": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "1001": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        7128,
        7186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1002": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1003": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1004": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1005": {
      "fn": "LockContract.release",
      "offset": [
        7128,
        7186
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "offset": [
        6482,
        6488
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x10"
    },
    "1010": {
      "offset": [
        6482,
        6496
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1011": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6496
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "NOT"
    },
    "1018": {
      "offset": [
        6482,
        6496
      ],
      "op": "AND",
      "path": "6"
    },
    "1019": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6496
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1020": {
      "fn": "LockContract.release",
      "offset": [
        6482,
        6496
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        6799,
        7193
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1023": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1024": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9899
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x1"
    },
    "1026": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1027": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1029": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1030": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1039": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "op": "DUP5"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "AND"
    },
    "1051": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1053": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1054": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1055": {
      "op": "MSTORE"
    },
    "1056": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9934,
        9941
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1057": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9934,
        9941
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1058": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9899
      ],
      "op": "AND",
      "path": "6"
    },
    "1059": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1060": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9909
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1065": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1071": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1073": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1074": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1075": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1076": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "SUB",
      "path": "6"
    },
    "1077": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1078": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1079": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "GAS",
      "path": "6"
    },
    "1080": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1081": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1082": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1083": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1084": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x449"
    },
    "1087": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1088": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1089": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1091": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1092": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1093": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1094": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1096": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1097": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1098": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "POP",
      "path": "6"
    },
    "1099": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "POP",
      "path": "6"
    },
    "1100": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "POP",
      "path": "6"
    },
    "1101": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "POP",
      "path": "6"
    },
    "1102": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1104": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1105": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1106": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1108": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "NOT",
      "path": "6"
    },
    "1109": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1111": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1112": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1113": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "AND",
      "path": "6"
    },
    "1114": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1115": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1116": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1117": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1119": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1120": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "POP",
      "path": "6"
    },
    "1121": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1122": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1123": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1124": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46D"
    },
    "1127": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1128": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1129": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFFF"
    },
    "1132": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        9887,
        9931
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1133": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9931
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1134": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9941
      ],
      "op": "LT",
      "path": "6"
    },
    "1135": {
      "branch": 45,
      "fn": "LockContract.new_Investor",
      "offset": [
        9887,
        9941
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1136": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E1"
    },
    "1139": {
      "branch": 45,
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1140": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1142": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1143": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1151": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1156": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1157": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "ADD",
      "path": "6"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1201": {
      "op": "DUP3"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH32",
      "value": "0x656E7320666F722074686520707269636520726571756972656D656E742E0000"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1239": {
      "op": "DUP3"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "1248": {
      "op": "JUMP"
    },
    "1249": {
      "fn": "LockContract.new_Investor",
      "offset": [
        9879,
        10017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 10
    },
    "1259": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "AND",
      "path": "6"
    },
    "1260": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1262": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1263": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1264": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1265": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1267": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1269": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1270": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1271": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1272": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1274": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1275": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1276": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10074
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1277": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10090
      ],
      "op": "ADD",
      "path": "6"
    },
    "1278": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10090
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1279": {
      "branch": 46,
      "fn": "LockContract.new_Investor",
      "offset": [
        10036,
        10094
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1280": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x564"
    },
    "1283": {
      "branch": 46,
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1284": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1286": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1295": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1298": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1300": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1301": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "ADD",
      "path": "6"
    },
    "1302": {
      "op": "MSTORE"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320697320616C726561647920696E207468652076"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1345": {
      "op": "DUP3"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH16",
      "value": "0x32B9BA34B7339031B7B73A3930B1BA17"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1370": {
      "op": "DUP3"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "MSTORE"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "1379": {
      "op": "JUMP"
    },
    "1380": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10028,
        10156
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1381": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x1"
    },
    "1383": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1384": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1387": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1396": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "SUB"
    },
    "1405": {
      "op": "DUP5"
    },
    "1406": {
      "op": "DUP2"
    },
    "1407": {
      "op": "AND"
    },
    "1408": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1410": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1411": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ADD",
      "path": "6"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10270,
        10274
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1416": {
      "op": "DUP4"
    },
    "1417": {
      "op": "ADD"
    },
    "1418": {
      "op": "MSTORE"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1421": {
      "op": "DUP3"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "DUP7"
    },
    "1424": {
      "op": "SWAP1"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1427": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1428": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "AND",
      "path": "6"
    },
    "1429": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10226
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1430": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10239
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "1435": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10239
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1441": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1443": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1444": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1445": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1446": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "SUB",
      "path": "6"
    },
    "1447": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1448": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1450": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1451": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "GAS",
      "path": "6"
    },
    "1452": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "CALL",
      "path": "6"
    },
    "1453": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1454": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1455": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1456": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BD"
    },
    "1459": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1460": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1461": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1463": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1464": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1465": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1466": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1468": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1469": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1470": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1471": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1472": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1473": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1474": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1476": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1477": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1478": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1480": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "NOT",
      "path": "6"
    },
    "1481": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1483": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1484": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ADD",
      "path": "6"
    },
    "1485": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "AND",
      "path": "6"
    },
    "1486": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1487": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ADD",
      "path": "6"
    },
    "1488": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1489": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1491": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1492": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1493": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1494": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "ADD",
      "path": "6"
    },
    "1495": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1496": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E1"
    },
    "1499": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1500": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1501": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1046"
    },
    "1504": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        10214,
        10285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1505": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1506": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10214,
        10285
      ],
      "op": "POP",
      "path": "6"
    },
    "1507": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        10299,
        10309
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1508": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1509": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x665"
    },
    "1512": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1513": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10338
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x4"
    },
    "1515": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1516": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1517": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1519": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1520": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1521": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "ADD",
      "path": "6"
    },
    "1522": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1523": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1524": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1525": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1558": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "ADD",
      "path": "6"
    },
    "1559": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1560": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1567": {
      "op": "SHL"
    },
    "1568": {
      "op": "SUB"
    },
    "1569": {
      "op": "NOT"
    },
    "1570": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "AND",
      "path": "6"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1580": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "AND",
      "path": "6"
    },
    "1581": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "OR",
      "path": "6"
    },
    "1582": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1583": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10324,
        10365
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1584": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10390
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x6"
    },
    "1586": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1587": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1588": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1589": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1590": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "ADD",
      "path": "6"
    },
    "1591": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1592": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1596": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1629": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "ADD",
      "path": "6"
    },
    "1630": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1631": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1632": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10379,
        10404
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1633": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A3"
    },
    "1636": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1637": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1638": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10448
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x5"
    },
    "1640": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1641": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1642": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1644": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1645": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1646": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "ADD",
      "path": "6"
    },
    "1647": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1648": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1649": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10433,
        10455
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1650": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10481
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x7"
    },
    "1652": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1653": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1654": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1655": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1656": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "ADD",
      "path": "6"
    },
    "1657": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1658": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1661": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1662": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1695": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "ADD",
      "path": "6"
    },
    "1696": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1697": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1698": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10469,
        10495
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1699": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10296,
        10506
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1703": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1704": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1705": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "1707": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1708": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "ADD",
      "path": "6"
    },
    "1709": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1710": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "SUB"
    },
    "1719": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1720": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1721": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "AND",
      "path": "6"
    },
    "1722": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1723": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1724": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1727": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1729": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1730": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1731": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "ADD",
      "path": "6"
    },
    "1732": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1733": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1734": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1735": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1736": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1737": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "ADD",
      "path": "6"
    },
    "1738": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1739": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1740": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1741": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10781,
        10796
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1742": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1751": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "AND",
      "path": "6"
    },
    "1752": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1754": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1755": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "ADD",
      "path": "6"
    },
    "1756": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1757": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1758": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1759": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10847,
        10851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1761": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "1763": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1764": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "ADD",
      "path": "6"
    },
    "1765": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1766": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1767": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10584,
        10852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1768": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP6",
      "path": "6",
      "statement": 16
    },
    "1769": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1770": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1771": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10939
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1773": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1774": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1775": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1776": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1777": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1778": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1779": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1780": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10961
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1781": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1782": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1783": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1784": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "op": "NOT"
    },
    "1794": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "AND",
      "path": "6"
    },
    "1795": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "1796": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "AND",
      "path": "6"
    },
    "1797": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1798": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1799": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "1800": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "OR",
      "path": "6"
    },
    "1801": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1802": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1803": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1804": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1805": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1806": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1807": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ADD",
      "path": "6"
    },
    "1808": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1809": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1810": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1811": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1812": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1813": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1814": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1815": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1816": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ADD",
      "path": "6"
    },
    "1817": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1818": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1819": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1820": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1821": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1822": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1824": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1825": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ADD",
      "path": "6"
    },
    "1826": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1827": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1828": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1829": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1831": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1832": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1833": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ADD",
      "path": "6"
    },
    "1834": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1835": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1838": {
      "op": "NOT"
    },
    "1839": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "AND",
      "path": "6"
    },
    "1840": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1841": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1842": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1843": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1844": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1845": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1846": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "OR",
      "path": "6"
    },
    "1847": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1848": {
      "fn": "LockContract.new_Investor",
      "offset": [
        10923,
        10970
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1849": {
      "fn": "LockContract.new_Investor",
      "jump": "o",
      "offset": [
        9674,
        10979
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1851": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1853": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "SUB"
    },
    "1862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1864": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1865": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1868": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1883": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1887": {
      "op": "DUP2"
    },
    "1888": {
      "op": "SWAP1"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1892": {
      "op": "DUP3"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "MSTORE"
    },
    "1895": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1930": {
      "op": "DUP3"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "1939": {
      "op": "JUMP"
    },
    "1940": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "1950": {
      "branch": 55,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F9"
    },
    "1954": {
      "branch": 55,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1971": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1972": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1978": {
      "op": "DUP3"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "MSTORE"
    },
    "1981": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2016": {
      "op": "DUP3"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "MSTORE"
    },
    "2019": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2031": {
      "op": "DUP3"
    },
    "2032": {
      "op": "ADD"
    },
    "2033": {
      "op": "MSTORE"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x284"
    },
    "2040": {
      "op": "JUMP"
    },
    "2041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 18,
      "value": "0x802"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA44"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2052": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2053": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11091,
        13264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2054": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11314,
        11324
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 19
    },
    "2055": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11148,
        11155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2057": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2058": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2059": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2060": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2062": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2064": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2065": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2066": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2067": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2069": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2070": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11325
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2071": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11341
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2072": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11341
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2073": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11341
      ],
      "op": "ADD",
      "path": "6"
    },
    "2074": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11297,
        11341
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2075": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11294
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2077": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2078": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11294
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2079": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11294
      ],
      "op": "ADD",
      "path": "6"
    },
    "2080": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11294
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2081": {
      "branch": 48,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11250,
        11341
      ],
      "op": "LT",
      "path": "6"
    },
    "2082": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86D"
    },
    "2085": {
      "branch": 48,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2086": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2088": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2097": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2100": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2102": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2103": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "ADD",
      "path": "6"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2109": {
      "op": "DUP3"
    },
    "2110": {
      "op": "ADD"
    },
    "2111": {
      "op": "MSTORE"
    },
    "2112": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "2156": {
      "op": "JUMP"
    },
    "2157": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11242,
        11391
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2158": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11632,
        11642
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2159": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11411,
        11432
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2161": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2162": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2163": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2164": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2166": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2168": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2169": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2170": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2171": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2173": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2174": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11643
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2175": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11659
      ],
      "op": "ADD",
      "path": "6"
    },
    "2176": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11615,
        11659
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2177": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11435,
        11450
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "2178": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11435,
        11450
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2179": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11411,
        11432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2180": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11411,
        11432
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2181": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11411,
        11432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2182": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11691,
        11692
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2184": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2185": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11698,
        11719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2187": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11698,
        11726
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2188": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11694,
        11726
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2189": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11694,
        11726
      ],
      "op": "GT",
      "path": "6"
    },
    "2190": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA1A"
    },
    "2193": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2194": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11815,
        11824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x89E"
    },
    "2197": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11823,
        11824
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2198": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11815,
        11822
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2202": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11815,
        11824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2205": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11815,
        11824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2206": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11815,
        11824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2207": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11792,
        11802
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2208": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2210": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2211": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2212": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2213": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11791
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2215": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2217": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2218": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2220": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2221": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11803
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2222": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11814
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2224": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11814
      ],
      "op": "ADD",
      "path": "6"
    },
    "2225": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11814
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2226": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8BB"
    },
    "2229": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11824
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2230": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11824
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2231": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "2234": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11775,
        11824
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2235": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11775,
        11824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2236": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11758,
        11771
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2237": {
      "branch": 49,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11758,
        11825
      ],
      "op": "GT",
      "path": "6"
    },
    "2238": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2239": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x95D"
    },
    "2242": {
      "branch": 49,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2243": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12026,
        12029
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 20,
      "value": "0x8CD"
    },
    "2246": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12028,
        12029
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2248": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12026,
        12027
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2249": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12026,
        12029
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2252": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12026,
        12029
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2253": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12026,
        12029
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2254": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12017,
        12030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8DA"
    },
    "2257": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12017,
        12030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2258": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12017,
        12024
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2262": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12017,
        12030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2265": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12017,
        12030
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2266": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12017,
        12030
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2267": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8E7"
    },
    "2270": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12014,
        12015
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2271": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12013
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2275": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2278": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12006,
        12015
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2279": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12015
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2280": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F1"
    },
    "2283": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12030
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2284": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12030
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2285": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12030
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2288": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12006,
        12030
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2289": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12006,
        12030
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2290": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11986,
        12030
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2291": {
      "op": "POP"
    },
    "2292": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11986,
        12030
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2293": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12283,
        12290
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 21,
      "value": "0x278D00"
    },
    "2297": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12277,
        12282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2300": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12271
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2302": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12272,
        12275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x908"
    },
    "2305": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12274,
        12275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2307": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12272,
        12273
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2308": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12272,
        12275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2311": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12272,
        12275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2312": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12272,
        12275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2313": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2314": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2315": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2316": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "LT",
      "path": "6"
    },
    "2317": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x918"
    },
    "2320": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2321": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x918"
    },
    "2324": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1099"
    },
    "2327": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12250,
        12276
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2328": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2329": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2330": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2332": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2333": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2335": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2337": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2338": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "ADD",
      "path": "6"
    },
    "2339": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12250,
        12276
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2340": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12226
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2341": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12276
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92E"
    },
    "2344": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12276
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2345": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12276
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2346": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12276
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2349": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12210,
        12276
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2350": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12276
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2351": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x938"
    },
    "2354": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12282
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2355": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12282
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2356": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12282
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "2359": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12210,
        12282
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2360": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12282
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2361": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12290
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x942"
    },
    "2364": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12290
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2365": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12290
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2366": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12290
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "2369": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12210,
        12290
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2370": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12290
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2371": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94C"
    },
    "2374": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12311
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2375": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2376": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2379": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12210,
        12311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2380": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12210,
        12311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2381": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12174,
        12311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x956"
    },
    "2384": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12174,
        12311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2385": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12174,
        12186
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2386": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12174,
        12311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "2389": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12174,
        12311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2390": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12174,
        12311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2391": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12159,
        12311
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2392": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12159,
        12311
      ],
      "op": "POP",
      "path": "6"
    },
    "2393": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA08"
    },
    "2396": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2397": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2398": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12663,
        12673
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 22
    },
    "2399": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2401": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2402": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2403": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2404": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12662
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2406": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2408": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2409": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2411": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2412": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12674
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2413": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2415": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12685
      ],
      "op": "ADD",
      "path": "6"
    },
    "2416": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12646,
        12685
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2417": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12641,
        12644
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x97B"
    },
    "2420": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12643,
        12644
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2422": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12641,
        12642
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2423": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12641,
        12644
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2426": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12641,
        12644
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2427": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12641,
        12644
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2428": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12632,
        12645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x988"
    },
    "2431": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12632,
        12645
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2432": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12632,
        12639
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12632,
        12645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2439": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12632,
        12645
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12632,
        12645
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2441": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x992"
    },
    "2444": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12645
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2445": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12629
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2446": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12645
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2449": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12616,
        12645
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2450": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12645
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2451": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99C"
    },
    "2454": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12685
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2455": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12685
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2456": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12685
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2459": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12616,
        12685
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2460": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12616,
        12685
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2461": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12595,
        12685
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2462": {
      "op": "POP"
    },
    "2463": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12595,
        12685
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2464": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12844,
        12851
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 23,
      "value": "0x278D00"
    },
    "2468": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12838,
        12843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2471": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12832
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2473": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12833,
        12836
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B3"
    },
    "2476": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12835,
        12836
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2478": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12833,
        12834
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2479": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12833,
        12836
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2482": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12833,
        12836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2483": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12833,
        12836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2484": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2485": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2486": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2487": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "LT",
      "path": "6"
    },
    "2488": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C3"
    },
    "2491": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2492": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9C3"
    },
    "2495": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1099"
    },
    "2498": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12811,
        12837
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2499": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2500": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2501": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2503": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2504": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2506": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2508": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2509": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "ADD",
      "path": "6"
    },
    "2510": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12811,
        12837
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2511": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12787
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2512": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D9"
    },
    "2515": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12837
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2516": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12837
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2517": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2520": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12771,
        12837
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2521": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2522": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9E3"
    },
    "2525": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12843
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2526": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12843
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2527": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "2530": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12771,
        12843
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2531": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2532": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12851
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9ED"
    },
    "2535": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12851
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2536": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12851
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2537": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12851
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "2540": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12771,
        12851
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2541": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12851
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2542": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9F7"
    },
    "2545": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12872
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2546": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12872
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2547": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2550": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12771,
        12872
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2551": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12771,
        12872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2552": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12735,
        12872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA01"
    },
    "2555": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12735,
        12872
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2556": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12735,
        12747
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2557": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12735,
        12872
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "2560": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        12735,
        12872
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2561": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12735,
        12872
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2562": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12720,
        12872
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2563": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12720,
        12872
      ],
      "op": "POP",
      "path": "6"
    },
    "2564": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12891,
        12896
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xA1A"
    },
    "2567": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12891,
        12896
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2568": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11755,
        12911
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2569": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 25
    },
    "2570": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA12"
    },
    "2573": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2574": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D1"
    },
    "2577": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        11728,
        11731
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2578": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2579": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2580": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "POP",
      "path": "6"
    },
    "2581": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11728,
        11731
      ],
      "op": "POP",
      "path": "6"
    },
    "2582": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x888"
    },
    "2585": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2586": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11678,
        12921
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13038,
        13048
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2589": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        12996,
        13018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2591": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2592": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2593": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2594": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13037
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2596": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2598": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2599": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2601": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2602": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13049
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2603": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13065
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2605": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13065
      ],
      "op": "ADD",
      "path": "6"
    },
    "2606": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13065
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2607": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13065
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2608": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13175,
        13204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA39"
    },
    "2611": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13021,
        13065
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2612": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13175,
        13187
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2613": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13175,
        13204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2616": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        13175,
        13204
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2617": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13175,
        13204
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2618": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        13148,
        13204
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "2619": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        11091,
        13264
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "2620": {
      "op": "POP"
    },
    "2621": {
      "op": "POP"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "op": "POP"
    },
    "2627": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        11091,
        13264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2628": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2631": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 26
    },
    "2642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2643": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "op": "NOT"
    },
    "2653": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2659": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "2661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2702": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2703": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2705": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2706": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2707": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2708": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7408,
        9619
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2709": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7672,
        7682
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 28
    },
    "2710": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7506,
        7513
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2712": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2713": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2714": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2715": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7671
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2717": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2719": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2720": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2721": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2722": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2724": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2725": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7683
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2726": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2727": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2728": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7699
      ],
      "op": "ADD",
      "path": "6"
    },
    "2729": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7655,
        7699
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2730": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7652
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2732": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7652
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2733": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7652
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2734": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7652
      ],
      "op": "ADD",
      "path": "6"
    },
    "2735": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7652
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2736": {
      "branch": 50,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7608,
        7699
      ],
      "op": "LT",
      "path": "6"
    },
    "2737": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAFC"
    },
    "2740": {
      "branch": 50,
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2741": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2743": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2752": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2755": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2757": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2758": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "ADD",
      "path": "6"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2764": {
      "op": "DUP3"
    },
    "2765": {
      "op": "ADD"
    },
    "2766": {
      "op": "MSTORE"
    },
    "2767": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "ADD"
    },
    "2804": {
      "op": "MSTORE"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x284"
    },
    "2811": {
      "op": "JUMP"
    },
    "2812": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7600,
        7749
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2813": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7983,
        7993
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2814": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7769,
        7790
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2816": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2817": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2818": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2819": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7982
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2821": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2823": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2824": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2825": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2826": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2828": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2829": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        7994
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2830": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        8010
      ],
      "op": "ADD",
      "path": "6"
    },
    "2831": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7966,
        8010
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2832": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7792,
        7801
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2833": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7792,
        7801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2834": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7769,
        7790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2835": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7769,
        7790
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2836": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7769,
        7790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2837": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8042,
        8043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2839": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2840": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8049,
        8070
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2842": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8049,
        8077
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2843": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8045,
        8077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2844": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8045,
        8077
      ],
      "op": "GT",
      "path": "6"
    },
    "2845": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA9"
    },
    "2848": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2849": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8166,
        8175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB2D"
    },
    "2852": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8174,
        8175
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2853": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8166,
        8173
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2857": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8166,
        8175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2860": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8166,
        8175
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2861": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8166,
        8175
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2862": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8143,
        8153
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2863": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2865": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2866": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2867": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2868": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2870": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2872": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2873": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2875": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2876": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8154
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2877": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8165
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "2879": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8165
      ],
      "op": "ADD",
      "path": "6"
    },
    "2880": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8165
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2881": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4A"
    },
    "2884": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8175
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2885": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8175
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2886": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8175
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "2889": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8126,
        8175
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2890": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8126,
        8175
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2891": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8109,
        8122
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2892": {
      "branch": 51,
      "fn": "LockContract.can_release_percent",
      "offset": [
        8109,
        8176
      ],
      "op": "GT",
      "path": "6"
    },
    "2893": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2894": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEC"
    },
    "2897": {
      "branch": 51,
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2898": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8377,
        8380
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0xB5C"
    },
    "2901": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8379,
        8380
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2903": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8377,
        8378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2904": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8377,
        8380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2907": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8377,
        8380
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2908": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8377,
        8380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2909": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8368,
        8381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB69"
    },
    "2912": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8368,
        8381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2913": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8368,
        8375
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2917": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8368,
        8381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2920": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8368,
        8381
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2921": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8368,
        8381
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2922": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB76"
    },
    "2925": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8365,
        8366
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2926": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8364
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "2930": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8366
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "2933": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8357,
        8366
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2934": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8366
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2935": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB80"
    },
    "2938": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8381
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2939": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8381
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2940": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2943": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8357,
        8381
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2944": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8357,
        8381
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2945": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8337,
        8381
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8337,
        8381
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2948": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8634,
        8641
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 30,
      "value": "0x278D00"
    },
    "2952": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8628,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "2955": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8622
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2957": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB97"
    },
    "2960": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8625,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2962": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8624
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2963": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "2966": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8623,
        8626
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2967": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8623,
        8626
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2968": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2969": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2970": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2971": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "LT",
      "path": "6"
    },
    "2972": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA7"
    },
    "2975": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2976": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA7"
    },
    "2979": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1099"
    },
    "2982": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2983": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2984": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2985": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2987": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2988": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2990": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2992": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2993": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "ADD",
      "path": "6"
    },
    "2994": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8601,
        8627
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2995": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8577
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2996": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBBD"
    },
    "2999": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3000": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3001": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "3004": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8627
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3005": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8627
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3006": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBC7"
    },
    "3009": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3010": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3011": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "3014": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8633
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3015": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8633
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3016": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD1"
    },
    "3019": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3020": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3021": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "3024": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8641
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3025": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8641
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3026": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBDB"
    },
    "3029": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3030": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3031": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "3034": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8561,
        8662
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3035": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8561,
        8662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3036": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE5"
    },
    "3039": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3040": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8537
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3041": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "3044": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8525,
        8662
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3045": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8525,
        8662
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3046": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8510,
        8662
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3047": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8510,
        8662
      ],
      "op": "POP",
      "path": "6"
    },
    "3048": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC97"
    },
    "3051": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3052": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3053": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9014,
        9024
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 31
    },
    "3054": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3056": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3057": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3058": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3059": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9013
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3061": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3063": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3064": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3066": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3067": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9025
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3068": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3070": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9036
      ],
      "op": "ADD",
      "path": "6"
    },
    "3071": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8997,
        9036
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3072": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8992,
        8995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC0A"
    },
    "3075": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8994,
        8995
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3077": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8992,
        8993
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3078": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8992,
        8995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3081": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8992,
        8995
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3082": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8992,
        8995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3083": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8983,
        8996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC17"
    },
    "3086": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8983,
        8996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3087": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8983,
        8990
      ],
      "op": "PUSH3",
      "path": "6",
      "value": "0x278D00"
    },
    "3091": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8983,
        8996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "3094": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8983,
        8996
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3095": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8983,
        8996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3096": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        8996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC21"
    },
    "3099": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        8996
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3100": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        8980
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3101": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        8996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3104": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8967,
        8996
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3105": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        8996
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3106": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        9036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC2B"
    },
    "3109": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        9036
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3110": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        9036
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3111": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        9036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3114": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8967,
        9036
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3115": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8967,
        9036
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3116": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8946,
        9036
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3117": {
      "op": "POP"
    },
    "3118": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8946,
        9036
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3119": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9195,
        9202
      ],
      "op": "PUSH3",
      "path": "6",
      "statement": 32,
      "value": "0x278D00"
    },
    "3123": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9189,
        9194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "3126": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9183
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3128": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC42"
    },
    "3131": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9186,
        9187
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3133": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9185
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3134": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3137": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9184,
        9187
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3138": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9187
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3139": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3140": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3141": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3142": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "LT",
      "path": "6"
    },
    "3143": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC52"
    },
    "3146": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3147": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC52"
    },
    "3150": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1099"
    },
    "3153": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9162,
        9188
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3154": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3155": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3156": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3158": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3159": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3161": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3163": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3164": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "ADD",
      "path": "6"
    },
    "3165": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9162,
        9188
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3166": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9138
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3167": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC68"
    },
    "3170": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9188
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3171": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9188
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3172": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9188
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "3175": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3176": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9188
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3177": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC72"
    },
    "3180": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9194
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3181": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9194
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3182": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "3185": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9122,
        9194
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3186": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9194
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3187": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7C"
    },
    "3190": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9202
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3191": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9202
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3192": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "3195": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9122,
        9202
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3196": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9202
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3197": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9223
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC86"
    },
    "3200": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9223
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3201": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3202": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9223
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1063"
    },
    "3205": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9122,
        9223
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3206": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9122,
        9223
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3207": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9086,
        9223
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC90"
    },
    "3210": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9086,
        9223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3211": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9086,
        9098
      ],
      "op": "DUP6",
      "path": "6"
    },
    "3212": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9086,
        9223
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102E"
    },
    "3215": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9086,
        9223
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3216": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9086,
        9223
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3217": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9071,
        9223
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3218": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9071,
        9223
      ],
      "op": "POP",
      "path": "6"
    },
    "3219": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9242,
        9247
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 33,
      "value": "0xCA9"
    },
    "3222": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9242,
        9247
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3223": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8106,
        9262
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3224": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 34
    },
    "3225": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA1"
    },
    "3228": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3229": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D1"
    },
    "3232": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        8079,
        8082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3233": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3234": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3235": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "POP",
      "path": "6"
    },
    "3236": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8079,
        8082
      ],
      "op": "POP",
      "path": "6"
    },
    "3237": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB17"
    },
    "3240": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3241": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8029,
        9272
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "DUP8",
      "path": "6"
    },
    "3252": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "AND",
      "path": "6"
    },
    "3253": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9347,
        9369
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3255": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3256": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3257": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3258": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9388
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3260": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3262": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3263": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3265": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3266": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9404
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3267": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9420
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3269": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9420
      ],
      "op": "ADD",
      "path": "6"
    },
    "3270": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9420
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3271": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9420
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3272": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9530,
        9559
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD1"
    },
    "3275": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9372,
        9420
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3276": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9530,
        9542
      ],
      "op": "DUP7",
      "path": "6"
    },
    "3277": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9530,
        9559
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1082"
    },
    "3280": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        9530,
        9559
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3281": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9530,
        9559
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3282": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9503,
        9559
      ],
      "op": "SWAP10",
      "path": "6"
    },
    "3283": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        7408,
        9619
      ],
      "op": "SWAP9",
      "path": "6"
    },
    "3284": {
      "op": "POP"
    },
    "3285": {
      "op": "POP"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "op": "POP"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "fn": "LockContract.can_release_percent",
      "jump": "o",
      "offset": [
        7408,
        9619
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3294": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3295": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x40"
    },
    "3297": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3298": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "op": "DUP5"
    },
    "3308": {
      "op": "AND"
    },
    "3309": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3311": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3312": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3316": {
      "op": "DUP1"
    },
    "3317": {
      "op": "DUP3"
    },
    "3318": {
      "op": "ADD"
    },
    "3319": {
      "op": "DUP5"
    },
    "3320": {
      "op": "SWAP1"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3323": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3324": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3325": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3326": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "3327": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3328": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3329": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3330": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3331": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3334": {
      "op": "SWAP1"
    },
    "3335": {
      "op": "SWAP2"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3338": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3340": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3343": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3344": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3345": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3352": {
      "op": "SHL"
    },
    "3353": {
      "op": "SUB"
    },
    "3354": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3355": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3362": {
      "op": "SHL"
    },
    "3363": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3364": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3365": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD30"
    },
    "3369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3372": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD35"
    },
    "3375": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3376": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3377": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3378": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3380": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3381": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3382": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD8A"
    },
    "3387": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3388": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3390": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3391": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3392": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3394": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3395": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3398": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3401": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3403": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "3442": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3449": {
      "op": "SHL"
    },
    "3450": {
      "op": "SUB"
    },
    "3451": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "3452": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE07"
    },
    "3455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3458": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3459": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3464": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "3465": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3468": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3469": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD30"
    },
    "3476": {
      "branch": 56,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3477": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 36
    },
    "3478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3487": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA8"
    },
    "3490": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1046"
    },
    "3495": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3496": {
      "branch": 57,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD30"
    },
    "3500": {
      "branch": 57,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3503": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3517": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3518": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3562": {
      "op": "DUP3"
    },
    "3563": {
      "op": "ADD"
    },
    "3564": {
      "op": "MSTORE"
    },
    "3565": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3581": {
      "op": "DUP3"
    },
    "3582": {
      "op": "ADD"
    },
    "3583": {
      "op": "MSTORE"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "3590": {
      "op": "JUMP"
    },
    "3591": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3592": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3594": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xE16"
    },
    "3597": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3598": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3599": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3601": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3602": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE20"
    },
    "3605": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3606": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3607": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3608": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "3609": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3610": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3611": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3612": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3613": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3614": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3615": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 38
    },
    "3620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "3622": {
      "branch": 52,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE81"
    },
    "3626": {
      "branch": 52,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3636": {
      "op": "SHL"
    },
    "3637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3645": {
      "op": "MSTORE"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "MSTORE"
    },
    "3653": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3688": {
      "op": "DUP3"
    },
    "3689": {
      "op": "ADD"
    },
    "3690": {
      "op": "MSTORE"
    },
    "3691": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3703": {
      "op": "DUP3"
    },
    "3704": {
      "op": "ADD"
    },
    "3705": {
      "op": "MSTORE"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "3712": {
      "op": "JUMP"
    },
    "3713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 39
    },
    "3723": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "3724": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xED8"
    },
    "3728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3743": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3747": {
      "op": "MSTORE"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3752": {
      "op": "DUP3"
    },
    "3753": {
      "op": "ADD"
    },
    "3754": {
      "op": "MSTORE"
    },
    "3755": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "3799": {
      "op": "JUMP"
    },
    "3800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3804": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "3814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3815": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3818": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF4"
    },
    "3822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3823": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111A"
    },
    "3827": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3833": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3834": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3836": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "3837": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3838": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3839": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3840": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "3841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "3842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3844": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "3852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF31"
    },
    "3855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3856": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3859": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3861": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3863": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "3864": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3867": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3868": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "3869": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "3884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF36"
    },
    "3888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "3900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0xA39"
    },
    "3903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3906": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3908": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3909": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3910": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF50"
    },
    "3913": {
      "branch": 53,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 42
    },
    "3916": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE19"
    },
    "3919": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3920": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3921": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3922": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3923": {
      "branch": 54,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3924": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF60"
    },
    "3927": {
      "branch": 54,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3928": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3929": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3930": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3931": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3932": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3934": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "3935": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3936": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3937": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 43
    },
    "3938": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3940": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3947": {
      "op": "SHL"
    },
    "3948": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3949": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3950": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3952": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "3953": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x284"
    },
    "3956": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3957": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3958": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1136"
    },
    "3961": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "DUP1"
    },
    "3964": {
      "op": "CALLDATALOAD"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3971": {
      "op": "SHL"
    },
    "3972": {
      "op": "SUB"
    },
    "3973": {
      "op": "DUP2"
    },
    "3974": {
      "op": "AND"
    },
    "3975": {
      "op": "DUP2"
    },
    "3976": {
      "op": "EQ"
    },
    "3977": {
      "op": "PUSH2",
      "value": "0xF91"
    },
    "3980": {
      "op": "JUMPI"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3983": {
      "op": "DUP1"
    },
    "3984": {
      "op": "REVERT"
    },
    "3985": {
      "op": "JUMPDEST"
    },
    "3986": {
      "op": "SWAP2"
    },
    "3987": {
      "op": "SWAP1"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "jump": "o",
      "op": "JUMP"
    },
    "3990": {
      "op": "JUMPDEST"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "op": "DUP3"
    },
    "3996": {
      "op": "DUP5"
    },
    "3997": {
      "op": "SUB"
    },
    "3998": {
      "op": "SLT"
    },
    "3999": {
      "op": "ISZERO"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA8"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "REVERT"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "PUSH2",
      "value": "0xE19"
    },
    "4012": {
      "op": "DUP3"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "4016": {
      "jump": "i",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "DUP1"
    },
    "4019": {
      "op": "ISZERO"
    },
    "4020": {
      "op": "ISZERO"
    },
    "4021": {
      "op": "DUP2"
    },
    "4022": {
      "op": "EQ"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "4026": {
      "op": "JUMPI"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "REVERT"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4039": {
      "op": "DUP5"
    },
    "4040": {
      "op": "DUP7"
    },
    "4041": {
      "op": "SUB"
    },
    "4042": {
      "op": "SLT"
    },
    "4043": {
      "op": "ISZERO"
    },
    "4044": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4047": {
      "op": "JUMPI"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "REVERT"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "DUP4"
    },
    "4054": {
      "op": "CALLDATALOAD"
    },
    "4055": {
      "op": "SWAP3"
    },
    "4056": {
      "op": "POP"
    },
    "4057": {
      "op": "PUSH2",
      "value": "0xFE4"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4062": {
      "op": "DUP6"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xF7A"
    },
    "4067": {
      "jump": "i",
      "op": "JUMP"
    },
    "4068": {
      "op": "JUMPDEST"
    },
    "4069": {
      "op": "SWAP2"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4073": {
      "op": "DUP5"
    },
    "4074": {
      "op": "ADD"
    },
    "4075": {
      "op": "CALLDATALOAD"
    },
    "4076": {
      "op": "PUSH2",
      "value": "0xFF4"
    },
    "4079": {
      "op": "DUP2"
    },
    "4080": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4083": {
      "jump": "i",
      "op": "JUMP"
    },
    "4084": {
      "op": "JUMPDEST"
    },
    "4085": {
      "op": "DUP1"
    },
    "4086": {
      "op": "SWAP2"
    },
    "4087": {
      "op": "POP"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "SWAP3"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "SWAP3"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "SWAP3"
    },
    "4094": {
      "jump": "o",
      "op": "JUMP"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "DUP3"
    },
    "4101": {
      "op": "DUP5"
    },
    "4102": {
      "op": "SUB"
    },
    "4103": {
      "op": "SLT"
    },
    "4104": {
      "op": "ISZERO"
    },
    "4105": {
      "op": "PUSH2",
      "value": "0x1011"
    },
    "4108": {
      "op": "JUMPI"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4111": {
      "op": "DUP1"
    },
    "4112": {
      "op": "REVERT"
    },
    "4113": {
      "op": "JUMPDEST"
    },
    "4114": {
      "op": "POP"
    },
    "4115": {
      "op": "MLOAD"
    },
    "4116": {
      "op": "SWAP2"
    },
    "4117": {
      "op": "SWAP1"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "jump": "o",
      "op": "JUMP"
    },
    "4120": {
      "op": "JUMPDEST"
    },
    "4121": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4131": {
      "op": "MSTORE"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4141": {
      "op": "REVERT"
    },
    "4142": {
      "op": "JUMPDEST"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4145": {
      "op": "DUP3"
    },
    "4146": {
      "op": "NOT"
    },
    "4147": {
      "op": "DUP3"
    },
    "4148": {
      "op": "GT"
    },
    "4149": {
      "op": "ISZERO"
    },
    "4150": {
      "op": "PUSH2",
      "value": "0x1041"
    },
    "4153": {
      "op": "JUMPI"
    },
    "4154": {
      "op": "PUSH2",
      "value": "0x1041"
    },
    "4157": {
      "op": "PUSH2",
      "value": "0x1018"
    },
    "4160": {
      "jump": "i",
      "op": "JUMP"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "POP"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "SWAP1"
    },
    "4165": {
      "jump": "o",
      "op": "JUMP"
    },
    "4166": {
      "op": "JUMPDEST"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "DUP5"
    },
    "4173": {
      "op": "SUB"
    },
    "4174": {
      "op": "SLT"
    },
    "4175": {
      "op": "ISZERO"
    },
    "4176": {
      "op": "PUSH2",
      "value": "0x1058"
    },
    "4179": {
      "op": "JUMPI"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4182": {
      "op": "DUP1"
    },
    "4183": {
      "op": "REVERT"
    },
    "4184": {
      "op": "JUMPDEST"
    },
    "4185": {
      "op": "DUP2"
    },
    "4186": {
      "op": "MLOAD"
    },
    "4187": {
      "op": "PUSH2",
      "value": "0xE19"
    },
    "4190": {
      "op": "DUP2"
    },
    "4191": {
      "op": "PUSH2",
      "value": "0xFB1"
    },
    "4194": {
      "jump": "i",
      "op": "JUMP"
    },
    "4195": {
      "op": "JUMPDEST"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4198": {
      "op": "DUP2"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4201": {
      "op": "NOT"
    },
    "4202": {
      "op": "DIV"
    },
    "4203": {
      "op": "DUP4"
    },
    "4204": {
      "op": "GT"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "ISZERO"
    },
    "4207": {
      "op": "ISZERO"
    },
    "4208": {
      "op": "AND"
    },
    "4209": {
      "op": "ISZERO"
    },
    "4210": {
      "op": "PUSH2",
      "value": "0x107D"
    },
    "4213": {
      "op": "JUMPI"
    },
    "4214": {
      "op": "PUSH2",
      "value": "0x107D"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1018"
    },
    "4220": {
      "jump": "i",
      "op": "JUMP"
    },
    "4221": {
      "op": "JUMPDEST"
    },
    "4222": {
      "op": "POP"
    },
    "4223": {
      "op": "MUL"
    },
    "4224": {
      "op": "SWAP1"
    },
    "4225": {
      "jump": "o",
      "op": "JUMP"
    },
    "4226": {
      "op": "JUMPDEST"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4229": {
      "op": "DUP3"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "LT"
    },
    "4232": {
      "op": "ISZERO"
    },
    "4233": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4236": {
      "op": "JUMPI"
    },
    "4237": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x1018"
    },
    "4243": {
      "jump": "i",
      "op": "JUMP"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "POP"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "op": "SWAP1"
    },
    "4248": {
      "jump": "o",
      "op": "JUMP"
    },
    "4249": {
      "op": "JUMPDEST"
    },
    "4250": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4257": {
      "op": "SHL"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4260": {
      "op": "MSTORE"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4265": {
      "op": "MSTORE"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4270": {
      "op": "REVERT"
    },
    "4271": {
      "op": "JUMPDEST"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4278": {
      "op": "JUMPI"
    },
    "4279": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4286": {
      "op": "SHL"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "MSTORE"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4294": {
      "op": "MSTORE"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4299": {
      "op": "REVERT"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "POP"
    },
    "4302": {
      "op": "DIV"
    },
    "4303": {
      "op": "SWAP1"
    },
    "4304": {
      "jump": "o",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4315": {
      "op": "JUMPI"
    },
    "4316": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4319": {
      "op": "PUSH2",
      "value": "0x1018"
    },
    "4322": {
      "jump": "i",
      "op": "JUMP"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "jump": "o",
      "op": "JUMP"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "JUMPDEST"
    },
    "4334": {
      "op": "DUP4"
    },
    "4335": {
      "op": "DUP2"
    },
    "4336": {
      "op": "LT"
    },
    "4337": {
      "op": "ISZERO"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x1105"
    },
    "4341": {
      "op": "JUMPI"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "DUP2"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "MLOAD"
    },
    "4346": {
      "op": "DUP4"
    },
    "4347": {
      "op": "DUP3"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4352": {
      "op": "ADD"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x10ED"
    },
    "4356": {
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "DUP4"
    },
    "4359": {
      "op": "DUP2"
    },
    "4360": {
      "op": "GT"
    },
    "4361": {
      "op": "ISZERO"
    },
    "4362": {
      "op": "PUSH2",
      "value": "0x1114"
    },
    "4365": {
      "op": "JUMPI"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4368": {
      "op": "DUP5"
    },
    "4369": {
      "op": "DUP5"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "JUMPDEST"
    },
    "4373": {
      "op": "POP"
    },
    "4374": {
      "op": "POP"
    },
    "4375": {
      "op": "POP"
    },
    "4376": {
      "op": "POP"
    },
    "4377": {
      "jump": "o",
      "op": "JUMP"
    },
    "4378": {
      "op": "JUMPDEST"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4381": {
      "op": "DUP3"
    },
    "4382": {
      "op": "MLOAD"
    },
    "4383": {
      "op": "PUSH2",
      "value": "0x112C"
    },
    "4386": {
      "op": "DUP2"
    },
    "4387": {
      "op": "DUP5"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4390": {
      "op": "DUP8"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4395": {
      "jump": "i",
      "op": "JUMP"
    },
    "4396": {
      "op": "JUMPDEST"
    },
    "4397": {
      "op": "SWAP2"
    },
    "4398": {
      "op": "SWAP1"
    },
    "4399": {
      "op": "SWAP2"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "SWAP3"
    },
    "4402": {
      "op": "SWAP2"
    },
    "4403": {
      "op": "POP"
    },
    "4404": {
      "op": "POP"
    },
    "4405": {
      "jump": "o",
      "op": "JUMP"
    },
    "4406": {
      "op": "JUMPDEST"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "MSTORE"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4413": {
      "op": "DUP3"
    },
    "4414": {
      "op": "MLOAD"
    },
    "4415": {
      "op": "DUP1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4418": {
      "op": "DUP5"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "op": "MSTORE"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4424": {
      "op": "DUP2"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4427": {
      "op": "DUP6"
    },
    "4428": {
      "op": "ADD"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "DUP8"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x10EA"
    },
    "4436": {
      "jump": "i",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4440": {
      "op": "ADD"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4443": {
      "op": "NOT"
    },
    "4444": {
      "op": "AND"
    },
    "4445": {
      "op": "SWAP2"
    },
    "4446": {
      "op": "SWAP1"
    },
    "4447": {
      "op": "SWAP2"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "SWAP3"
    },
    "4453": {
      "op": "SWAP2"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "POP"
    },
    "4456": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "45f56d1e2008b5fb0795114a491fbf8ec9f1ffd4",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context, Ownable  {\n\n    //Token\n    IERC20 public legacy_token;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Investor) public walletToInvestor;\n\n    //Structs\n    struct Investor {\n        address investor_address;// probably can take it out\n\n        uint256 tokens_received;// amount of tokens the Investor has received\n\n        uint256 tokens_promised;// amount of tokens the Investor is owed\n\n        uint256 lock_start;// saves the date of the initial locking of the contract\n\n        bool under250k_investor;// if true than it is an investor between 50k-250k, if false it is 250k+\n    }\n\n    //Variables\n    address[] investor_address;// array with all the investor aaddresses\n    address[] addresses_O50I;\n    address[] addresses_O250I;\n    uint256[] tokens_O50I;\n    uint256[] tokens_O250I;\n    uint256[] percent_per_milestone;//percentages per month that will be released (in basis points)\n    uint256 initLock;// initial lock period \n    uint256 erc20Released;// total amount of released tokens\n    uint256 numMilestones;// number of milestones (number of payments for each Investor)\n    uint256 num_O50I;// number of under 50k token vested investors\n    uint256 num_O250I;// number of over 50k token vested investors\n    uint256 totalTokens_O50I;// total tokens promised to investors with 50k-250k tokens vested\n    uint256 totalTokens_O250I;// total tokens promised to investors with more than 250k tokens vested\n    address tokenAddress;// token address\n    bool internal locked;   // boolean to prevent reentrancy\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        address[] memory _addresses_O50I,\n        address[] memory _addresses_O250I,\n        uint256[] memory _tokens_O50I,\n        uint256[] memory _tokens_O250I,\n        uint256[] memory _percent_per_milestone,\n        uint256 _tokens_O50ITotal,// sum all the tokens for the investors with with 50k-250k tokens vested\n        uint256 _tokens_O250ITotal,// ... more than 250k tokens\n        address _tokenAddress\n    ) {\n\n        initLock = block.timestamp;\n\n        // percentage of tokens an investor can withdraw at each milestone\n        percent_per_milestone = _percent_per_milestone;\n\n        // number of investors with...\n        num_O50I = _addresses_O50I.length;// with 50k-250k tokens vested\n        num_O250I = _addresses_O250I.length;// more than 250k tokens vested\n\n        // array of addresses of investors with ...\n        addresses_O50I= _addresses_O50I;// with 50k-250k tokens vested\n        addresses_O250I= _addresses_O250I;// more than 250k tokens vested\n\n        // array of tokens promised to investors with ...\n        tokens_O50I = _tokens_O50I;// with 50k-250k tokens vested\n        tokens_O250I = _tokens_O250I;// more than 250k tokens vested\n\n        // total tokens promised to investors with ...\n        totalTokens_O50I = _tokens_O50ITotal;// with 50k-250k tokens vested\n        totalTokens_O250I = _tokens_O250ITotal;// more than 250k tokens vested\n\n        // create an Investor struct for each investor with less than 50k tokens\n        for (uint i=0; i<num_O50I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O50I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O50I[i];\n            uint256 _investor_tokens = tokens_O50I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp, \n                                                true);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // create an Investor struct for each investor with more than 250k tokens\n        for (uint i=0; i<num_O250I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O250I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O250I[i];\n            uint256 _investor_tokens = tokens_O250I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp, \n                                                false);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // establish token address\n        tokenAddress = _tokenAddress;\n\n        // establish the IERC20 for legacy token to contract interactions\n        legacy_token = IERC20(_tokenAddress);\n\n        // Initialize the reentrancy variable to not locked\n        locked = false;\n\n    }\n\n\n    // Modifiers\n    /**\n     * @dev Prevents reentrancy\n     */\n    modifier noReentrant() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n     * @dev Only investors can call functions\n     */\n    modifier onlyInvestor() {\n        require(walletToInvestor[msg.sender].tokens_promised != 0, \"Not an investor\");\n        _;\n    }\n\n    /**\n     * @dev Release the tokens \n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual noReentrant() onlyInvestor(){\n        uint256 releasable = can_release_percent(msg.sender, uint256(block.timestamp));\n        erc20Released += releasable;\n        emit ERC20Released(tokenAddress, releasable);\n        SafeERC20.safeTransfer(IERC20(tokenAddress), msg.sender, releasable);\n        walletToInvestor[msg.sender].tokens_received += releasable;\n    }\n\n\n    /**\n     * @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     * Updates the investor struct with the amount of tokens he has withdrawn.\n     */\n    function can_release_percent(address _callerAddress, uint256 timestamp) internal virtual returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[msg.sender].tokens_received < walletToInvestor[msg.sender].tokens_promised, \n                \"All tokens have been claimed\");\n        \n\n        uint256 _current_time =timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > (walletToInvestor[msg.sender].lock_start+2592000*i)){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-walletToInvestor[msg.sender].lock_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[_callerAddress].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev Adds a new Investor.\n     */\n    function new_Investor(uint256 _amount, address _newInvestor_address, bool _under250K) public {\n\n        //require that the owner has enough legacy tokens to satisfy the promised tokens for locking\n        require(legacy_token.balanceOf(_newInvestor_address)>= _amount, \n        \"You don't have enough Legacy tokens for the price requirement.\");\n\n        require(walletToInvestor[_newInvestor_address].tokens_promised== 0, \n        \"This address is already in the vesting contract.\");\n\n        // transfer the tokens to the contract\n        legacy_token.transferFrom(_newInvestor_address, address(this), _amount);\n\n        if(_under250K){\n            addresses_O50I.push(_newInvestor_address);\n            tokens_O50I.push(_amount);\n        }else{\n            addresses_O250I.push();\n            tokens_O250I.push(_amount);\n        }\n\n        // create the new Investor struc\n        Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                uint64(block.timestamp),\n                                                true);\n        // push the new Investor structto the Investors arra\n        walletToInvestor[_newInvestor_address]=investor;  \n    }\n\n    /**\n     * @dev View function that an investor can use to see how many tokens he can withdraw\n     */\n    function view_can_release_percent() public view returns (uint256) {\n\n        // require that the investor has not already withdrawn everything\n        require(walletToInvestor[msg.sender].tokens_received < walletToInvestor[msg.sender].tokens_promised, \n                \"All tokens have been claimed\");\n        \n\n        uint256 _current_time = block.timestamp;\n\n        uint256 _can_release = 0;  //Sum them all up in a variable called **can_elease**\n        uint256 _second_in_bracket = 0;\n\n        uint _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n        \n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            if(_current_time > (walletToInvestor[msg.sender].lock_start+2592000*i)){\n                //Check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // For each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-walletToInvestor[msg.sender].lock_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n\n        //Get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[msg.sender].tokens_received;\n\n        //Get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        //return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev View function to get contract balance\n     */\n    function contract_balance() public view returns (uint256) {\n        return legacy_token.balanceOf(address(this));\n    }\n\n    function get_initLock() public view returns(uint256){\n        return initLock;\n    }\n}",
  "sourceMap": "846:12701:6:-:0;;;2593:3706;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;3048:15:6;3037:8;:26;3149:46;;;;:21;;:46;;;;;:::i;:::-;-1:-1:-1;3256:22:6;;3245:8;:33;;;3330:23;;3318:9;:35;3447:31;;:14;;:31;;;;;:::i;:::-;-1:-1:-1;3518:33:6;;;;:15;;:33;;;;;:::i;:::-;-1:-1:-1;3651:26:6;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;3717:28:6;;;;:12;;:28;;;;;:::i;:::-;-1:-1:-1;3842:16:6;:36;;;3918:17;:38;;;-1:-1:-1;4079:918:6;4096:8;;4094:1;:10;4079:918;;;4220:1;-1:-1:-1;;;;;4191:31:6;:14;4206:1;4191:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4191:17:6;:31;4183:117;;;;-1:-1:-1;;;4183:117:6;;4003:2:7;4183:117:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;4183:117:6;;;;;;;;;4402:25;4430:14;4445:1;4430:17;;;;;;;;:::i;:::-;;;;;;;;;;4488:11;:14;;-1:-1:-1;;;;;4430:17:6;;;;-1:-1:-1;4488:11:6;4500:1;;4488:14;;;;;;:::i;:::-;;;;;;;;;;;;;;4601:267;;;;;;;;-1:-1:-1;;;;;4601:267:6;;;;;;;;;;;;;;;;;;4797:15;4601:267;;;;;;4863:4;4601:267;;;;;;4941:35;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;4941:44:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4941:44:6;;;;;;;;;;;-1:-1:-1;4106:3:6;;;;:::i;:::-;;;;4079:918;;;;5094:6;5089:923;5106:9;;5104:1;:11;5089:923;;;5232:1;-1:-1:-1;;;;;5202:32:6;:15;5218:1;5202:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5202:18:6;:32;5194:118;;;;-1:-1:-1;;;5194:118:6;;4003:2:7;5194:118:6;;;3985:21:7;4042:2;4022:18;;;4015:30;-1:-1:-1;;;;;;;;;;;4061:18:7;;;4054:62;4152:22;4132:18;;;4125:50;4192:19;;5194:118:6;3801:416:7;5194:118:6;5414:25;5442:15;5458:1;5442:18;;;;;;;;:::i;:::-;;;;;;;;;;5501:12;:15;;-1:-1:-1;;;;;5442:18:6;;;;-1:-1:-1;5501:12:6;5514:1;;5501:15;;;;;;:::i;:::-;;;;;;;;;;;;;;5615:268;;;;;;;;-1:-1:-1;;;;;5615:268:6;;;;;;;;;;;;;;;;;;5811:15;5615:268;;;;;;;;;;;;5956:35;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;5956:44:6;;;;;;;;;;;-1:-1:-1;5956:44:6;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5956:44:6;;;;;;;;;;;-1:-1:-1;5117:3:6;;;;:::i;:::-;;;;5089:923;;;-1:-1:-1;6057:12:6;:28;;;6170:36;;-1:-1:-1;;;;;;6170:36:6;-1:-1:-1;;;;;6057:28:6;;;6170:36;;;;;-1:-1:-1;;;;;;6277:14:6;;;;;;-1:-1:-1;846:12701:6;;-1:-1:-1;;;;;;846:12701:6;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;846:12701:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;846:12701:6;;;-1:-1:-1;846:12701:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;846:12701:6;-1:-1:-1;;;;;846:12701:6;;;;;;;;;;;-1:-1:-1;846:12701:6;;;;;;;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:7;247:40;;-1:-1:-1;;;;;302:34:7;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:7:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:7;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:7;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:7;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:7;796:683;-1:-1:-1;;;;;;796:683:7:o;1484:659::-;1549:5;1602:3;1595:4;1587:6;1583:17;1579:27;1569:55;;1620:1;1617;1610:12;1569:55;1649:6;1643:13;1675:4;1699:60;1715:43;1755:2;1715:43;:::i;1699:60::-;1793:15;;;1879:1;1875:10;;;;1863:23;;1859:32;;;1824:12;;;;1903:15;;;1900:35;;;1931:1;1928;1921:12;1900:35;1967:2;1959:6;1955:15;1979:135;1995:6;1990:3;1987:15;1979:135;;;2061:10;;2049:23;;2092:12;;;;2012;;1979:135;;2148:1516;2406:6;2414;2422;2430;2438;2446;2454;2462;2515:3;2503:9;2494:7;2490:23;2486:33;2483:53;;;2532:1;2529;2522:12;2483:53;2559:16;;-1:-1:-1;;;;;2624:14:7;;;2621:34;;;2651:1;2648;2641:12;2621:34;2674:72;2738:7;2729:6;2718:9;2714:22;2674:72;:::i;:::-;2664:82;;2792:2;2781:9;2777:18;2771:25;2755:41;;2821:2;2811:8;2808:16;2805:36;;;2837:1;2834;2827:12;2805:36;2860:74;2926:7;2915:8;2904:9;2900:24;2860:74;:::i;:::-;2850:84;;2980:2;2969:9;2965:18;2959:25;2943:41;;3009:2;2999:8;2996:16;2993:36;;;3025:1;3022;3015:12;2993:36;3048:74;3114:7;3103:8;3092:9;3088:24;3048:74;:::i;:::-;3038:84;;3168:2;3157:9;3153:18;3147:25;3131:41;;3197:2;3187:8;3184:16;3181:36;;;3213:1;3210;3203:12;3181:36;3236:74;3302:7;3291:8;3280:9;3276:24;3236:74;:::i;:::-;3226:84;;3356:3;3345:9;3341:19;3335:26;3319:42;;3386:2;3376:8;3373:16;3370:36;;;3402:1;3399;3392:12;3370:36;;3425:74;3491:7;3480:8;3469:9;3465:24;3425:74;:::i;:::-;3415:84;;;3539:3;3528:9;3524:19;3518:26;3508:36;;3584:3;3573:9;3569:19;3563:26;3553:36;;3608:50;3653:3;3642:9;3638:19;3608:50;:::i;:::-;3598:60;;2148:1516;;;;;;;;;;;:::o;3669:127::-;3730:10;3725:3;3721:20;3718:1;3711:31;3761:4;3758:1;3751:15;3785:4;3782:1;3775:15;4222:232;4261:3;4282:17;;;4279:140;;4341:10;4336:3;4332:20;4329:1;4322:31;4376:4;4373:1;4366:15;4404:4;4401:1;4394:15;4279:140;-1:-1:-1;4446:1:7;4435:13;;4222:232::o;:::-;846:12701:6;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}