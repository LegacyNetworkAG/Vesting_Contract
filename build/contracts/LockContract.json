{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses_O50I",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addresses_O250I",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O50I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokens_O250I",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percent_per_milestone",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O50ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens_O250ITotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLock_O50I",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeLock_O250I",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contract_balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_initLock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legacy_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_newInvestor_address",
          "type": "address"
        }
      ],
      "name": "new_Investor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "view_can_release_percent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "walletToInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "investor_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens_received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokens_promised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vesting_start",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "under250k_investor",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/LockContract.sol"
  },
  "ast": {
    "absolutePath": "contracts/LockContract.sol",
    "exportedSymbols": {
      "Address": [
        1453
      ],
      "Context": [
        1475
      ],
      "IERC20": [
        1553
      ],
      "LockContract": [
        829
      ],
      "Ownable": [
        934
      ],
      "SafeERC20": [
        1158
      ]
    },
    "id": 830,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:5"
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 1159,
        "src": "132:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 1454,
        "src": "198:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 1476,
        "src": "250:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Joao/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 830,
        "sourceUnit": 935,
        "src": "302:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1475,
              "src": "817:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "817:7:5"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 934,
              "src": "826:7:5"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "826:7:5"
          }
        ],
        "canonicalName": "LockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "356:435:5",
          "text": " @title LockContract\n @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n have the same length and are iterated by the _milestone variable"
        },
        "fullyImplemented": true,
        "id": 829,
        "linearizedBaseContracts": [
          829,
          934,
          1475
        ],
        "name": "LockContract",
        "nameLocation": "801:12:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "df129979",
            "id": 13,
            "mutability": "mutable",
            "name": "legacy_token",
            "nameLocation": "868:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "854:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1553",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1553,
                "src": "854:6:5"
              },
              "referencedDeclaration": 1553,
              "src": "854:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1553",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
            "id": 19,
            "name": "ERC20Released",
            "nameLocation": "906:13:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "936:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "920:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "952:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "944:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:40:5"
            },
            "src": "900:60:5"
          },
          {
            "constant": false,
            "functionSelector": "92347b5e",
            "id": 24,
            "mutability": "mutable",
            "name": "walletToInvestor",
            "nameLocation": "1017:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "981:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
              "typeString": "mapping(address => struct LockContract.Investor)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "989:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "981:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                "typeString": "mapping(address => struct LockContract.Investor)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "Investor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "1000:8:5"
                },
                "referencedDeclaration": 35,
                "src": "1000:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                  "typeString": "struct LockContract.Investor"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LockContract.Investor",
            "id": 35,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "investor_address",
                "nameLocation": "1088:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1080:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1080:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "tokens_received",
                "nameLocation": "1150:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1142:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1142:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "tokens_promised",
                "nameLocation": "1229:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1221:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1221:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "vesting_start",
                "nameLocation": "1303:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1295:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1295:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "under250k_investor",
                "nameLocation": "1388:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "1383:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1383:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Investor",
            "nameLocation": "1061:8:5",
            "nodeType": "StructDefinition",
            "scope": 829,
            "src": "1054:431:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "investor_address",
            "nameLocation": "1517:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1507:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1507:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 37,
              "nodeType": "ArrayTypeName",
              "src": "1507:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "addresses_O50I",
            "nameLocation": "1590:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1580:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 39,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40,
              "nodeType": "ArrayTypeName",
              "src": "1580:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "addresses_O250I",
            "nameLocation": "1620:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1610:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1610:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "1610:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "tokens_O50I",
            "nameLocation": "1651:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1641:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 45,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1641:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 46,
              "nodeType": "ArrayTypeName",
              "src": "1641:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "tokens_O250I",
            "nameLocation": "1678:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1668:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1668:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 49,
              "nodeType": "ArrayTypeName",
              "src": "1668:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "percent_per_milestone",
            "nameLocation": "1706:21:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1696:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1696:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 52,
              "nodeType": "ArrayTypeName",
              "src": "1696:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "initLock",
            "nameLocation": "1804:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1796:16:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1796:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "erc20Released",
            "nameLocation": "1849:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1841:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1841:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "numMilestones",
            "nameLocation": "1910:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1902:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1902:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 61,
            "mutability": "mutable",
            "name": "num_O50I",
            "nameLocation": "1999:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "1991:16:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1991:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "num_O250I",
            "nameLocation": "2066:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2058:17:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 62,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2058:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "totalTokens_O50I",
            "nameLocation": "2133:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2125:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 64,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2125:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 67,
            "mutability": "mutable",
            "name": "totalTokens_O250I",
            "nameLocation": "2228:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2220:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 66,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2220:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 69,
            "mutability": "mutable",
            "name": "timeLock_O50I",
            "nameLocation": "2330:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2322:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2322:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 71,
            "mutability": "mutable",
            "name": "timeLock_O250I",
            "nameLocation": "2444:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2436:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 70,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2436:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "2521:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2513:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 72,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2513:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 75,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "2569:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 829,
            "src": "2555:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 74,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2555:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "3992:3613:5",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "initLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4160:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 105,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4171:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4171:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4160:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:26:5"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4272:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_percent_per_milestone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "4296:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4272:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:46:5"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "4368:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 114,
                        "name": "_addresses_O50I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "4379:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4379:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4368:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "4368:33:5"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "4441:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 119,
                        "name": "_addresses_O250I",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "4453:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4453:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4441:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:35:5"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "4570:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "_addresses_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "4586:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "4570:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:31:5"
                },
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 127,
                      "name": "addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4641:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 128,
                      "name": "_addresses_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "4658:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "4641:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:33:5"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "4774:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_tokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "4788:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4774:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:26:5"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "4840:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 136,
                      "name": "_tokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "4855:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4840:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:28:5"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139,
                      "name": "totalTokens_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4965:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 140,
                      "name": "_tokens_O50ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "4984:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4965:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "4965:36:5"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "totalTokens_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "5041:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 144,
                      "name": "_tokens_O250ITotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "5061:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5041:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "5041:38:5"
                },
                {
                  "body": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "5233:904:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 158,
                                  "name": "addresses_O50I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "5314:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 160,
                                "indexExpression": {
                                  "id": 159,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "5329:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5314:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5343:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 162,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5335:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 161,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5335:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5335:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5314:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5368:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 157,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5306:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5306:117:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "5306:117:5"
                      },
                      {
                        "assignments": [
                          170
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 170,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "5533:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 201,
                            "src": "5525:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5525:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 174,
                        "initialValue": {
                          "baseExpression": {
                            "id": 171,
                            "name": "addresses_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "5553:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "id": 172,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "5568:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5553:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5525:45:5"
                      },
                      {
                        "assignments": [
                          176
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 176,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "5592:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 201,
                            "src": "5584:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 175,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5584:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 180,
                        "initialValue": {
                          "baseExpression": {
                            "id": 177,
                            "name": "tokens_O50I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5611:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 179,
                          "indexExpression": {
                            "id": 178,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "5623:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5611:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5584:41:5"
                      },
                      {
                        "assignments": [
                          183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 183,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "5713:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 201,
                            "src": "5697:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 182,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 181,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "5697:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "5697:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 194,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 185,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "5733:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5801:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 187,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "5853:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 188,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5920:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5920:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 190,
                                "name": "_timeLock_O50I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 97,
                                "src": "5938:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5920:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6003:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 184,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5724:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5724:284:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5697:311:5"
                      },
                      {
                        "expression": {
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 195,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "6081:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 197,
                            "indexExpression": {
                              "id": 196,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "6098:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6081:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 198,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "6117:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "6081:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "6081:44:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "5217:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 152,
                      "name": "num_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "5219:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5217:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 202,
                  "initializationExpression": {
                    "assignments": [
                      148
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5212:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "5207:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5207:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 150,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5214:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5207:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5229:3:5",
                      "subExpression": {
                        "id": 154,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "5229:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 156,
                    "nodeType": "ExpressionStatement",
                    "src": "5229:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5202:935:5"
                },
                {
                  "body": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "6261:909:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 214,
                                  "name": "addresses_O250I",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "6342:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 216,
                                "indexExpression": {
                                  "id": 215,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "6358:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6342:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6372:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6364:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 217,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6364:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6364:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6342:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e7374727563746f723a206c6f636b656420496e766573746f722061646472657373206973207a65726f2061646472657373",
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6397:54:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              },
                              "value": "Constructor: locked Investor address is zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5bb1914cc74a42b59fcf21f56bafb92cb01b19602a672ceb4d58e13f2ed280e",
                                "typeString": "literal_string \"Constructor: locked Investor address is zero address\""
                              }
                            ],
                            "id": 213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6334:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6334:118:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "6334:118:5"
                      },
                      {
                        "assignments": [
                          226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 226,
                            "mutability": "mutable",
                            "name": "_investor_address",
                            "nameLocation": "6562:17:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 257,
                            "src": "6554:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6554:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 230,
                        "initialValue": {
                          "baseExpression": {
                            "id": 227,
                            "name": "addresses_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "6582:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 229,
                          "indexExpression": {
                            "id": 228,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "6598:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6582:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6554:46:5"
                      },
                      {
                        "assignments": [
                          232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 232,
                            "mutability": "mutable",
                            "name": "_investor_tokens",
                            "nameLocation": "6622:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 257,
                            "src": "6614:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 231,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6614:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 236,
                        "initialValue": {
                          "baseExpression": {
                            "id": 233,
                            "name": "tokens_O250I",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "6641:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 235,
                          "indexExpression": {
                            "id": 234,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "6654:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6641:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6614:42:5"
                      },
                      {
                        "assignments": [
                          239
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 239,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "6744:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 257,
                            "src": "6728:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 238,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 237,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "6728:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "6728:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 250,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 241,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "6764:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6832:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 243,
                              "name": "_investor_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "6884:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 244,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6951:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6951:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 246,
                                "name": "_timeLock_O250I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "6969:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6951:33:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7035:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 240,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "6755:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6755:286:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6728:313:5"
                      },
                      {
                        "expression": {
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 251,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "7114:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 253,
                            "indexExpression": {
                              "id": 252,
                              "name": "_investor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "7131:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7114:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 254,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "7150:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "7114:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 256,
                        "nodeType": "ExpressionStatement",
                        "src": "7114:44:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 207,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "6244:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 208,
                      "name": "num_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "6246:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6244:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 258,
                  "initializationExpression": {
                    "assignments": [
                      204
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6239:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "6234:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6234:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 206,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6241:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6234:8:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6257:3:5",
                      "subExpression": {
                        "id": 210,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "6257:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 212,
                    "nodeType": "ExpressionStatement",
                    "src": "6257:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6229:941:5"
                },
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 259,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7215:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 260,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "7230:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7215:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "7215:28:5"
                },
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 263,
                      "name": "legacy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "7328:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1553",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 265,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "7350:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 264,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "7343:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1553_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7343:21:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1553",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "7328:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1553",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "7328:36:5"
                },
                {
                  "expression": {
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 269,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "7435:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7444:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7435:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "7435:14:5"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "timeLock_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "7526:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 274,
                      "name": "_timeLock_O50I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "7542:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7526:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "7526:30:5"
                },
                {
                  "expression": {
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 277,
                      "name": "timeLock_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "7566:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 278,
                      "name": "_timeLock_O250I",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "7583:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7566:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "7566:32:5"
                }
              ]
            },
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "2633:95:5",
              "text": " @dev Set the beneficiary, start timestamp and locking durations and amounts."
            },
            "id": 282,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_addresses_O50I",
                  "nameLocation": "2771:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2754:32:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2754:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78,
                    "nodeType": "ArrayTypeName",
                    "src": "2754:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_addresses_O250I",
                  "nameLocation": "2881:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2864:33:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2864:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 81,
                    "nodeType": "ArrayTypeName",
                    "src": "2864:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_tokens_O50I",
                  "nameLocation": "2996:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "2979:29:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 83,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2979:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 84,
                    "nodeType": "ArrayTypeName",
                    "src": "2979:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_tokens_O250I",
                  "nameLocation": "3171:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3154:30:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3154:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87,
                    "nodeType": "ArrayTypeName",
                    "src": "3154:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_percent_per_milestone",
                  "nameLocation": "3349:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3332:39:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3332:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 90,
                    "nodeType": "ArrayTypeName",
                    "src": "3332:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_tokens_O50ITotal",
                  "nameLocation": "3606:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3598:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_tokens_O250ITotal",
                  "nameLocation": "3713:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3705:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_timeLock_O50I",
                  "nameLocation": "3778:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3770:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3770:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_timeLock_O250I",
                  "nameLocation": "3876:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3868:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3868:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "3938:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 282,
                  "src": "3930:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3930:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2744:1247:5"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3992:0:5"
            },
            "scope": 829,
            "src": "2733:4872:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "7700:109:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7718:7:5",
                        "subExpression": {
                          "id": 286,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "7719:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072652d656e7472616e6379",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7727:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        },
                        "value": "No re-entrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7710:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7710:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "7710:34:5"
                },
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 291,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "7754:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7763:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7754:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "7754:13:5"
                },
                {
                  "id": 295,
                  "nodeType": "PlaceholderStatement",
                  "src": "7777:1:5"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "7788:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7797:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7788:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:14:5"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "7629:43:5",
              "text": " @dev Prevents reentrancy"
            },
            "id": 301,
            "name": "noReentrant",
            "nameLocation": "7686:11:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7697:2:5"
            },
            "src": "7677:132:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "7901:105:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 305,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "7919:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 308,
                            "indexExpression": {
                              "expression": {
                                "id": 306,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7936:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7936:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7919:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "7919:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7967:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7919:49:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20696e766573746f72",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7970:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        },
                        "value": "Not an investor"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a65bc890e808c95b87fa0dd318cf77a65d1d15a3faec34d5b7c433e23edb1b2",
                          "typeString": "literal_string \"Not an investor\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7911:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7911:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "7911:77:5"
                },
                {
                  "id": 315,
                  "nodeType": "PlaceholderStatement",
                  "src": "7998:1:5"
                }
              ]
            },
            "documentation": {
              "id": 302,
              "nodeType": "StructuredDocumentation",
              "src": "7815:57:5",
              "text": " @dev Only investors can call functions"
            },
            "id": 317,
            "name": "onlyInvestor",
            "nameLocation": "7886:12:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7898:2:5"
            },
            "src": "7877:129:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "8167:593:5",
              "statements": [
                {
                  "assignments": [
                    326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "releasable",
                      "nameLocation": "8249:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "8241:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8241:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 336,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8282:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8282:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 332,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8302:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8302:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8294:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 330,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8294:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8294:24:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 327,
                      "name": "can_release_percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "8262:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8262:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8241:78:5"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 337,
                      "name": "erc20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "8387:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 338,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "8404:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8387:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "8387:27:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 342,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "8470:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "8484:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 341,
                      "name": "ERC20Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "8456:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8456:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "EmitStatement",
                  "src": "8451:44:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 350,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "8583:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 349,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1553,
                          "src": "8576:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1553_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8576:20:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1553",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8598:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8598:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 354,
                        "name": "releasable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "8610:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1553",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 346,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "8553:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1158_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 965,
                      "src": "8553:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1553_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8553:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "8553:68:5"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 357,
                          "name": "walletToInvestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "8695:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                            "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                          }
                        },
                        "id": 360,
                        "indexExpression": {
                          "expression": {
                            "id": 358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8712:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8712:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8695:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Investor_$35_storage",
                          "typeString": "struct LockContract.Investor storage ref"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens_received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8695:44:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 362,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "8743:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8695:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "8695:58:5"
                }
              ]
            },
            "documentation": {
              "id": 318,
              "nodeType": "StructuredDocumentation",
              "src": "8012:88:5",
              "text": " @dev Release the tokens \n Emits a {ERC20Released} event."
            },
            "functionSelector": "86d1a69f",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 321,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 320,
                  "name": "noReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 301,
                  "src": "8139:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "8139:13:5"
              },
              {
                "arguments": [],
                "id": 323,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 322,
                  "name": "onlyInvestor",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 317,
                  "src": "8153:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "8153:14:5"
              }
            ],
            "name": "release",
            "nameLocation": "8114:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8121:2:5"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8167:0:5"
            },
            "scope": 829,
            "src": "8105:655:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "9083:2703:5",
              "statements": [
                {
                  "assignments": [
                    377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "9167:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "9159:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 376,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9159:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 378,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "9184:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "9201:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9184:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "9184:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9159:73:5"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "9296:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "9288:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9288:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 385,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "9315:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "id": 386,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "9332:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9315:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "9315:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9288:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 391,
                          "name": "_has_withdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "9456:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 392,
                          "name": "_tokens_promised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "9473:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9456:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9491:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9448:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9448:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "9448:74:5"
                },
                {
                  "assignments": [
                    398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 398,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "9582:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "9574:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9574:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 400,
                  "initialValue": {
                    "id": 399,
                    "name": "_timestamp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 371,
                    "src": "9598:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9574:34:5"
                },
                {
                  "assignments": [
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "_vesting_start",
                      "nameLocation": "9689:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "9681:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9681:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 407,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 403,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "9706:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 405,
                      "indexExpression": {
                        "id": 404,
                        "name": "_callerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "9723:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9706:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vesting_start",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "9706:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9681:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 409,
                          "name": "_current_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "9868:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 410,
                          "name": "_vesting_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "9884:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9868:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2074696d6520686173206e6f742070617373656420796574",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9900:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        },
                        "value": "Lock time has not passed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9860:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9860:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "9860:71:5"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "10022:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "10014:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10014:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 418,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10037:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10014:24:5"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "10166:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "10158:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10158:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 422,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10187:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10158:30:5"
                },
                {
                  "body": {
                    "id": 508,
                    "nodeType": "Block",
                    "src": "10365:1221:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 434,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "10471:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 435,
                                  "name": "_vesting_start",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 402,
                                  "src": "10488:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10503:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 437,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 424,
                                    "src": "10511:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10503:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10488:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 440,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10487:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10471:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 506,
                          "nodeType": "Block",
                          "src": "11191:385:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 474,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "11285:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 475,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "11306:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 481,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 476,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11322:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 479,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 477,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 424,
                                              "src": "11331:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 478,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11333:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "11331:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 480,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11330:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11322:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11306:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 483,
                                    "name": "_vesting_start",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 402,
                                    "src": "11336:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11306:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11285:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 486,
                              "nodeType": "ExpressionStatement",
                              "src": "11285:65:5"
                            },
                            {
                              "expression": {
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 487,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "11385:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 488,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 416,
                                    "src": "11400:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 497,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 495,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 489,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 384,
                                            "src": "11436:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 490,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "11476:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 494,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 493,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 491,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 424,
                                                "src": "11498:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 492,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11500:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "11498:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "11476:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11436:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 496,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11503:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "11436:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 498,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11509:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "11436:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 500,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 420,
                                      "src": "11519:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11436:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11400:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11385:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 504,
                              "nodeType": "ExpressionStatement",
                              "src": "11385:152:5"
                            },
                            {
                              "id": 505,
                              "nodeType": "Break",
                              "src": "11556:5:5"
                            }
                          ]
                        },
                        "id": 507,
                        "nodeType": "IfStatement",
                        "src": "10468:1108:5",
                        "trueBody": {
                          "id": 473,
                          "nodeType": "Block",
                          "src": "10514:673:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 442,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "10676:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 452,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10696:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 444,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 424,
                                      "src": "10704:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10696:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 446,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10707:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 449,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 447,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 424,
                                            "src": "10716:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 448,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10718:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "10716:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 450,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "10715:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10707:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10696:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10676:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 454,
                              "nodeType": "ExpressionStatement",
                              "src": "10676:44:5"
                            },
                            {
                              "expression": {
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 455,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "10849:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 456,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 416,
                                    "src": "10864:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 467,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 465,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 463,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 457,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 384,
                                            "src": "10900:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 458,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "10940:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 462,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 461,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 459,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 424,
                                                "src": "10962:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 460,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10964:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "10962:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10940:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10900:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 464,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10967:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "10900:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 466,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10973:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "10900:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 468,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 420,
                                      "src": "10983:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10900:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10864:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10849:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 472,
                              "nodeType": "ExpressionStatement",
                              "src": "10849:152:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 427,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "10327:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 428,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "10331:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10331:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10327:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 509,
                  "initializationExpression": {
                    "assignments": [
                      424
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10320:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 509,
                        "src": "10315:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10315:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 426,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10324:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10315:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10361:3:5",
                      "subExpression": {
                        "id": 431,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "10361:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 433,
                    "nodeType": "ExpressionStatement",
                    "src": "10361:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "10311:1275:5"
                },
                {
                  "assignments": [
                    511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 511,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "11677:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 518,
                      "src": "11669:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11669:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 515,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 512,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "11696:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 513,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "11711:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11696:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11669:56:5"
                },
                {
                  "expression": {
                    "id": 516,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 511,
                    "src": "11763:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 375,
                  "id": 517,
                  "nodeType": "Return",
                  "src": "11755:24:5"
                }
              ]
            },
            "documentation": {
              "id": 367,
              "nodeType": "StructuredDocumentation",
              "src": "8767:203:5",
              "text": " @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n Updates the investor struct with the amount of tokens he has withdrawn."
            },
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "can_release_percent",
            "nameLocation": "8984:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "_callerAddress",
                  "nameLocation": "9012:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "9004:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9004:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "9036:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "9028:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9028:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9003:44:5"
            },
            "returnParameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "9074:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9074:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9073:9:5"
            },
            "scope": 829,
            "src": "8975:2811:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "11917:2015:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 528,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "11997:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_50000000000000000000_by_1",
                            "typeString": "int_const 50000000000000000000"
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3530",
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12008:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12011:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12015:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "12011:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "12008:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000000000000000000_by_1",
                            "typeString": "int_const 50000000000000000000"
                          }
                        },
                        "src": "11997:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520696e766573746f722073686f756c64206c6f636b206174206c656173742035306b20746f6b656e732e",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12019:47:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b59ddada13a9ff4cf514fe158a34eaff3a3d91e37f68a481e8bfa8b37a5f6817",
                          "typeString": "literal_string \"The investor should lock at least 50k tokens.\""
                        },
                        "value": "The investor should lock at least 50k tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b59ddada13a9ff4cf514fe158a34eaff3a3d91e37f68a481e8bfa8b37a5f6817",
                          "typeString": "literal_string \"The investor should lock at least 50k tokens.\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11988:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11988:79:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "11988:79:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 541,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "12211:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 539,
                              "name": "legacy_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "12188:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1553",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1492,
                            "src": "12188:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12188:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 543,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "12235:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12188:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b656e7320666f722074686520707269636520726571756972656d656e742e",
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12253:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        },
                        "value": "You don't have enough Legacy tokens for the price requirement."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f65fab9d25217b6bc2cbb6538c3829d0d8e9c9e3e9199a4de6f762af2c33ad3",
                          "typeString": "literal_string \"You don't have enough Legacy tokens for the price requirement.\""
                        }
                      ],
                      "id": 538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12180:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12180:138:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "12180:138:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 549,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "12390:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 551,
                            "indexExpression": {
                              "id": 550,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "12407:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12390:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokens_promised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "12390:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12447:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12390:58:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320697320616c726561647920696e207468652076657374696e6720636f6e74726163742e",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12459:50:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        },
                        "value": "This address is already in the vesting contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88ae559799db412cb7fc3cb29e4d7016f762631eba1406ef6eb43e752a21a8",
                          "typeString": "literal_string \"This address is already in the vesting contract.\""
                        }
                      ],
                      "id": 548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12382:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12382:128:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "12382:128:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 561,
                        "name": "_newInvestor_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "12594:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 564,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12624:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$829",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$829",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12616:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 562,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12616:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12616:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 566,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "12631:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 558,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "12568:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1553",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "12568:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12568:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "12568:71:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 569,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "12653:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12664:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12667:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12671:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "12667:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "12664:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      },
                      "src": "12653:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 576,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "12677:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_250000000000000000000_by_1",
                          "typeString": "int_const 250000000000000000000"
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323530",
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12687:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_250_by_1",
                            "typeString": "int_const 250"
                          },
                          "value": "250"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12691:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12695:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "12691:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "12687:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_250000000000000000000_by_1",
                          "typeString": "int_const 250000000000000000000"
                        }
                      },
                      "src": "12677:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12653:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "13314:612:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 620,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "13349:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 617,
                              "name": "addresses_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "13328:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13328:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13328:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
                        "src": "13328:42:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 626,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "13402:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 623,
                              "name": "tokens_O250I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "13384:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "13384:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13384:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 628,
                        "nodeType": "ExpressionStatement",
                        "src": "13384:26:5"
                      },
                      {
                        "assignments": [
                          631
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 631,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "13486:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "13470:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 630,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 629,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "13470:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "13470:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 642,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 633,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "13506:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13577:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 635,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "13629:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 636,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "13687:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "13687:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 638,
                                "name": "timeLock_O250I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "13705:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13687:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13779:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 632,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "13497:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13497:287:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13470:314:5"
                      },
                      {
                        "expression": {
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 643,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "13866:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 645,
                            "indexExpression": {
                              "id": 644,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "13883:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13866:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 646,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "13905:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "13866:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 648,
                        "nodeType": "ExpressionStatement",
                        "src": "13866:47:5"
                      }
                    ]
                  },
                  "id": 650,
                  "nodeType": "IfStatement",
                  "src": "12650:1276:5",
                  "trueBody": {
                    "id": 616,
                    "nodeType": "Block",
                    "src": "12698:612:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 587,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "12732:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 584,
                              "name": "addresses_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "12712:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12712:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12712:41:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "12712:41:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 593,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "12784:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 590,
                              "name": "tokens_O50I",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "12767:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "12767:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12767:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "12767:25:5"
                      },
                      {
                        "assignments": [
                          598
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 598,
                            "mutability": "mutable",
                            "name": "investor",
                            "nameLocation": "12868:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 616,
                            "src": "12852:24:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor"
                            },
                            "typeName": {
                              "id": 597,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 596,
                                "name": "Investor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 35,
                                "src": "12852:8:5"
                              },
                              "referencedDeclaration": 35,
                              "src": "12852:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$35_storage_ptr",
                                "typeString": "struct LockContract.Investor"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 609,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "12888:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12959:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 602,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "13011:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 603,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "13069:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "13069:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 605,
                                "name": "timeLock_O50I",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "13087:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13069:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13150:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 599,
                            "name": "Investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "12879:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Investor_$35_storage_ptr_$",
                              "typeString": "type(struct LockContract.Investor storage pointer)"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12879:276:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                            "typeString": "struct LockContract.Investor memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12852:303:5"
                      },
                      {
                        "expression": {
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 610,
                              "name": "walletToInvestor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "13237:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                                "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "id": 611,
                              "name": "_newInvestor_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "13254:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13237:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_storage",
                              "typeString": "struct LockContract.Investor storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 613,
                            "name": "investor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "13276:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$35_memory_ptr",
                              "typeString": "struct LockContract.Investor memory"
                            }
                          },
                          "src": "13237:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Investor_$35_storage",
                            "typeString": "struct LockContract.Investor storage ref"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "13237:47:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 520,
              "nodeType": "StructuredDocumentation",
              "src": "11792:44:5",
              "text": " @dev Adds a new Investor."
            },
            "functionSelector": "4fb4190e",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "new_Investor",
            "nameLocation": "11850:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11871:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "11863:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11863:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "_newInvestor_address",
                  "nameLocation": "11888:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "11880:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11880:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11862:47:5"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11917:0:5"
            },
            "scope": 829,
            "src": "11841:2091:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "14110:2700:5",
              "statements": [
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "_has_withdrawn",
                      "nameLocation": "14194:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "14186:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14186:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 665,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 660,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "14211:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 663,
                      "indexExpression": {
                        "expression": {
                          "id": 661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14228:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14228:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14211:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_received",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28,
                    "src": "14211:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14186:69:5"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "_tokens_promised",
                      "nameLocation": "14319:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "14311:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14311:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 673,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 668,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "14338:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 671,
                      "indexExpression": {
                        "expression": {
                          "id": 669,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14355:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14355:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14338:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokens_promised",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 30,
                    "src": "14338:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14311:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 675,
                          "name": "_has_withdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "14475:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 676,
                          "name": "_tokens_promised",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "14492:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14475:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c20746f6b656e732068617665206265656e20636c61696d6564",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14510:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        },
                        "value": "All tokens have been claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73d38c6632a7df3b120a1631099d58089e4e721b76e9b9fcce1747a37523510b",
                          "typeString": "literal_string \"All tokens have been claimed\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14467:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14467:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "14467:74:5"
                },
                {
                  "assignments": [
                    682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "_current_time",
                      "nameLocation": "14601:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "14593:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14593:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "expression": {
                      "id": 683,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "14617:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "14617:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14593:39:5"
                },
                {
                  "assignments": [
                    687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 687,
                      "mutability": "mutable",
                      "name": "_vesting_start",
                      "nameLocation": "14713:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "14705:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14705:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 688,
                        "name": "walletToInvestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "14730:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Investor_$35_storage_$",
                          "typeString": "mapping(address => struct LockContract.Investor storage ref)"
                        }
                      },
                      "id": 691,
                      "indexExpression": {
                        "expression": {
                          "id": 689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14747:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14747:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14730:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Investor_$35_storage",
                        "typeString": "struct LockContract.Investor storage ref"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "vesting_start",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "14730:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14705:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 695,
                          "name": "_current_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 682,
                          "src": "14888:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 696,
                          "name": "_vesting_start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "14904:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14888:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f636b2074696d6520686173206e6f742070617373656420796574",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14920:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        },
                        "value": "Lock time has not passed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f5e3abeb37306d4ae5bbdbd40fdbc92765e2f6a5bdbef0e00c6689b9d165e6e",
                          "typeString": "literal_string \"Lock time has not passed yet\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14880:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14880:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "14880:71:5"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "_can_release",
                      "nameLocation": "15042:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "15034:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15034:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15057:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15034:24:5"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "_second_in_bracket",
                      "nameLocation": "15186:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "15178:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15178:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15207:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15178:30:5"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "15389:1221:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 720,
                            "name": "_current_time",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "15495:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 721,
                                  "name": "_vesting_start",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "15512:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32353932303030",
                                    "id": 722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15527:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2592000_by_1",
                                      "typeString": "int_const 2592000"
                                    },
                                    "value": "2592000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 723,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 710,
                                    "src": "15535:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15527:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15512:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 726,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15511:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15495:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 792,
                          "nodeType": "Block",
                          "src": "16215:385:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 760,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 706,
                                  "src": "16309:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 768,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 761,
                                      "name": "_current_time",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "16330:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 762,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16346:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 765,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 763,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 710,
                                              "src": "16355:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 764,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "16357:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "16355:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 766,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "16354:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16346:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16330:29:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 769,
                                    "name": "_vesting_start",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "16360:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16330:44:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16309:65:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 772,
                              "nodeType": "ExpressionStatement",
                              "src": "16309:65:5"
                            },
                            {
                              "expression": {
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 773,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "16409:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 774,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 702,
                                    "src": "16424:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 785,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 783,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 781,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 775,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 667,
                                            "src": "16460:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 776,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "16500:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 780,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 779,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 777,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 710,
                                                "src": "16522:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 778,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "16524:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "16522:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "16500:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "16460:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 782,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16527:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "16460:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 784,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16533:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "16460:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 786,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 706,
                                      "src": "16543:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "16460:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16424:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16409:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 790,
                              "nodeType": "ExpressionStatement",
                              "src": "16409:152:5"
                            },
                            {
                              "id": 791,
                              "nodeType": "Break",
                              "src": "16580:5:5"
                            }
                          ]
                        },
                        "id": 793,
                        "nodeType": "IfStatement",
                        "src": "15492:1108:5",
                        "trueBody": {
                          "id": 759,
                          "nodeType": "Block",
                          "src": "15538:673:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 728,
                                  "name": "_second_in_bracket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 706,
                                  "src": "15700:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15720:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 730,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 710,
                                      "src": "15728:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15720:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 737,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32353932303030",
                                      "id": 732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15731:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2592000_by_1",
                                        "typeString": "int_const 2592000"
                                      },
                                      "value": "2592000"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 735,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 733,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 710,
                                            "src": "15740:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 734,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15742:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "15740:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 736,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "15739:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15731:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15720:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15700:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 740,
                              "nodeType": "ExpressionStatement",
                              "src": "15700:44:5"
                            },
                            {
                              "expression": {
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 741,
                                  "name": "_can_release",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "15873:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 742,
                                    "name": "_can_release",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 702,
                                    "src": "15888:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 753,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 751,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 749,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 743,
                                            "name": "_tokens_promised",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 667,
                                            "src": "15924:16:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "baseExpression": {
                                              "id": 744,
                                              "name": "percent_per_milestone",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "15964:21:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                "typeString": "uint256[] storage ref"
                                              }
                                            },
                                            "id": 748,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 747,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 745,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 710,
                                                "src": "15986:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 746,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15988:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "15986:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15964:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "15924:66:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "3130303030",
                                          "id": 750,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15991:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10000"
                                        },
                                        "src": "15924:72:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "32353932303030",
                                        "id": 752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15997:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2592000_by_1",
                                          "typeString": "int_const 2592000"
                                        },
                                        "value": "2592000"
                                      },
                                      "src": "15924:80:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 754,
                                      "name": "_second_in_bracket",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 706,
                                      "src": "16007:18:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15924:101:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15888:137:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15873:152:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 758,
                              "nodeType": "ExpressionStatement",
                              "src": "15873:152:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "15351:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 714,
                        "name": "percent_per_milestone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "15355:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15355:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15351:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 795,
                  "initializationExpression": {
                    "assignments": [
                      710
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15344:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "15339:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15339:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 712,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15348:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15339:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15385:3:5",
                      "subExpression": {
                        "id": 717,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "15385:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 719,
                    "nodeType": "ExpressionStatement",
                    "src": "15385:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "15335:1275:5"
                },
                {
                  "assignments": [
                    797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "_able_to_release",
                      "nameLocation": "16701:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "16693:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16693:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 801,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 798,
                      "name": "_can_release",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 702,
                      "src": "16720:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 799,
                      "name": "_has_withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "16735:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16720:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16693:56:5"
                },
                {
                  "expression": {
                    "id": 802,
                    "name": "_able_to_release",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 797,
                    "src": "16787:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 657,
                  "id": 803,
                  "nodeType": "Return",
                  "src": "16779:24:5"
                }
              ]
            },
            "documentation": {
              "id": 653,
              "nodeType": "StructuredDocumentation",
              "src": "13938:101:5",
              "text": " @dev View function that an investor can use to see how many tokens he can withdraw"
            },
            "functionSelector": "f5cd7277",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "view_can_release_percent",
            "nameLocation": "14053:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14077:2:5"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "14101:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14101:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14100:9:5"
            },
            "scope": 829,
            "src": "14044:2766:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "16940:61:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 815,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16988:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockContract_$829",
                              "typeString": "contract LockContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockContract_$829",
                              "typeString": "contract LockContract"
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16980:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16980:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16980:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 811,
                        "name": "legacy_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "16957:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1553",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1492,
                      "src": "16957:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16957:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 810,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "16950:44:5"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "16816:61:5",
              "text": " @dev View function to get contract balance"
            },
            "functionSelector": "057440d3",
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contract_balance",
            "nameLocation": "16891:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16907:2:5"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "16931:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16931:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16930:9:5"
            },
            "scope": 829,
            "src": "16882:119:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "17059:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 825,
                    "name": "initLock",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "17076:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 824,
                  "id": 826,
                  "nodeType": "Return",
                  "src": "17069:15:5"
                }
              ]
            },
            "functionSelector": "910d25ba",
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_initLock",
            "nameLocation": "17016:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17028:2:5"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "17051:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17051:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17050:9:5"
            },
            "scope": 829,
            "src": "17007:84:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 830,
        "src": "792:16301:5",
        "usedErrors": []
      }
    ],
    "src": "107:16986:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001b8638038062001b86833981016040819052620000349162000703565b6200003f336200048a565b42600955855162000058906008906020890190620004da565b508951600c8190558951600d55620000789060049060208d01906200052a565b5088516200008e9060059060208c01906200052a565b508751620000a49060069060208b0190620004da565b508651620000ba9060079060208a0190620004da565b50600e859055600f84905560005b600c54811015620002875760006001600160a01b031660048281548110620000f457620000f46200081f565b6000918252602090912001546001600160a01b031603620001715760405162461bcd60e51b8152602060048201526034602482015260008051602062001b6683398151915260448201527f72657373206973207a65726f206164647265737300000000000000000000000060648201526084015b60405180910390fd5b6000600482815481106200018957620001896200081f565b6000918252602082200154600680546001600160a01b0390921693509084908110620001b957620001b96200081f565b9060005260206000200154905060006040518060a00160405280846001600160a01b03168152602001600081526020018381526020018842620001fd91906200084b565b8152600160209182018190526001600160a01b0395861660009081526002808452604091829020855181546001600160a01b031916991698909817885592840151918701919091558201519085015560608101516003850155608001516004909301805460ff191693151593909317909255508190506200027e8162000866565b915050620000c8565b5060005b600d54811015620004415760006001600160a01b031660058281548110620002b757620002b76200081f565b6000918252602090912001546001600160a01b031603620003305760405162461bcd60e51b8152602060048201526034602482015260008051602062001b6683398151915260448201527f72657373206973207a65726f2061646472657373000000000000000000000000606482015260840162000168565b6000600582815481106200034857620003486200081f565b6000918252602082200154600780546001600160a01b03909216935090849081106200037857620003786200081f565b9060005260206000200154905060006040518060a00160405280846001600160a01b03168152602001600081526020018381526020018742620003bc91906200084b565b8152600060209182018190526001600160a01b0395861681526002808352604091829020845181546001600160a01b03191698169790971787559183015160018701558201519085015560608101516003850155608001516004909301805460ff19169315159390931790925550819050620004388162000866565b9150506200028b565b5060128054600180546001600160a01b0319166001600160a01b0390941693841790556001600160a81b0319169091179055601091909155601155506200088295505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821562000518579160200282015b8281111562000518578251825591602001919060010190620004fb565b506200052692915062000582565b5090565b82805482825590600052602060002090810192821562000518579160200282015b828111156200051857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200054b565b5b8082111562000526576000815560010162000583565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005da57620005da62000599565b604052919050565b60006001600160401b03821115620005fe57620005fe62000599565b5060051b60200190565b80516001600160a01b03811681146200062057600080fd5b919050565b600082601f8301126200063757600080fd5b81516020620006506200064a83620005e2565b620005af565b82815260059290921b840181019181810190868411156200067057600080fd5b8286015b848110156200069657620006888162000608565b835291830191830162000674565b509695505050505050565b600082601f830112620006b357600080fd5b81516020620006c66200064a83620005e2565b82815260059290921b84018101918181019086841115620006e657600080fd5b8286015b84811015620006965780518352918301918301620006ea565b6000806000806000806000806000806101408b8d0312156200072457600080fd5b8a516001600160401b03808211156200073c57600080fd5b6200074a8e838f0162000625565b9b5060208d01519150808211156200076157600080fd5b6200076f8e838f0162000625565b9a5060408d01519150808211156200078657600080fd5b620007948e838f01620006a1565b995060608d0151915080821115620007ab57600080fd5b620007b98e838f01620006a1565b985060808d0151915080821115620007d057600080fd5b50620007df8d828e01620006a1565b96505060a08b0151945060c08b0151935060e08b015192506101008b015191506200080e6101208c0162000608565b90509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562000861576200086162000835565b500190565b6000600182016200087b576200087b62000835565b5060010190565b6112d480620008926000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063910d25ba11610066578063910d25ba1461010857806392347b5e14610110578063df1299791461018e578063f2fde38b146101a1578063f5cd7277146101b457600080fd5b8063057440d3146100a35780634fb4190e146100be578063715018a6146100d357806386d1a69f146100db5780638da5cb5b146100e3575b600080fd5b6100ab6101bc565b6040519081526020015b60405180910390f35b6100d16100cc3660046110e8565b61022e565b005b6100d1610675565b6100d16106db565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b6009546100ab565b61015a61011e366004611114565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100b5565b6001546100f0906001600160a01b031681565b6100d16101af366004611114565b610841565b6100ab61090c565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610229919061112f565b905090565b6802b5e3af16b18800008210156102a25760405162461bcd60e51b815260206004820152602d60248201527f54686520696e766573746f722073686f756c64206c6f636b206174206c65617360448201526c3a101a9835903a37b5b2b7399760991b60648201526084015b60405180910390fd5b6001546040516370a0823160e01b81526001600160a01b038381166004830152849216906370a0823190602401602060405180830381865afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610310919061112f565b10156103845760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610299565b6001600160a01b03811660009081526002602081905260409091200154156104075760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610299565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190611148565b506802b5e3af16b188000082101580156104a65750680d8d726b7177a8000082105b156105cb576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03841690811790915560068054928301815560009081527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9092018490556040805160a08101825291825260208201839052810184905260105460608201906105559042611180565b8152600160209182018190526001600160a01b0394851660009081526002808452604091829020855181546001600160a01b031916981697909717875592840151918601919091558201519084015560608101516003840155608001516004909201805460ff1916921515929092179091555050565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03841690811790915560078054928301815560009081527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889092018490556040805160a08101825291825260208201839052810184905260115460608201906105559042611180565b6000546001600160a01b031633146106cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610299565b6106d96000610b64565b565b601254600160a01b900460ff16156107265760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610299565b6012805460ff60a01b1916600160a01b17905533600090815260026020819052604082200154900361078c5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030b71034b73b32b9ba37b960891b6044820152606401610299565b60006107983342610bb4565b905080600a60008282546107ac9190611180565b90915550506012546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a260125461080a906001600160a01b03163383610e20565b336000908152600260205260408120600101805483929061082c908490611180565b90915550506012805460ff60a01b1916905550565b6000546001600160a01b0316331461089b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610299565b6001600160a01b0381166109005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610299565b61090981610b64565b50565b336000908152600260208190526040822060018101549101548082106109745760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610299565b3360009081526002602052604090206003015442908082116109d85760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610299565b60008060015b6008548111610b4b576109f48162278d00611198565b6109fe9085611180565b851115610aa057610a106001826111b7565b610a1d9062278d00611198565b610a2a8262278d00611198565b610a3491906111b7565b91508162278d006127106008610a4b6001866111b7565b81548110610a5b57610a5b6111ce565b906000526020600020015489610a719190611198565b610a7b91906111e4565b610a8591906111e4565b610a8f9190611198565b610a999084611180565b9250610b39565b83610aac6001836111b7565b610ab99062278d00611198565b610ac390876111b7565b610acd91906111b7565b91508162278d006127106008610ae46001866111b7565b81548110610af457610af46111ce565b906000526020600020015489610b0a9190611198565b610b1491906111e4565b610b1e91906111e4565b610b289190611198565b610b329084611180565b9250610b4b565b80610b4381611206565b9150506109de565b506000610b5887846111b7565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216600090815260026020819052604082206001810154910154808210610c255760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610299565b6001600160a01b0385166000908152600260205260409020600301548490808211610c925760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610299565b60008060015b6008548111610e0557610cae8162278d00611198565b610cb89085611180565b851115610d5a57610cca6001826111b7565b610cd79062278d00611198565b610ce48262278d00611198565b610cee91906111b7565b91508162278d006127106008610d056001866111b7565b81548110610d1557610d156111ce565b906000526020600020015489610d2b9190611198565b610d3591906111e4565b610d3f91906111e4565b610d499190611198565b610d539084611180565b9250610df3565b83610d666001836111b7565b610d739062278d00611198565b610d7d90876111b7565b610d8791906111b7565b91508162278d006127106008610d9e6001866111b7565b81548110610dae57610dae6111ce565b906000526020600020015489610dc49190611198565b610dce91906111e4565b610dd891906111e4565b610de29190611198565b610dec9084611180565b9250610e05565b80610dfd81611206565b915050610c98565b506000610e1287846111b7565b9a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e72908490610e77565b505050565b6000610ecc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f499092919063ffffffff16565b805190915015610e725780806020019051810190610eea9190611148565b610e725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610299565b6060610f588484600085610f62565b90505b9392505050565b606082471015610fc35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610299565b6001600160a01b0385163b61101a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610299565b600080866001600160a01b03168587604051611036919061124f565b60006040518083038185875af1925050503d8060008114611073576040519150601f19603f3d011682016040523d82523d6000602084013e611078565b606091505b5091509150611088828286611093565b979650505050505050565b606083156110a2575081610f5b565b8251156110b25782518084602001fd5b8160405162461bcd60e51b8152600401610299919061126b565b80356001600160a01b03811681146110e357600080fd5b919050565b600080604083850312156110fb57600080fd5b8235915061110b602084016110cc565b90509250929050565b60006020828403121561112657600080fd5b610f5b826110cc565b60006020828403121561114157600080fd5b5051919050565b60006020828403121561115a57600080fd5b81518015158114610f5b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156111935761119361116a565b500190565b60008160001904831182151516156111b2576111b261116a565b500290565b6000828210156111c9576111c961116a565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261120157634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016112185761121861116a565b5060010190565b60005b8381101561123a578181015183820152602001611222565b83811115611249576000848401525b50505050565b6000825161126181846020870161121f565b9190910192915050565b602081526000825180602084015261128a81604085016020870161121f565b601f01601f1916919091016040019291505056fea2646970667358221220eea15d5c37f5f5660c180fe78639a20ea2187335280a25c3a1948148c588fc7264736f6c634300080f0033436f6e7374727563746f723a206c6f636b656420496e766573746f7220616464",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "LockContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "62": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "63": [
            3735,
            3756,
            false
          ],
          "64": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "59": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "60": [
            7735,
            7742,
            false
          ],
          "61": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "LockContract.can_release_percent": {
          "56": [
            9456,
            9489,
            true
          ],
          "57": [
            9868,
            9898,
            true
          ],
          "58": [
            10471,
            10513,
            false
          ]
        },
        "LockContract.new_Investor": {
          "47": [
            11997,
            12017,
            true
          ],
          "48": [
            12188,
            12242,
            true
          ],
          "49": [
            12390,
            12448,
            true
          ],
          "50": [
            12653,
            12673,
            false
          ],
          "51": [
            12677,
            12697,
            false
          ]
        },
        "LockContract.release": {
          "52": [
            7919,
            7968,
            true
          ]
        },
        "LockContract.view_can_release_percent": {
          "53": [
            14475,
            14508,
            true
          ],
          "54": [
            14888,
            14918,
            true
          ],
          "55": [
            15495,
            15537,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "28": [
            2378,
            2395
          ],
          "29": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "13": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "18": [
            1998,
            2071
          ],
          "19": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "39": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "38": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "40": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "41": [
            5137,
            5218
          ],
          "43": [
            5228,
            5288
          ],
          "44": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "42": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "45": [
            7758,
            7775
          ],
          "46": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "12": [
            712,
            729
          ]
        }
      },
      "5": {
        "LockContract.can_release_percent": {
          "30": [
            9448,
            9522
          ],
          "31": [
            9860,
            9931
          ],
          "32": [
            10676,
            10720
          ],
          "33": [
            10849,
            11001
          ],
          "34": [
            11285,
            11350
          ],
          "35": [
            11385,
            11537
          ],
          "36": [
            11556,
            11561
          ],
          "37": [
            10361,
            10364
          ]
        },
        "LockContract.contract_balance": {
          "2": [
            16950,
            16994
          ]
        },
        "LockContract.get_initLock": {
          "1": [
            17069,
            17084
          ]
        },
        "LockContract.new_Investor": {
          "3": [
            11988,
            12067
          ],
          "4": [
            12180,
            12318
          ],
          "5": [
            12382,
            12510
          ],
          "6": [
            12568,
            12639
          ],
          "7": [
            12712,
            12753
          ],
          "8": [
            12767,
            12792
          ],
          "9": [
            13237,
            13284
          ],
          "10": [
            13328,
            13370
          ],
          "11": [
            13384,
            13410
          ]
        },
        "LockContract.release": {
          "14": [
            8387,
            8414
          ],
          "15": [
            8451,
            8495
          ],
          "16": [
            8553,
            8621
          ],
          "17": [
            8695,
            8753
          ]
        },
        "LockContract.view_can_release_percent": {
          "20": [
            14467,
            14541
          ],
          "21": [
            14880,
            14951
          ],
          "22": [
            15700,
            15744
          ],
          "23": [
            15873,
            16025
          ],
          "24": [
            16309,
            16374
          ],
          "25": [
            16409,
            16561
          ],
          "26": [
            16580,
            16585
          ],
          "27": [
            15385,
            15388
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c8063910d25ba11610066578063910d25ba1461010857806392347b5e14610110578063df1299791461018e578063f2fde38b146101a1578063f5cd7277146101b457600080fd5b8063057440d3146100a35780634fb4190e146100be578063715018a6146100d357806386d1a69f146100db5780638da5cb5b146100e3575b600080fd5b6100ab6101bc565b6040519081526020015b60405180910390f35b6100d16100cc3660046110e8565b61022e565b005b6100d1610675565b6100d16106db565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b5565b6009546100ab565b61015a61011e366004611114565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909160ff1685565b604080516001600160a01b03909616865260208601949094529284019190915260608301521515608082015260a0016100b5565b6001546100f0906001600160a01b031681565b6100d16101af366004611114565b610841565b6100ab61090c565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610229919061112f565b905090565b6802b5e3af16b18800008210156102a25760405162461bcd60e51b815260206004820152602d60248201527f54686520696e766573746f722073686f756c64206c6f636b206174206c65617360448201526c3a101a9835903a37b5b2b7399760991b60648201526084015b60405180910390fd5b6001546040516370a0823160e01b81526001600160a01b038381166004830152849216906370a0823190602401602060405180830381865afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610310919061112f565b10156103845760405162461bcd60e51b815260206004820152603e60248201527f596f7520646f6e2774206861766520656e6f756768204c656761637920746f6b60448201527f656e7320666f722074686520707269636520726571756972656d656e742e00006064820152608401610299565b6001600160a01b03811660009081526002602081905260409091200154156104075760405162461bcd60e51b815260206004820152603060248201527f54686973206164647265737320697320616c726561647920696e20746865207660448201526f32b9ba34b7339031b7b73a3930b1ba1760811b6064820152608401610299565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190611148565b506802b5e3af16b188000082101580156104a65750680d8d726b7177a8000082105b156105cb576004805460018082019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03841690811790915560068054928301815560009081527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9092018490556040805160a08101825291825260208201839052810184905260105460608201906105559042611180565b8152600160209182018190526001600160a01b0394851660009081526002808452604091829020855181546001600160a01b031916981697909717875592840151918601919091558201519084015560608101516003840155608001516004909201805460ff1916921515929092179091555050565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b03841690811790915560078054928301815560009081527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889092018490556040805160a08101825291825260208201839052810184905260115460608201906105559042611180565b6000546001600160a01b031633146106cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610299565b6106d96000610b64565b565b601254600160a01b900460ff16156107265760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b6044820152606401610299565b6012805460ff60a01b1916600160a01b17905533600090815260026020819052604082200154900361078c5760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030b71034b73b32b9ba37b960891b6044820152606401610299565b60006107983342610bb4565b905080600a60008282546107ac9190611180565b90915550506012546040518281526001600160a01b03909116907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a260125461080a906001600160a01b03163383610e20565b336000908152600260205260408120600101805483929061082c908490611180565b90915550506012805460ff60a01b1916905550565b6000546001600160a01b0316331461089b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610299565b6001600160a01b0381166109005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610299565b61090981610b64565b50565b336000908152600260208190526040822060018101549101548082106109745760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610299565b3360009081526002602052604090206003015442908082116109d85760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610299565b60008060015b6008548111610b4b576109f48162278d00611198565b6109fe9085611180565b851115610aa057610a106001826111b7565b610a1d9062278d00611198565b610a2a8262278d00611198565b610a3491906111b7565b91508162278d006127106008610a4b6001866111b7565b81548110610a5b57610a5b6111ce565b906000526020600020015489610a719190611198565b610a7b91906111e4565b610a8591906111e4565b610a8f9190611198565b610a999084611180565b9250610b39565b83610aac6001836111b7565b610ab99062278d00611198565b610ac390876111b7565b610acd91906111b7565b91508162278d006127106008610ae46001866111b7565b81548110610af457610af46111ce565b906000526020600020015489610b0a9190611198565b610b1491906111e4565b610b1e91906111e4565b610b289190611198565b610b329084611180565b9250610b4b565b80610b4381611206565b9150506109de565b506000610b5887846111b7565b98975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216600090815260026020819052604082206001810154910154808210610c255760405162461bcd60e51b815260206004820152601c60248201527f416c6c20746f6b656e732068617665206265656e20636c61696d6564000000006044820152606401610299565b6001600160a01b0385166000908152600260205260409020600301548490808211610c925760405162461bcd60e51b815260206004820152601c60248201527f4c6f636b2074696d6520686173206e6f742070617373656420796574000000006044820152606401610299565b60008060015b6008548111610e0557610cae8162278d00611198565b610cb89085611180565b851115610d5a57610cca6001826111b7565b610cd79062278d00611198565b610ce48262278d00611198565b610cee91906111b7565b91508162278d006127106008610d056001866111b7565b81548110610d1557610d156111ce565b906000526020600020015489610d2b9190611198565b610d3591906111e4565b610d3f91906111e4565b610d499190611198565b610d539084611180565b9250610df3565b83610d666001836111b7565b610d739062278d00611198565b610d7d90876111b7565b610d8791906111b7565b91508162278d006127106008610d9e6001866111b7565b81548110610dae57610dae6111ce565b906000526020600020015489610dc49190611198565b610dce91906111e4565b610dd891906111e4565b610de29190611198565b610dec9084611180565b9250610e05565b80610dfd81611206565b915050610c98565b506000610e1287846111b7565b9a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e72908490610e77565b505050565b6000610ecc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f499092919063ffffffff16565b805190915015610e725780806020019051810190610eea9190611148565b610e725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610299565b6060610f588484600085610f62565b90505b9392505050565b606082471015610fc35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610299565b6001600160a01b0385163b61101a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610299565b600080866001600160a01b03168587604051611036919061124f565b60006040518083038185875af1925050503d8060008114611073576040519150601f19603f3d011682016040523d82523d6000602084013e611078565b606091505b5091509150611088828286611093565b979650505050505050565b606083156110a2575081610f5b565b8251156110b25782518084602001fd5b8160405162461bcd60e51b8152600401610299919061126b565b80356001600160a01b03811681146110e357600080fd5b919050565b600080604083850312156110fb57600080fd5b8235915061110b602084016110cc565b90509250929050565b60006020828403121561112657600080fd5b610f5b826110cc565b60006020828403121561114157600080fd5b5051919050565b60006020828403121561115a57600080fd5b81518015158114610f5b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156111935761119361116a565b500190565b60008160001904831182151516156111b2576111b261116a565b500290565b6000828210156111c9576111c961116a565b500390565b634e487b7160e01b600052603260045260246000fd5b60008261120157634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016112185761121861116a565b5060010190565b60005b8381101561123a578181015183820152602001611222565b83811115611249576000848401525b50505050565b6000825161126181846020870161121f565b9190910192915050565b602081526000825180602084015261128a81604085016020870161121f565b601f01601f1916919091016040019291505056fea2646970667358221220eea15d5c37f5f5660c180fe78639a20ea2187335280a25c3a1948148c588fc7264736f6c634300080f0033",
  "deployedSourceMap": "792:16301:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16882:119;;;:::i;:::-;;;160:25:6;;;148:2;133:18;16882:119:5;;;;;;;;11841:2091;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;8105:655:5:-;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;797:32:6;;;779:51;;767:2;752:18;1036:85:0;633:203:6;17007:84:5;17076:8;;17007:84;;981:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;981:52:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;1303:32:6;;;1285:51;;1367:2;1352:18;;1345:34;;;;1395:18;;;1388:34;;;;1453:2;1438:18;;1431:34;1509:14;1502:22;1496:3;1481:19;;1474:51;1272:3;1257:19;981:52:5;1032:499:6;854:26:5;;;;;-1:-1:-1;;;;;854:26:5;;;1918:198:0;;;;;;:::i;:::-;;:::i;14044:2766:5:-;;;:::i;16882:119::-;16957:12;;:37;;-1:-1:-1;;;16957:37:5;;16988:4;16957:37;;;779:51:6;16931:7:5;;-1:-1:-1;;;;;16957:12:5;;:22;;752:18:6;;16957:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16950:44;;16882:119;:::o;11841:2091::-;12008:9;11997:7;:20;;11988:79;;;;-1:-1:-1;;;11988:79:5;;2150:2:6;11988:79:5;;;2132:21:6;2189:2;2169:18;;;2162:30;2228:34;2208:18;;;2201:62;-1:-1:-1;;;2279:18:6;;;2272:43;2332:19;;11988:79:5;;;;;;;;;12188:12;;:44;;-1:-1:-1;;;12188:44:5;;-1:-1:-1;;;;;797:32:6;;;12188:44:5;;;779:51:6;12235:7:5;;12188:12;;:22;;752:18:6;;12188:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;12180:138;;;;-1:-1:-1;;;12180:138:5;;2564:2:6;12180:138:5;;;2546:21:6;2603:2;2583:18;;;2576:30;2642:34;2622:18;;;2615:62;2713:32;2693:18;;;2686:60;2763:19;;12180:138:5;2362:426:6;12180:138:5;-1:-1:-1;;;;;12390:38:5;;;;;;:16;:38;;;;;;;;:54;;:58;12382:128;;;;-1:-1:-1;;;12382:128:5;;2995:2:6;12382:128:5;;;2977:21:6;3034:2;3014:18;;;3007:30;3073:34;3053:18;;;3046:62;-1:-1:-1;;;3124:18:6;;;3117:46;3180:19;;12382:128:5;2793:412:6;12382:128:5;12568:12;;:71;;-1:-1:-1;;;12568:71:5;;-1:-1:-1;;;;;3468:15:6;;;12568:71:5;;;3450:34:6;12624:4:5;3500:18:6;;;3493:43;3552:18;;;3545:34;;;12568:12:5;;;;:25;;3385:18:6;;12568:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12664:9;12653:7;:20;;:44;;;;;12687:10;12677:7;:20;12653:44;12650:1276;;;12712:14;:41;;;;;;;;;;;;;-1:-1:-1;;;;;;12712:41:5;-1:-1:-1;;;;;12712:41:5;;;;;;;;12767:11;:25;;;;;;;-1:-1:-1;12767:25:5;;;;;;;;;;12879:276;;;;;;;;;;;12712:41;12879:276;;;;;;;;;;13087:13;;12879:276;;;;13069:31;;:15;:31;:::i;:::-;12879:276;;13150:4;12879:276;;;;;;;-1:-1:-1;;;;;13237:38:5;;;-1:-1:-1;13237:38:5;;;:16;:38;;;;;;;;:47;;;;-1:-1:-1;;;;;;13237:47:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13237:47:5;;;;;;;;;;;-1:-1:-1;;11841:2091:5:o;12650:1276::-;13328:15;:42;;;;;;;;;;;;;-1:-1:-1;;;;;;13328:42:5;-1:-1:-1;;;;;13328:42:5;;;;;;;;13384:12;:26;;;;;;;-1:-1:-1;13384:26:5;;;;;;;;;;13497:287;;;;;;;;;;;13328:42;13497:287;;;;;;;;;;13705:14;;13497:287;;;;13687:32;;:15;:32;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;4339:2:6;1240:68:0;;;4321:21:6;;;4358:18;;;4351:30;4417:34;4397:18;;;4390:62;4469:18;;1240:68:0;4137:356:6;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;8105:655:5:-;7719:6;;-1:-1:-1;;;7719:6:5;;;;7718:7;7710:34;;;;-1:-1:-1;;;7710:34:5;;4700:2:6;7710:34:5;;;4682:21:6;4739:2;4719:18;;;4712:30;-1:-1:-1;;;4758:18:6;;;4751:44;4812:18;;7710:34:5;4498:338:6;7710:34:5;7754:6;:13;;-1:-1:-1;;;;7754:13:5;-1:-1:-1;;;7754:13:5;;;7936:10:::1;7754:13:::0;7919:28;;;:16:::1;:28;::::0;;;;;;:44:::1;::::0;:49;;7911:77:::1;;;::::0;-1:-1:-1;;;7911:77:5;;5043:2:6;7911:77:5::1;::::0;::::1;5025:21:6::0;5082:2;5062:18;;;5055:30;-1:-1:-1;;;5101:18:6;;;5094:45;5156:18;;7911:77:5::1;4841:339:6::0;7911:77:5::1;8241:18:::2;8262:57;8282:10;8302:15;8262:19;:57::i;:::-;8241:78;;8404:10;8387:13;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8470:12:5::2;::::0;8456:39:::2;::::0;160:25:6;;;-1:-1:-1;;;;;8470:12:5;;::::2;::::0;8456:39:::2;::::0;148:2:6;133:18;8456:39:5::2;;;;;;;8583:12;::::0;8553:68:::2;::::0;-1:-1:-1;;;;;8583:12:5::2;8598:10;8610::::0;8553:22:::2;:68::i;:::-;8712:10;8695:28;::::0;;;:16:::2;:28;::::0;;;;:44:::2;;:58:::0;;8743:10;;8695:28;:58:::2;::::0;8743:10;;8695:58:::2;:::i;:::-;::::0;;;-1:-1:-1;;7788:6:5;:14;;-1:-1:-1;;;;7788:14:5;;;-1:-1:-1;8105:655:5:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;4339:2:6;1240:68:0;;;4321:21:6;;;4358:18;;;4351:30;4417:34;4397:18;;;4390:62;4469:18;;1240:68:0;4137:356:6;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5387:2:6;1998:73:0::1;::::0;::::1;5369:21:6::0;5426:2;5406:18;;;5399:30;5465:34;5445:18;;;5438:62;-1:-1:-1;;;5516:18:6;;;5509:36;5562:19;;1998:73:0::1;5185:402:6::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;14044:2766:5:-;14228:10;14101:7;14211:28;;;:16;:28;;;;;;;:44;;;;14338;;;14475:33;;;14467:74;;;;-1:-1:-1;;;14467:74:5;;5794:2:6;14467:74:5;;;5776:21:6;5833:2;5813:18;;;5806:30;5872;5852:18;;;5845:58;5920:18;;14467:74:5;5592:352:6;14467:74:5;14747:10;14593:21;14730:28;;;:16;:28;;;;;:42;;;14617:15;;14888:30;;;14880:71;;;;-1:-1:-1;;;14880:71:5;;6151:2:6;14880:71:5;;;6133:21:6;6190:2;6170:18;;;6163:30;6229;6209:18;;;6202:58;6277:18;;14880:71:5;5949:352:6;14880:71:5;15034:20;;15348:1;15335:1275;15355:21;:28;15351:32;;15335:1275;;15527:9;15535:1;15527:7;:9;:::i;:::-;15512:24;;:14;:24;:::i;:::-;15495:13;:42;15492:1108;;;15740:3;15742:1;15740;:3;:::i;:::-;15731:13;;:7;:13;:::i;:::-;15720:9;15728:1;15720:7;:9;:::i;:::-;:24;;;;:::i;:::-;15700:44;-1:-1:-1;15700:44:5;15997:7;15991:5;15964:21;15986:3;15988:1;15986;:3;:::i;:::-;15964:26;;;;;;;;:::i;:::-;;;;;;;;;15924:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;15888:137;;:12;:137;:::i;:::-;15873:152;;15492:1108;;;16360:14;16355:3;16357:1;16355;:3;:::i;:::-;16346:13;;:7;:13;:::i;:::-;16330:29;;:13;:29;:::i;:::-;:44;;;;:::i;:::-;16309:65;-1:-1:-1;16309:65:5;16533:7;16527:5;16500:21;16522:3;16524:1;16522;:3;:::i;:::-;16500:26;;;;;;;;:::i;:::-;;;;;;;;;16460:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;16424:137;;:12;:137;:::i;:::-;16409:152;;16580:5;;15492:1108;15385:3;;;;:::i;:::-;;;;15335:1275;;;-1:-1:-1;16693:24:5;16720:29;16735:14;16720:12;:29;:::i;:::-;16693:56;14044:2766;-1:-1:-1;;;;;;;;14044:2766:5:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;8975:2811:5:-;-1:-1:-1;;;;;9184:32:5;;9074:7;9184:32;;;:16;:32;;;;;;;:48;;;;9315;;;9456:33;;;9448:74;;;;-1:-1:-1;;;9448:74:5;;5794:2:6;9448:74:5;;;5776:21:6;5833:2;5813:18;;;5806:30;5872;5852:18;;;5845:58;5920:18;;9448:74:5;5592:352:6;9448:74:5;-1:-1:-1;;;;;9706:32:5;;9574:21;9706:32;;;:16;:32;;;;;:46;;;9598:10;;9868:30;;;9860:71;;;;-1:-1:-1;;;9860:71:5;;6151:2:6;9860:71:5;;;6133:21:6;6190:2;6170:18;;;6163:30;6229;6209:18;;;6202:58;6277:18;;9860:71:5;5949:352:6;9860:71:5;10014:20;;10324:1;10311:1275;10331:21;:28;10327:32;;10311:1275;;10503:9;10511:1;10503:7;:9;:::i;:::-;10488:24;;:14;:24;:::i;:::-;10471:13;:42;10468:1108;;;10716:3;10718:1;10716;:3;:::i;:::-;10707:13;;:7;:13;:::i;:::-;10696:9;10704:1;10696:7;:9;:::i;:::-;:24;;;;:::i;:::-;10676:44;-1:-1:-1;10676:44:5;10973:7;10967:5;10940:21;10962:3;10964:1;10962;:3;:::i;:::-;10940:26;;;;;;;;:::i;:::-;;;;;;;;;10900:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;10864:137;;:12;:137;:::i;:::-;10849:152;;10468:1108;;;11336:14;11331:3;11333:1;11331;:3;:::i;:::-;11322:13;;:7;:13;:::i;:::-;11306:29;;:13;:29;:::i;:::-;:44;;;;:::i;:::-;11285:65;-1:-1:-1;11285:65:5;11509:7;11503:5;11476:21;11498:3;11500:1;11498;:3;:::i;:::-;11476:26;;;;;;;;:::i;:::-;;;;;;;;;11436:16;:66;;;;:::i;:::-;:72;;;;:::i;:::-;:80;;;;:::i;:::-;:101;;;;:::i;:::-;11400:137;;:12;:137;:::i;:::-;11385:152;;11556:5;;10468:1108;10361:3;;;;:::i;:::-;;;;10311:1275;;;-1:-1:-1;11669:24:5;11696:29;11711:14;11696:12;:29;:::i;:::-;11669:56;8975:2811;-1:-1:-1;;;;;;;;;;8975:2811:5:o;701:205:2:-;840:58;;;-1:-1:-1;;;;;7295:32:6;;840:58:2;;;7277:51:6;7344:18;;;;7337:34;;;840:58:2;;;;;;;;;;7250:18:6;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;7584:2:6;3811:85:2;;;7566:21:6;7623:2;7603:18;;;7596:30;7662:34;7642:18;;;7635:62;-1:-1:-1;;;7713:18:6;;;7706:40;7763:19;;3811:85:2;7382:406:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;7995:2:6;5137:81:3;;;7977:21:6;8034:2;8014:18;;;8007:30;8073:34;8053:18;;;8046:62;-1:-1:-1;;;8124:18:6;;;8117:36;8170:19;;5137:81:3;7793:402:6;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;8402:2:6;5228:60:3;;;8384:21:6;8441:2;8421:18;;;8414:30;8480:31;8460:18;;;8453:59;8529:18;;5228:60:3;8200:353:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;196:173:6:-;264:20;;-1:-1:-1;;;;;313:31:6;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:254::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;555:9;542:23;532:33;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;;374:254;;;;;:::o;841:186::-;900:6;953:2;941:9;932:7;928:23;924:32;921:52;;;969:1;966;959:12;921:52;992:29;1011:9;992:29;:::i;1759:184::-;1829:6;1882:2;1870:9;1861:7;1857:23;1853:32;1850:52;;;1898:1;1895;1888:12;1850:52;-1:-1:-1;1921:16:6;;1759:184;-1:-1:-1;1759:184:6:o;3590:277::-;3657:6;3710:2;3698:9;3689:7;3685:23;3681:32;3678:52;;;3726:1;3723;3716:12;3678:52;3758:9;3752:16;3811:5;3804:13;3797:21;3790:5;3787:32;3777:60;;3833:1;3830;3823:12;3872:127;3933:10;3928:3;3924:20;3921:1;3914:31;3964:4;3961:1;3954:15;3988:4;3985:1;3978:15;4004:128;4044:3;4075:1;4071:6;4068:1;4065:13;4062:39;;;4081:18;;:::i;:::-;-1:-1:-1;4117:9:6;;4004:128::o;6306:168::-;6346:7;6412:1;6408;6404:6;6400:14;6397:1;6394:21;6389:1;6382:9;6375:17;6371:45;6368:71;;;6419:18;;:::i;:::-;-1:-1:-1;6459:9:6;;6306:168::o;6479:125::-;6519:4;6547:1;6544;6541:8;6538:34;;;6552:18;;:::i;:::-;-1:-1:-1;6589:9:6;;6479:125::o;6609:127::-;6670:10;6665:3;6661:20;6658:1;6651:31;6701:4;6698:1;6691:15;6725:4;6722:1;6715:15;6741:217;6781:1;6807;6797:132;;6851:10;6846:3;6842:20;6839:1;6832:31;6886:4;6883:1;6876:15;6914:4;6911:1;6904:15;6797:132;-1:-1:-1;6943:9:6;;6741:217::o;6963:135::-;7002:3;7023:17;;;7020:43;;7043:18;;:::i;:::-;-1:-1:-1;7090:1:6;7079:13;;6963:135::o;8558:258::-;8630:1;8640:113;8654:6;8651:1;8648:13;8640:113;;;8730:11;;;8724:18;8711:11;;;8704:39;8676:2;8669:10;8640:113;;;8771:6;8768:1;8765:13;8762:48;;;8806:1;8797:6;8792:3;8788:16;8781:27;8762:48;;8558:258;;;:::o;8821:274::-;8950:3;8988:6;8982:13;9004:53;9050:6;9045:3;9038:4;9030:6;9026:17;9004:53;:::i;:::-;9073:16;;;;;8821:274;-1:-1:-1;;8821:274:6:o;9100:383::-;9249:2;9238:9;9231:21;9212:4;9281:6;9275:13;9324:6;9319:2;9308:9;9304:18;9297:34;9340:66;9399:6;9394:2;9383:9;9379:18;9374:2;9366:6;9362:15;9340:66;:::i;:::-;9467:2;9446:15;-1:-1:-1;;9442:29:6;9427:45;;;;9474:2;9423:54;;9100:383;-1:-1:-1;;9100:383:6:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount can be given to this contract, which will release the _token to the beneficiary following a given schedule. The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays have the same length and are iterated by the _milestone variable",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Set the beneficiary, start timestamp and locking durations and amounts."
      },
      "contract_balance()": {
        "details": "View function to get contract balance"
      },
      "new_Investor(uint256,address)": {
        "details": "Adds a new Investor."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "release()": {
        "details": "Release the tokens  Emits a {ERC20Released} event."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "view_can_release_percent()": {
        "details": "View function that an investor can use to see how many tokens he can withdraw"
      }
    },
    "title": "LockContract",
    "version": 1
  },
  "offset": [
    792,
    17093
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x910D25BA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x910D25BA EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x92347B5E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xDF129979 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF5CD7277 EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57440D3 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4FB4190E EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0x675 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xAB JUMP JUMPDEST PUSH2 0x15A PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD1 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1114 JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x90C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP3 LT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520696E766573746F722073686F756C64206C6F636B206174206C656173 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3A101A9835903A37B5B2B73997 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST LT ISZERO PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E7320666F722074686520707269636520726571756972656D656E742E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320616C726561647920696E207468652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B9BA34B7339031B7B73A3930B1BA17 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST POP PUSH9 0x2B5E3AF16B1880000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI POP PUSH9 0xD8D726B7177A80000 DUP3 LT JUMPDEST ISZERO PUSH2 0x5CB JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP1 SWAP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x10 SLOAD PUSH1 0x60 DUP3 ADD SWAP1 PUSH2 0x555 SWAP1 TIMESTAMP PUSH2 0x1180 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP9 AND SWAP8 SWAP1 SWAP8 OR DUP8 SSTORE SWAP3 DUP5 ADD MLOAD SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 ADD MLOAD SWAP1 DUP5 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP1 SWAP3 ADD DUP5 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 SLOAD PUSH1 0x60 DUP3 ADD SWAP1 PUSH2 0x555 SWAP1 TIMESTAMP PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x6D9 PUSH1 0x0 PUSH2 0xB64 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4E6F2072652D656E7472616E6379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SUB PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030B71034B73B32B9BA37B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 CALLER TIMESTAMP PUSH2 0xBB4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x12 SLOAD PUSH2 0x80A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xE20 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x82C SWAP1 DUP5 SWAP1 PUSH2 0x1180 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x299 JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH2 0xB64 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP1 DUP3 LT PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP SWAP1 DUP1 DUP3 GT PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xB4B JUMPI PUSH2 0x9F4 DUP2 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0x9FE SWAP1 DUP6 PUSH2 0x1180 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xAA0 JUMPI PUSH2 0xA10 PUSH1 0x1 DUP3 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xA1D SWAP1 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xA2A DUP3 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xA34 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xA4B PUSH1 0x1 DUP7 PUSH2 0x11B7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA5B JUMPI PUSH2 0xA5B PUSH2 0x11CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xA71 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xA85 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xA99 SWAP1 DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 POP PUSH2 0xB39 JUMP JUMPDEST DUP4 PUSH2 0xAAC PUSH1 0x1 DUP4 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xAB9 SWAP1 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xAC3 SWAP1 DUP8 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xAE4 PUSH1 0x1 DUP7 PUSH2 0x11B7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAF4 JUMPI PUSH2 0xAF4 PUSH2 0x11CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xB14 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xB32 SWAP1 DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 POP PUSH2 0xB4B JUMP JUMPDEST DUP1 PUSH2 0xB43 DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xB58 DUP8 DUP5 PUSH2 0x11B7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD DUP1 DUP3 LT PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 SWAP1 DUP1 DUP3 GT PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 JUMPDEST PUSH1 0x8 SLOAD DUP2 GT PUSH2 0xE05 JUMPI PUSH2 0xCAE DUP2 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xCB8 SWAP1 DUP6 PUSH2 0x1180 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0xD5A JUMPI PUSH2 0xCCA PUSH1 0x1 DUP3 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xCD7 SWAP1 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xCE4 DUP3 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xD05 PUSH1 0x1 DUP7 PUSH2 0x11B7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD15 JUMPI PUSH2 0xD15 PUSH2 0x11CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xD35 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xD53 SWAP1 DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 POP PUSH2 0xDF3 JUMP JUMPDEST DUP4 PUSH2 0xD66 PUSH1 0x1 DUP4 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xD73 SWAP1 PUSH3 0x278D00 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xD7D SWAP1 DUP8 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0xD87 SWAP2 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH3 0x278D00 PUSH2 0x2710 PUSH1 0x8 PUSH2 0xD9E PUSH1 0x1 DUP7 PUSH2 0x11B7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xDAE JUMPI PUSH2 0xDAE PUSH2 0x11CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0xDC4 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST PUSH2 0xDEC SWAP1 DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 POP PUSH2 0xE05 JUMP JUMPDEST DUP1 PUSH2 0xDFD DUP2 PUSH2 0x1206 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC98 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xE12 DUP8 DUP5 PUSH2 0x11B7 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE72 SWAP1 DUP5 SWAP1 PUSH2 0xE77 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF49 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xE72 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF58 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1036 SWAP2 SWAP1 PUSH2 0x124F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1073 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1088 DUP3 DUP3 DUP7 PUSH2 0x1093 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x10A2 JUMPI POP DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x10B2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x110B PUSH1 0x20 DUP5 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5B DUP3 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1193 PUSH2 0x116A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11B2 JUMPI PUSH2 0x11B2 PUSH2 0x116A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x116A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1201 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1218 JUMPI PUSH2 0x1218 PUSH2 0x116A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x123A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1222 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1249 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1261 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x121F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x128A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x121F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE LOG1 0x5D 0x5C CALLDATACOPY CREATE2 CREATE2 PUSH7 0xC180FE78639A2 0xE LOG2 XOR PUSH20 0x35280A25C3A1948148C588FC7264736F6C634300 ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x910D25BA"
    },
    "38": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x910D25BA"
    },
    "49": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x108"
    },
    "53": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x92347B5E"
    },
    "60": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x110"
    },
    "64": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDF129979"
    },
    "71": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E"
    },
    "75": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A1"
    },
    "86": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF5CD7277"
    },
    "93": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4"
    },
    "97": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "REVERT",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x57440D3"
    },
    "109": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4FB4190E"
    },
    "120": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE"
    },
    "124": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "135": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x86D1A69F"
    },
    "142": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB"
    },
    "146": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE3"
    },
    "157": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        792,
        17093
      ],
      "op": "REVERT",
      "path": "5"
    },
    "163": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "164": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "167": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BC"
    },
    "170": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMP",
      "path": "5"
    },
    "171": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "172": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "174": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "175": {
      "op": "SWAP1"
    },
    "176": {
      "op": "DUP2"
    },
    "177": {
      "op": "MSTORE"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "180": {
      "op": "ADD"
    },
    "181": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "182": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "184": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "185": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "187": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "SUB",
      "path": "5"
    },
    "188": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "189": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "RETURN",
      "path": "5"
    },
    "190": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "191": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1"
    },
    "194": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "197": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "198": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "200": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E8"
    },
    "203": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMP",
      "path": "5"
    },
    "204": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "205": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22E"
    },
    "208": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMP",
      "path": "5"
    },
    "209": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "210": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "STOP",
      "path": "5"
    },
    "211": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x675"
    },
    "218": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "219": {
      "fn": "LockContract.release",
      "offset": [
        8105,
        8760
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "220": {
      "fn": "LockContract.release",
      "offset": [
        8105,
        8760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1"
    },
    "223": {
      "fn": "LockContract.release",
      "offset": [
        8105,
        8760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6DB"
    },
    "226": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8105,
        8760
      ],
      "op": "JUMP",
      "path": "5"
    },
    "227": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "228": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "240": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "243": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "250": {
      "op": "SHL"
    },
    "251": {
      "op": "SUB"
    },
    "252": {
      "op": "SWAP1"
    },
    "253": {
      "op": "SWAP2"
    },
    "254": {
      "op": "AND"
    },
    "255": {
      "op": "DUP2"
    },
    "256": {
      "op": "MSTORE"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "263": {
      "op": "JUMP"
    },
    "264": {
      "fn": "LockContract.get_initLock",
      "offset": [
        17007,
        17091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "265": {
      "fn": "LockContract.get_initLock",
      "offset": [
        17076,
        17084
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x9"
    },
    "267": {
      "fn": "LockContract.get_initLock",
      "offset": [
        17076,
        17084
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "268": {
      "fn": "LockContract.get_initLock",
      "offset": [
        17007,
        17091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "271": {
      "fn": "LockContract.get_initLock",
      "offset": [
        17007,
        17091
      ],
      "op": "JUMP",
      "path": "5"
    },
    "272": {
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "273": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "276": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E"
    },
    "279": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "280": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "282": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1114"
    },
    "285": {
      "fn": "LockContract.get_initLock",
      "jump": "i",
      "offset": [
        981,
        1033
      ],
      "op": "JUMP",
      "path": "5"
    },
    "286": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "287": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "289": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "291": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP2",
      "path": "5"
    },
    "292": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "293": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "294": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "296": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "297": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "298": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "299": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "301": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "302": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "303": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "304": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP1",
      "path": "5"
    },
    "305": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "306": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "308": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "309": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "310": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "311": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "312": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP3",
      "path": "5"
    },
    "313": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "314": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "315": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "317": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP4",
      "path": "5"
    },
    "318": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "319": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "320": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "322": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "323": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "324": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "ADD",
      "path": "5"
    },
    "325": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "SHL"
    },
    "333": {
      "op": "SUB"
    },
    "334": {
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "335": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "336": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "AND",
      "path": "5"
    },
    "337": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "338": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "339": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "340": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "341": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "343": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "AND",
      "path": "5"
    },
    "344": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP6",
      "path": "5"
    },
    "345": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMP",
      "path": "5"
    },
    "346": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "347": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "349": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "DUP1",
      "path": "5"
    },
    "350": {
      "fn": "LockContract.get_initLock",
      "offset": [
        981,
        1033
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "op": "SWAP1"
    },
    "360": {
      "op": "SWAP7"
    },
    "361": {
      "op": "AND"
    },
    "362": {
      "op": "DUP7"
    },
    "363": {
      "op": "MSTORE"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "366": {
      "op": "DUP7"
    },
    "367": {
      "op": "ADD"
    },
    "368": {
      "op": "SWAP5"
    },
    "369": {
      "op": "SWAP1"
    },
    "370": {
      "op": "SWAP5"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "SWAP3"
    },
    "373": {
      "op": "DUP5"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "op": "SWAP2"
    },
    "376": {
      "op": "SWAP1"
    },
    "377": {
      "op": "SWAP2"
    },
    "378": {
      "op": "MSTORE"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "381": {
      "op": "DUP4"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "op": "MSTORE"
    },
    "384": {
      "op": "ISZERO"
    },
    "385": {
      "op": "ISZERO"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "388": {
      "op": "DUP3"
    },
    "389": {
      "op": "ADD"
    },
    "390": {
      "op": "MSTORE"
    },
    "391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "offset": [
        981,
        1033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB5"
    },
    "397": {
      "op": "JUMP"
    },
    "398": {
      "offset": [
        854,
        880
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "399": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "401": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "402": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF0"
    },
    "405": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "offset": [
        854,
        880
      ],
      "op": "AND",
      "path": "5"
    },
    "415": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "416": {
      "fn": "LockContract.get_initLock",
      "offset": [
        854,
        880
      ],
      "op": "JUMP",
      "path": "5"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1114"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x841"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14044,
        16810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "437": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14044,
        16810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB"
    },
    "440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14044,
        16810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90C"
    },
    "443": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        14044,
        16810
      ],
      "op": "JUMP",
      "path": "5"
    },
    "444": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "445": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16969
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x1"
    },
    "447": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16969
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "448": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "450": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "451": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP2",
      "path": "5"
    },
    "460": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "461": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16988,
        16992
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "462": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "464": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP3",
      "path": "5"
    },
    "465": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ADD",
      "path": "5"
    },
    "466": {
      "op": "MSTORE"
    },
    "467": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16931,
        16938
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "469": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16931,
        16938
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16969
      ],
      "op": "AND",
      "path": "5"
    },
    "479": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16969
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "480": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16979
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "485": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "491": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "493": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "494": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP1",
      "path": "5"
    },
    "495": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP4",
      "path": "5"
    },
    "496": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "SUB",
      "path": "5"
    },
    "497": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP2",
      "path": "5"
    },
    "498": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP7",
      "path": "5"
    },
    "499": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "GAS",
      "path": "5"
    },
    "500": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "501": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "502": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP1",
      "path": "5"
    },
    "503": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "504": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x205"
    },
    "507": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "508": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "509": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "511": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP1",
      "path": "5"
    },
    "512": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "513": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "514": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "516": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "REVERT",
      "path": "5"
    },
    "517": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "518": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "519": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "520": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "521": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "522": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "524": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "525": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "526": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "528": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "NOT",
      "path": "5"
    },
    "529": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "531": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP3",
      "path": "5"
    },
    "532": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ADD",
      "path": "5"
    },
    "533": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "AND",
      "path": "5"
    },
    "534": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP3",
      "path": "5"
    },
    "535": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ADD",
      "path": "5"
    },
    "536": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP1",
      "path": "5"
    },
    "537": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "539": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "540": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "541": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "DUP2",
      "path": "5"
    },
    "542": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "ADD",
      "path": "5"
    },
    "543": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "544": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x229"
    },
    "547": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "548": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "549": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x112F"
    },
    "552": {
      "fn": "LockContract.contract_balance",
      "jump": "i",
      "offset": [
        16957,
        16994
      ],
      "op": "JUMP",
      "path": "5"
    },
    "553": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16957,
        16994
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "554": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16950,
        16994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "555": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16950,
        16994
      ],
      "op": "POP",
      "path": "5"
    },
    "556": {
      "fn": "LockContract.contract_balance",
      "offset": [
        16882,
        17001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "557": {
      "fn": "LockContract.contract_balance",
      "jump": "o",
      "offset": [
        16882,
        17001
      ],
      "op": "JUMP",
      "path": "5"
    },
    "558": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "559": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12008,
        12017
      ],
      "op": "PUSH9",
      "path": "5",
      "statement": 3,
      "value": "0x2B5E3AF16B1880000"
    },
    "569": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11997,
        12004
      ],
      "op": "DUP3",
      "path": "5"
    },
    "570": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11997,
        12017
      ],
      "op": "LT",
      "path": "5"
    },
    "571": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        11997,
        12017
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "572": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A2"
    },
    "575": {
      "branch": 47,
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "576": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "578": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "DUP2",
      "path": "5"
    },
    "587": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "590": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "592": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "DUP3",
      "path": "5"
    },
    "593": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "ADD",
      "path": "5"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "599": {
      "op": "DUP3"
    },
    "600": {
      "op": "ADD"
    },
    "601": {
      "op": "MSTORE"
    },
    "602": {
      "op": "PUSH32",
      "value": "0x54686520696E766573746F722073686F756C64206C6F636B206174206C656173"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "637": {
      "op": "DUP3"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "PUSH13",
      "value": "0x3A101A9835903A37B5B2B73997"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "659": {
      "op": "DUP3"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "666": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "668": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "669": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "DUP1",
      "path": "5"
    },
    "670": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "671": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "SUB",
      "path": "5"
    },
    "672": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "673": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "674": {
      "fn": "LockContract.new_Investor",
      "offset": [
        11988,
        12067
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "675": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12200
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x1"
    },
    "677": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "678": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "680": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "681": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "688": {
      "op": "SHL"
    },
    "689": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP2",
      "path": "5"
    },
    "690": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "op": "DUP4"
    },
    "700": {
      "op": "DUP2"
    },
    "701": {
      "op": "AND"
    },
    "702": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "704": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP4",
      "path": "5"
    },
    "705": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ADD",
      "path": "5"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12235,
        12242
      ],
      "op": "DUP5",
      "path": "5"
    },
    "708": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12235,
        12242
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "709": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12200
      ],
      "op": "AND",
      "path": "5"
    },
    "710": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12200
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "711": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12210
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "716": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12210
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "722": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "724": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "725": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP1",
      "path": "5"
    },
    "726": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP4",
      "path": "5"
    },
    "727": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "SUB",
      "path": "5"
    },
    "728": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP2",
      "path": "5"
    },
    "729": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP7",
      "path": "5"
    },
    "730": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "GAS",
      "path": "5"
    },
    "731": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "732": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "733": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP1",
      "path": "5"
    },
    "734": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "735": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EC"
    },
    "738": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "739": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "740": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "742": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP1",
      "path": "5"
    },
    "743": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "744": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "745": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "747": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "REVERT",
      "path": "5"
    },
    "748": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "749": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "POP",
      "path": "5"
    },
    "750": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "POP",
      "path": "5"
    },
    "751": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "POP",
      "path": "5"
    },
    "752": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "POP",
      "path": "5"
    },
    "753": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "755": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "756": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "757": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "759": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "NOT",
      "path": "5"
    },
    "760": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "762": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP3",
      "path": "5"
    },
    "763": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ADD",
      "path": "5"
    },
    "764": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "AND",
      "path": "5"
    },
    "765": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP3",
      "path": "5"
    },
    "766": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ADD",
      "path": "5"
    },
    "767": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP1",
      "path": "5"
    },
    "768": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "770": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "771": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "POP",
      "path": "5"
    },
    "772": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "DUP2",
      "path": "5"
    },
    "773": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "ADD",
      "path": "5"
    },
    "774": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "775": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x310"
    },
    "778": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "779": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "780": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x112F"
    },
    "783": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        12188,
        12232
      ],
      "op": "JUMP",
      "path": "5"
    },
    "784": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12232
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "785": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12242
      ],
      "op": "LT",
      "path": "5"
    },
    "786": {
      "branch": 48,
      "fn": "LockContract.new_Investor",
      "offset": [
        12188,
        12242
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "787": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x384"
    },
    "790": {
      "branch": 48,
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "791": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "793": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "800": {
      "op": "SHL"
    },
    "801": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "DUP2",
      "path": "5"
    },
    "802": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "805": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "807": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "DUP3",
      "path": "5"
    },
    "808": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "ADD",
      "path": "5"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "814": {
      "op": "DUP3"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "op": "MSTORE"
    },
    "817": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520656E6F756768204C656761637920746F6B"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "852": {
      "op": "DUP3"
    },
    "853": {
      "op": "ADD"
    },
    "854": {
      "op": "MSTORE"
    },
    "855": {
      "op": "PUSH32",
      "value": "0x656E7320666F722074686520707269636520726571756972656D656E742E0000"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "ADD"
    },
    "892": {
      "op": "MSTORE"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "899": {
      "op": "JUMP"
    },
    "900": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12180,
        12318
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "op": "SUB"
    },
    "909": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 5
    },
    "910": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "AND",
      "path": "5"
    },
    "911": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "913": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "914": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "DUP2",
      "path": "5"
    },
    "915": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "916": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12406
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "918": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "920": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "DUP2",
      "path": "5"
    },
    "921": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "922": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "923": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "925": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "926": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "927": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12428
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "928": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12444
      ],
      "op": "ADD",
      "path": "5"
    },
    "929": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12444
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "930": {
      "branch": 49,
      "fn": "LockContract.new_Investor",
      "offset": [
        12390,
        12448
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "931": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x407"
    },
    "934": {
      "branch": 49,
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "935": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "937": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "DUP2",
      "path": "5"
    },
    "946": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "949": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "951": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "DUP3",
      "path": "5"
    },
    "952": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "ADD",
      "path": "5"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH32",
      "value": "0x54686973206164647265737320697320616C726561647920696E207468652076"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH16",
      "value": "0x32B9BA34B7339031B7B73A3930B1BA17"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1021": {
      "op": "DUP3"
    },
    "1022": {
      "op": "ADD"
    },
    "1023": {
      "op": "MSTORE"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1026": {
      "op": "ADD"
    },
    "1027": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "1030": {
      "op": "JUMP"
    },
    "1031": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12382,
        12510
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1032": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x1"
    },
    "1034": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1035": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1037": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1038": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1047": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "op": "DUP4"
    },
    "1057": {
      "op": "DUP2"
    },
    "1058": {
      "op": "AND"
    },
    "1059": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1061": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1062": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ADD",
      "path": "5"
    },
    "1063": {
      "op": "MSTORE"
    },
    "1064": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12624,
        12628
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1067": {
      "op": "DUP4"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "op": "MSTORE"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "DUP6"
    },
    "1075": {
      "op": "SWAP1"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1078": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1079": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "AND",
      "path": "5"
    },
    "1080": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12580
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1081": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12593
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "1086": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12593
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1092": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1094": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1095": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1096": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1097": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "SUB",
      "path": "5"
    },
    "1098": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1099": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1101": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1102": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "GAS",
      "path": "5"
    },
    "1103": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "CALL",
      "path": "5"
    },
    "1104": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1105": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1106": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1107": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x460"
    },
    "1110": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1111": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1112": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1114": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1115": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1116": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1117": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1119": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1120": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1121": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1122": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1123": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1124": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1125": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1127": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1128": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1129": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1131": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "NOT",
      "path": "5"
    },
    "1132": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1134": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1135": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ADD",
      "path": "5"
    },
    "1136": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "AND",
      "path": "5"
    },
    "1137": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1138": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ADD",
      "path": "5"
    },
    "1139": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1140": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1142": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1143": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1144": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1145": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "ADD",
      "path": "5"
    },
    "1146": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1147": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x484"
    },
    "1150": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1151": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1152": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1148"
    },
    "1155": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        12568,
        12639
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1156": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1157": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12568,
        12639
      ],
      "op": "POP",
      "path": "5"
    },
    "1158": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12664,
        12673
      ],
      "op": "PUSH9",
      "path": "5",
      "value": "0x2B5E3AF16B1880000"
    },
    "1168": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12660
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1169": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12673
      ],
      "op": "LT",
      "path": "5"
    },
    "1170": {
      "branch": 50,
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12673
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1171": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1172": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1173": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A6"
    },
    "1176": {
      "branch": 50,
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1177": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "POP",
      "path": "5"
    },
    "1178": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12687,
        12697
      ],
      "op": "PUSH9",
      "path": "5",
      "value": "0xD8D726B7177A80000"
    },
    "1188": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12677,
        12684
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1189": {
      "branch": 51,
      "fn": "LockContract.new_Investor",
      "offset": [
        12677,
        12697
      ],
      "op": "LT",
      "path": "5"
    },
    "1190": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12653,
        12697
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1191": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12650,
        13926
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1192": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12650,
        13926
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CB"
    },
    "1195": {
      "branch": 51,
      "fn": "LockContract.new_Investor",
      "offset": [
        12650,
        13926
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1196": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12726
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x4"
    },
    "1198": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1199": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1200": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1202": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1203": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1204": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "ADD",
      "path": "5"
    },
    "1205": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1206": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1207": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1208": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1241": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "ADD",
      "path": "5"
    },
    "1242": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1243": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1250": {
      "op": "SHL"
    },
    "1251": {
      "op": "SUB"
    },
    "1252": {
      "op": "NOT"
    },
    "1253": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "AND",
      "path": "5"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "SUB"
    },
    "1262": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1263": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "AND",
      "path": "5"
    },
    "1264": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1265": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1266": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "OR",
      "path": "5"
    },
    "1267": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1268": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1269": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1270": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12778
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x6"
    },
    "1272": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1273": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1274": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1275": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1276": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "ADD",
      "path": "5"
    },
    "1277": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1278": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1281": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1282": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1283": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1284": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1317": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1318": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1319": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "ADD",
      "path": "5"
    },
    "1320": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1321": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1322": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12767,
        12792
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1323": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1325": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1326": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1327": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1329": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1330": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1331": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1332": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1333": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1334": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1335": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1336": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12712,
        12753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1338": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1339": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1340": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1341": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1342": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1343": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1344": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1345": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1346": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1347": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1348": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13087,
        13100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "1350": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13087,
        13100
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1351": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1353": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1354": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1355": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1356": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13069,
        13100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x555"
    },
    "1359": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13069,
        13100
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1360": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13069,
        13084
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1361": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13069,
        13100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "1364": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        13069,
        13100
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1365": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13069,
        13100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1366": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1367": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1368": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13150,
        13154
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1370": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1372": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1373": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1374": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1375": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1376": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1377": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12879,
        13155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "SHL"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 9
    },
    "1387": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1388": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "AND",
      "path": "5"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1392": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1393": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1394": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1396": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1397": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1398": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1399": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1401": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1402": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1403": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1404": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13275
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1405": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1406": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1407": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1408": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "op": "NOT"
    },
    "1418": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "AND",
      "path": "5"
    },
    "1419": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "1420": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "AND",
      "path": "5"
    },
    "1421": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1422": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1423": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1424": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "OR",
      "path": "5"
    },
    "1425": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1426": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1427": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1428": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1429": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1430": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1431": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1432": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1433": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1434": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1435": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1436": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1437": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1438": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1439": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1440": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1441": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1442": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1443": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1444": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1445": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1447": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1448": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1449": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1450": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1452": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1453": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1454": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1455": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1457": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1458": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1459": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1461": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1462": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1463": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ADD",
      "path": "5"
    },
    "1464": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1465": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1468": {
      "op": "NOT"
    },
    "1469": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "AND",
      "path": "5"
    },
    "1470": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1471": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1472": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1473": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1474": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1475": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1476": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "OR",
      "path": "5"
    },
    "1477": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1478": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1479": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13237,
        13284
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "fn": "LockContract.new_Investor",
      "jump": "o",
      "offset": [
        11841,
        13932
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1483": {
      "fn": "LockContract.new_Investor",
      "offset": [
        12650,
        13926
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1484": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13343
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x5"
    },
    "1486": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1487": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1488": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1490": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1491": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1492": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "ADD",
      "path": "5"
    },
    "1493": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1494": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1495": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1496": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1529": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "ADD",
      "path": "5"
    },
    "1530": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1531": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "SUB"
    },
    "1540": {
      "op": "NOT"
    },
    "1541": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "AND",
      "path": "5"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1548": {
      "op": "SHL"
    },
    "1549": {
      "op": "SUB"
    },
    "1550": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1551": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "AND",
      "path": "5"
    },
    "1552": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1553": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1554": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "OR",
      "path": "5"
    },
    "1555": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1556": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1557": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1558": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13396
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x7"
    },
    "1560": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1561": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1562": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1563": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1564": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "ADD",
      "path": "5"
    },
    "1565": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1566": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1569": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1570": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1571": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1572": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688"
    },
    "1605": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1606": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1607": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "ADD",
      "path": "5"
    },
    "1608": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1609": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1610": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13384,
        13410
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1611": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1613": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1614": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1615": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "1617": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1618": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "ADD",
      "path": "5"
    },
    "1619": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1620": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1621": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1622": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1623": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1624": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13328,
        13370
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1626": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1627": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "ADD",
      "path": "5"
    },
    "1628": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1629": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1630": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1631": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1632": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "ADD",
      "path": "5"
    },
    "1633": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1634": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1635": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1636": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13705,
        13719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x11"
    },
    "1638": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13705,
        13719
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1639": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1641": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1642": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "ADD",
      "path": "5"
    },
    "1643": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13497,
        13784
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1644": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13687,
        13719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x555"
    },
    "1647": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13687,
        13719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1648": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13687,
        13702
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1649": {
      "fn": "LockContract.new_Investor",
      "offset": [
        13687,
        13719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "1652": {
      "fn": "LockContract.new_Investor",
      "jump": "i",
      "offset": [
        13687,
        13719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1654": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1656": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1666": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 12
    },
    "1667": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1668": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1671": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1674": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1683": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1686": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1690": {
      "op": "DUP2"
    },
    "1691": {
      "op": "SWAP1"
    },
    "1692": {
      "op": "MSTORE"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1695": {
      "op": "DUP3"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "MSTORE"
    },
    "1698": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1733": {
      "op": "DUP3"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "op": "MSTORE"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "1742": {
      "op": "JUMP"
    },
    "1743": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x6D9"
    },
    "1747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB64"
    },
    "1752": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1753": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1754": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1755": {
      "fn": "LockContract.release",
      "offset": [
        8105,
        8760
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1756": {
      "offset": [
        7719,
        7725
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "1758": {
      "fn": "LockContract.release",
      "offset": [
        7719,
        7725
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "offset": [
        7719,
        7725
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1765": {
      "fn": "LockContract.release",
      "offset": [
        7719,
        7725
      ],
      "op": "DIV",
      "path": "5"
    },
    "1766": {
      "fn": "LockContract.release",
      "offset": [
        7719,
        7725
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1768": {
      "fn": "LockContract.release",
      "offset": [
        7719,
        7725
      ],
      "op": "AND",
      "path": "5"
    },
    "1769": {
      "offset": [
        7718,
        7725
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1770": {
      "offset": [
        7710,
        7744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x726"
    },
    "1773": {
      "offset": [
        7710,
        7744
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1774": {
      "fn": "LockContract.release",
      "offset": [
        7710,
        7744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1776": {
      "fn": "LockContract.release",
      "offset": [
        7710,
        7744
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1783": {
      "op": "SHL"
    },
    "1784": {
      "offset": [
        7710,
        7744
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1785": {
      "fn": "LockContract.release",
      "offset": [
        7710,
        7744
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1788": {
      "offset": [
        7710,
        7744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1790": {
      "fn": "LockContract.release",
      "offset": [
        7710,
        7744
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1791": {
      "fn": "LockContract.release",
      "offset": [
        7710,
        7744
      ],
      "op": "ADD",
      "path": "5"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1797": {
      "op": "DUP3"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH14",
      "value": "0x4E6F2072652D656E7472616E6379"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1817": {
      "op": "SHL"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1820": {
      "op": "DUP3"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1825": {
      "op": "ADD"
    },
    "1826": {
      "offset": [
        7710,
        7744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "1829": {
      "op": "JUMP"
    },
    "1830": {
      "offset": [
        7710,
        7744
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1831": {
      "offset": [
        7754,
        7760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "1833": {
      "offset": [
        7754,
        7767
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1834": {
      "fn": "LockContract.release",
      "offset": [
        7754,
        7767
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "NOT"
    },
    "1841": {
      "offset": [
        7754,
        7767
      ],
      "op": "AND",
      "path": "5"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "offset": [
        7754,
        7767
      ],
      "op": "OR",
      "path": "5"
    },
    "1848": {
      "fn": "LockContract.release",
      "offset": [
        7754,
        7767
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1849": {
      "fn": "LockContract.release",
      "offset": [
        7754,
        7767
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1850": {
      "offset": [
        7936,
        7946
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1851": {
      "offset": [
        7754,
        7767
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1853": {
      "offset": [
        7919,
        7947
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1854": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1855": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1856": {
      "offset": [
        7919,
        7935
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1858": {
      "offset": [
        7919,
        7947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1860": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1861": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1862": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1863": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1865": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1866": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7947
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1867": {
      "offset": [
        7919,
        7963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1868": {
      "fn": "LockContract.release",
      "offset": [
        7919,
        7963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1869": {
      "offset": [
        7919,
        7968
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1870": {
      "branch": 52,
      "fn": "LockContract.release",
      "offset": [
        7919,
        7968
      ],
      "op": "SUB",
      "path": "5"
    },
    "1871": {
      "offset": [
        7911,
        7988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x78C"
    },
    "1874": {
      "branch": 52,
      "offset": [
        7911,
        7988
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1875": {
      "fn": "LockContract.release",
      "offset": [
        7911,
        7988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1877": {
      "fn": "LockContract.release",
      "offset": [
        7911,
        7988
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1884": {
      "op": "SHL"
    },
    "1885": {
      "offset": [
        7911,
        7988
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1886": {
      "fn": "LockContract.release",
      "offset": [
        7911,
        7988
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1889": {
      "offset": [
        7911,
        7988
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1891": {
      "fn": "LockContract.release",
      "offset": [
        7911,
        7988
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1892": {
      "fn": "LockContract.release",
      "offset": [
        7911,
        7988
      ],
      "op": "ADD",
      "path": "5"
    },
    "1893": {
      "op": "MSTORE"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1898": {
      "op": "DUP3"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH15",
      "value": "0x2737BA1030B71034B73B32B9BA37B9"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1922": {
      "op": "DUP3"
    },
    "1923": {
      "op": "ADD"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "offset": [
        7911,
        7988
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "1931": {
      "op": "JUMP"
    },
    "1932": {
      "offset": [
        7911,
        7988
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1933": {
      "fn": "LockContract.release",
      "offset": [
        8241,
        8259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1935": {
      "fn": "LockContract.release",
      "offset": [
        8262,
        8319
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x798"
    },
    "1938": {
      "fn": "LockContract.release",
      "offset": [
        8282,
        8292
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1939": {
      "fn": "LockContract.release",
      "offset": [
        8302,
        8317
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1940": {
      "fn": "LockContract.release",
      "offset": [
        8262,
        8281
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB4"
    },
    "1943": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8262,
        8319
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1944": {
      "fn": "LockContract.release",
      "offset": [
        8262,
        8319
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1945": {
      "fn": "LockContract.release",
      "offset": [
        8241,
        8319
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1946": {
      "fn": "LockContract.release",
      "offset": [
        8241,
        8319
      ],
      "op": "POP",
      "path": "5"
    },
    "1947": {
      "fn": "LockContract.release",
      "offset": [
        8404,
        8414
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 14
    },
    "1948": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8400
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "1950": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8400
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1952": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1953": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1954": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1955": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7AC"
    },
    "1958": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1959": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1960": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "1963": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8387,
        8414
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1964": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1965": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1966": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1967": {
      "fn": "LockContract.release",
      "offset": [
        8387,
        8414
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x12"
    },
    "1972": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1973": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1975": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "DUP2"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "SUB"
    },
    "1987": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1988": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1989": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "AND",
      "path": "5"
    },
    "1990": {
      "fn": "LockContract.release",
      "offset": [
        8470,
        8482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1991": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
    },
    "2024": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2030": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2031": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2032": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2033": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "SUB",
      "path": "5"
    },
    "2034": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2035": {
      "fn": "LockContract.release",
      "offset": [
        8456,
        8495
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2036": {
      "fn": "LockContract.release",
      "offset": [
        8583,
        8595
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x12"
    },
    "2038": {
      "fn": "LockContract.release",
      "offset": [
        8583,
        8595
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2039": {
      "fn": "LockContract.release",
      "offset": [
        8553,
        8621
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80A"
    },
    "2042": {
      "fn": "LockContract.release",
      "offset": [
        8553,
        8621
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "LockContract.release",
      "offset": [
        8583,
        8595
      ],
      "op": "AND",
      "path": "5"
    },
    "2052": {
      "fn": "LockContract.release",
      "offset": [
        8598,
        8608
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2053": {
      "fn": "LockContract.release",
      "offset": [
        8610,
        8620
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2054": {
      "fn": "LockContract.release",
      "offset": [
        8553,
        8575
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE20"
    },
    "2057": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8553,
        8621
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2058": {
      "fn": "LockContract.release",
      "offset": [
        8553,
        8621
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2059": {
      "fn": "LockContract.release",
      "offset": [
        8712,
        8722
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 17
    },
    "2060": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2062": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2063": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2064": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2065": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8711
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2067": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2069": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2070": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2072": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2073": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2074": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2076": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8739
      ],
      "op": "ADD",
      "path": "5"
    },
    "2077": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2078": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2079": {
      "fn": "LockContract.release",
      "offset": [
        8743,
        8753
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2080": {
      "fn": "LockContract.release",
      "offset": [
        8743,
        8753
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2081": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2082": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82C"
    },
    "2085": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2086": {
      "fn": "LockContract.release",
      "offset": [
        8743,
        8753
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2087": {
      "fn": "LockContract.release",
      "offset": [
        8743,
        8753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2088": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "2091": {
      "fn": "LockContract.release",
      "jump": "i",
      "offset": [
        8695,
        8753
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2092": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2093": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2094": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2095": {
      "fn": "LockContract.release",
      "offset": [
        8695,
        8753
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "offset": [
        7788,
        7794
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "2100": {
      "offset": [
        7788,
        7802
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2101": {
      "fn": "LockContract.release",
      "offset": [
        7788,
        7802
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "op": "NOT"
    },
    "2108": {
      "offset": [
        7788,
        7802
      ],
      "op": "AND",
      "path": "5"
    },
    "2109": {
      "fn": "LockContract.release",
      "offset": [
        7788,
        7802
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2110": {
      "fn": "LockContract.release",
      "offset": [
        7788,
        7802
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2111": {
      "op": "POP"
    },
    "2112": {
      "fn": "LockContract.release",
      "jump": "o",
      "offset": [
        8105,
        8760
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2114": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2116": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "SUB"
    },
    "2125": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2126": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2127": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2128": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89B"
    },
    "2131": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2134": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2146": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2148": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2149": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2150": {
      "op": "DUP2"
    },
    "2151": {
      "op": "SWAP1"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2155": {
      "op": "DUP3"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "op": "MSTORE"
    },
    "2158": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2193": {
      "op": "DUP3"
    },
    "2194": {
      "op": "ADD"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2198": {
      "op": "ADD"
    },
    "2199": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "2202": {
      "op": "JUMP"
    },
    "2203": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "op": "SUB"
    },
    "2212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 18
    },
    "2213": {
      "branch": 62,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x900"
    },
    "2217": {
      "branch": 62,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2236": {
      "op": "MSTORE"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "op": "MSTORE"
    },
    "2282": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2294": {
      "op": "DUP3"
    },
    "2295": {
      "op": "ADD"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299"
    },
    "2303": {
      "op": "JUMP"
    },
    "2304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x909"
    },
    "2308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2309": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB64"
    },
    "2312": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2313": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2315": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2316": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14044,
        16810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2317": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14228,
        14238
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2318": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14101,
        14108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2320": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2321": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2322": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2323": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14227
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2325": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2327": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2328": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2329": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2330": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2332": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2333": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14239
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2334": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2336": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2337": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14255
      ],
      "op": "ADD",
      "path": "5"
    },
    "2338": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14211,
        14255
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2339": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14338,
        14382
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2340": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14338,
        14382
      ],
      "op": "ADD",
      "path": "5"
    },
    "2341": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14338,
        14382
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2342": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14475,
        14508
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 20
    },
    "2343": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14475,
        14508
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2344": {
      "branch": 53,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14475,
        14508
      ],
      "op": "LT",
      "path": "5"
    },
    "2345": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x974"
    },
    "2348": {
      "branch": 53,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2349": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2351": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2360": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2363": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2365": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2366": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "ADD",
      "path": "5"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "2419": {
      "op": "JUMP"
    },
    "2420": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14467,
        14541
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2421": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14747,
        14757
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2422": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14593,
        14614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2424": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2425": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2426": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2427": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14746
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2429": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2431": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2432": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2434": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2435": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14758
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2436": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14772
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2438": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14772
      ],
      "op": "ADD",
      "path": "5"
    },
    "2439": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14730,
        14772
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2440": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14617,
        14632
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2441": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14617,
        14632
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2442": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14888,
        14918
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 21
    },
    "2443": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14888,
        14918
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2444": {
      "branch": 54,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14888,
        14918
      ],
      "op": "GT",
      "path": "5"
    },
    "2445": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D8"
    },
    "2448": {
      "branch": 54,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2449": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2451": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2460": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2463": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2465": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2466": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "ADD",
      "path": "5"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2472": {
      "op": "DUP3"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "PUSH32",
      "value": "0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2510": {
      "op": "DUP3"
    },
    "2511": {
      "op": "ADD"
    },
    "2512": {
      "op": "MSTORE"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "2519": {
      "op": "JUMP"
    },
    "2520": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14880,
        14951
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2521": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15034,
        15054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2523": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15034,
        15054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2524": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15348,
        15349
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2526": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2527": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15355,
        15376
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2529": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15355,
        15383
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2530": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15351,
        15383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2531": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15351,
        15383
      ],
      "op": "GT",
      "path": "5"
    },
    "2532": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB4B"
    },
    "2535": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2536": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15527,
        15536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F4"
    },
    "2539": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15535,
        15536
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2540": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15527,
        15534
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2544": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15527,
        15536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2547": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15527,
        15536
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2548": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15527,
        15536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2549": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15512,
        15536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9FE"
    },
    "2552": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15512,
        15536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2553": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15512,
        15526
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2554": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15512,
        15536
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "2557": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15512,
        15536
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2558": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15512,
        15536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2559": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15495,
        15508
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2560": {
      "branch": 55,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15495,
        15537
      ],
      "op": "GT",
      "path": "5"
    },
    "2561": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2562": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAA0"
    },
    "2565": {
      "branch": 55,
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2566": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15740,
        15743
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 22,
      "value": "0xA10"
    },
    "2569": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15742,
        15743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2571": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15740,
        15741
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2572": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15740,
        15743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2575": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15740,
        15743
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2576": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15740,
        15743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2577": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15731,
        15744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1D"
    },
    "2580": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15731,
        15744
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2581": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15731,
        15738
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2585": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15731,
        15744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2588": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15731,
        15744
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2589": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15731,
        15744
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2590": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2A"
    },
    "2593": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15728,
        15729
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2594": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15727
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2598": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15729
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2601": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15720,
        15729
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2602": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2603": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA34"
    },
    "2606": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15744
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2607": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15744
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2608": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2611": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15720,
        15744
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2612": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15720,
        15744
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2613": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15700,
        15744
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15700,
        15744
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2616": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15997,
        16004
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 23,
      "value": "0x278D00"
    },
    "2620": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15991,
        15996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "2623": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2625": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15986,
        15989
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA4B"
    },
    "2628": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15988,
        15989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2630": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15986,
        15987
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2631": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15986,
        15989
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2634": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15986,
        15989
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2635": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15986,
        15989
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2636": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2637": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2638": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2639": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "LT",
      "path": "5"
    },
    "2640": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5B"
    },
    "2643": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2644": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5B"
    },
    "2647": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CE"
    },
    "2650": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15964,
        15990
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2651": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2652": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2653": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2655": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2656": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2658": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2660": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2661": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "ADD",
      "path": "5"
    },
    "2662": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15964,
        15990
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2663": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15940
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2664": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA71"
    },
    "2667": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15990
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2668": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15990
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2669": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15990
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2672": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15924,
        15990
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2673": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15990
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2674": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA7B"
    },
    "2677": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15996
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2678": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2679": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "2682": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15924,
        15996
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2683": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        15996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2684": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA85"
    },
    "2687": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16004
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2688": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16004
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2689": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16004
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "2692": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15924,
        16004
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2693": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16004
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2694": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA8F"
    },
    "2697": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16025
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2698": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16025
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2699": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2702": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15924,
        16025
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2703": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15924,
        16025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2704": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15888,
        16025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA99"
    },
    "2707": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15888,
        16025
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2708": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15888,
        15900
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2709": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15888,
        16025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "2712": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15888,
        16025
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2713": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15888,
        16025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2714": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15873,
        16025
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2715": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15873,
        16025
      ],
      "op": "POP",
      "path": "5"
    },
    "2716": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB39"
    },
    "2719": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2720": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2721": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16360,
        16374
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 24
    },
    "2722": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16355,
        16358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAAC"
    },
    "2725": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16357,
        16358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2727": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16355,
        16356
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2728": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16355,
        16358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2731": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16355,
        16358
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2732": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16355,
        16358
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2733": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16346,
        16359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB9"
    },
    "2736": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16346,
        16359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2737": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16346,
        16353
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "2741": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16346,
        16359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2744": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16346,
        16359
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2745": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16346,
        16359
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2746": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC3"
    },
    "2749": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2750": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16343
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2751": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2754": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16330,
        16359
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2755": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16359
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2756": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16374
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xACD"
    },
    "2759": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16374
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2760": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16374
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2761": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16374
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2764": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16330,
        16374
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2765": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16330,
        16374
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2766": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16309,
        16374
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2767": {
      "op": "POP"
    },
    "2768": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16309,
        16374
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2769": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16533,
        16540
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 25,
      "value": "0x278D00"
    },
    "2773": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16527,
        16532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "2776": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2778": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16522,
        16525
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE4"
    },
    "2781": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16524,
        16525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2783": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16522,
        16523
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2784": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16522,
        16525
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2787": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16522,
        16525
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2788": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16522,
        16525
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2789": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2790": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2791": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2792": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "LT",
      "path": "5"
    },
    "2793": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF4"
    },
    "2796": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2797": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF4"
    },
    "2800": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CE"
    },
    "2803": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16500,
        16526
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2804": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2805": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2806": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2808": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2809": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2811": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2813": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2814": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "ADD",
      "path": "5"
    },
    "2815": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16500,
        16526
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2816": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16476
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2817": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB0A"
    },
    "2820": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16526
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2821": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16526
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2822": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2825": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16460,
        16526
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2826": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16526
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2827": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB14"
    },
    "2830": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16532
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2831": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16532
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2832": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16532
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "2835": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16460,
        16532
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2836": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16532
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2837": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16540
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB1E"
    },
    "2840": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16540
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2841": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2842": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16540
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "2845": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16460,
        16540
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2846": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16540
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2847": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB28"
    },
    "2850": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16561
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2851": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2852": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "2855": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16460,
        16561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2856": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16460,
        16561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2857": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16424,
        16561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB32"
    },
    "2860": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16424,
        16561
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2861": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16424,
        16436
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2862": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16424,
        16561
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "2865": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16424,
        16561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2866": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16424,
        16561
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2867": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16409,
        16561
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2868": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16409,
        16561
      ],
      "op": "POP",
      "path": "5"
    },
    "2869": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16580,
        16585
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0xB4B"
    },
    "2872": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16580,
        16585
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2873": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15492,
        16600
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2874": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 27
    },
    "2875": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB43"
    },
    "2878": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2879": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1206"
    },
    "2882": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        15385,
        15388
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2883": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2884": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2885": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "POP",
      "path": "5"
    },
    "2886": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15385,
        15388
      ],
      "op": "POP",
      "path": "5"
    },
    "2887": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9DE"
    },
    "2890": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2891": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        15335,
        16610
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16693,
        16717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2895": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16720,
        16749
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB58"
    },
    "2898": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16735,
        16749
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2899": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16720,
        16732
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2900": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16720,
        16749
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "2903": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "i",
      "offset": [
        16720,
        16749
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2904": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16720,
        16749
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2905": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        16693,
        16749
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "2906": {
      "fn": "LockContract.view_can_release_percent",
      "offset": [
        14044,
        16810
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "fn": "LockContract.view_can_release_percent",
      "jump": "o",
      "offset": [
        14044,
        16810
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2919": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2920": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2927": {
      "op": "SHL"
    },
    "2928": {
      "op": "SUB"
    },
    "2929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 28
    },
    "2930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2942": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "2943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2944": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "2945": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2946": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2947": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x40"
    },
    "2949": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2950": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2952": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2953": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "2954": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2955": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2956": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2957": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2992": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2993": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2994": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "2995": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2996": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8975,
        11786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3003": {
      "op": "SHL"
    },
    "3004": {
      "op": "SUB"
    },
    "3005": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3006": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "AND",
      "path": "5"
    },
    "3007": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9074,
        9081
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3009": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3010": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3011": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3012": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3014": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3016": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3017": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3018": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3019": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3021": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3022": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9216
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3023": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3025": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9232
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3026": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9232
      ],
      "op": "ADD",
      "path": "5"
    },
    "3027": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9184,
        9232
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3028": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9315,
        9363
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3029": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9315,
        9363
      ],
      "op": "ADD",
      "path": "5"
    },
    "3030": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9315,
        9363
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3031": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9456,
        9489
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 30
    },
    "3032": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9456,
        9489
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3033": {
      "branch": 56,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9456,
        9489
      ],
      "op": "LT",
      "path": "5"
    },
    "3034": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC25"
    },
    "3037": {
      "branch": 56,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3038": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3040": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3047": {
      "op": "SHL"
    },
    "3048": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3049": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3052": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3054": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3055": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "ADD",
      "path": "5"
    },
    "3056": {
      "op": "MSTORE"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "ADD"
    },
    "3063": {
      "op": "MSTORE"
    },
    "3064": {
      "op": "PUSH32",
      "value": "0x416C6C20746F6B656E732068617665206265656E20636C61696D656400000000"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "3108": {
      "op": "JUMP"
    },
    "3109": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9448,
        9522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3119": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "AND",
      "path": "5"
    },
    "3120": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9574,
        9595
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3122": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3123": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3124": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3125": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9722
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3127": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3129": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3130": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3132": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3133": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9738
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3134": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3136": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9752
      ],
      "op": "ADD",
      "path": "5"
    },
    "3137": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9706,
        9752
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3138": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9598,
        9608
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3139": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9598,
        9608
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3140": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        9898
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "3141": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        9898
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3142": {
      "branch": 57,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9868,
        9898
      ],
      "op": "GT",
      "path": "5"
    },
    "3143": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC92"
    },
    "3146": {
      "branch": 57,
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3147": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3149": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3156": {
      "op": "SHL"
    },
    "3157": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3158": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3161": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3163": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3164": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "ADD",
      "path": "5"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "MSTORE"
    },
    "3173": {
      "op": "PUSH32",
      "value": "0x4C6F636B2074696D6520686173206E6F74207061737365642079657400000000"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3208": {
      "op": "DUP3"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "op": "MSTORE"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3213": {
      "op": "ADD"
    },
    "3214": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x299"
    },
    "3217": {
      "op": "JUMP"
    },
    "3218": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        9860,
        9931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3219": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10014,
        10034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3221": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10014,
        10034
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3222": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10324,
        10325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3224": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3225": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10331,
        10352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3227": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10331,
        10359
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3228": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10327,
        10359
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3229": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10327,
        10359
      ],
      "op": "GT",
      "path": "5"
    },
    "3230": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE05"
    },
    "3233": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3234": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10503,
        10512
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCAE"
    },
    "3237": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10511,
        10512
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3238": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10503,
        10510
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3242": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10503,
        10512
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3245": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10503,
        10512
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3246": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10503,
        10512
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3247": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10488,
        10512
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB8"
    },
    "3250": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10488,
        10512
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3251": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10488,
        10502
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3252": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10488,
        10512
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "3255": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10488,
        10512
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3256": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10488,
        10512
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3257": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10471,
        10484
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3258": {
      "branch": 58,
      "fn": "LockContract.can_release_percent",
      "offset": [
        10471,
        10513
      ],
      "op": "GT",
      "path": "5"
    },
    "3259": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3260": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5A"
    },
    "3263": {
      "branch": 58,
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3264": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10716,
        10719
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 32,
      "value": "0xCCA"
    },
    "3267": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10718,
        10719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3269": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10716,
        10717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3270": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10716,
        10719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3273": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10716,
        10719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3274": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10716,
        10719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3275": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10707,
        10720
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD7"
    },
    "3278": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10707,
        10720
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3279": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10707,
        10714
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3283": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10707,
        10720
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3286": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10707,
        10720
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3287": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10707,
        10720
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3288": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10705
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE4"
    },
    "3291": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10704,
        10705
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3292": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10703
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3296": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10705
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3299": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10696,
        10705
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3300": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10705
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3301": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10720
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCEE"
    },
    "3304": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10720
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3305": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10720
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3306": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10720
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3309": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10696,
        10720
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3310": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10696,
        10720
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3311": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10676,
        10720
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3312": {
      "op": "POP"
    },
    "3313": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10676,
        10720
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3314": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10973,
        10980
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 33,
      "value": "0x278D00"
    },
    "3318": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10967,
        10972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "3321": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3323": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10962,
        10965
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD05"
    },
    "3326": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10964,
        10965
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3328": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10962,
        10963
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3329": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10962,
        10965
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3332": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10962,
        10965
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3333": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10962,
        10965
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3334": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3335": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3336": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3337": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "LT",
      "path": "5"
    },
    "3338": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD15"
    },
    "3341": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3342": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD15"
    },
    "3345": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CE"
    },
    "3348": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10940,
        10966
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3349": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3350": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3351": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3353": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3354": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3356": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3358": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3359": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "ADD",
      "path": "5"
    },
    "3360": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10940,
        10966
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3361": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10916
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3362": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2B"
    },
    "3365": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10966
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3366": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10966
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3367": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10966
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3370": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10900,
        10966
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3371": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10966
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3372": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD35"
    },
    "3375": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10972
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3376": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3377": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10972
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "3380": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10900,
        10972
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3381": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10972
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3382": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10980
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3F"
    },
    "3385": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10980
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3386": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10980
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3387": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10980
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "3390": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10900,
        10980
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3391": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        10980
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3392": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        11001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD49"
    },
    "3395": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        11001
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3396": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        11001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3397": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        11001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3400": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10900,
        11001
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3401": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10900,
        11001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3402": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10864,
        11001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD53"
    },
    "3405": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10864,
        11001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3406": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10864,
        10876
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3407": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10864,
        11001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "3410": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10864,
        11001
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3411": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10864,
        11001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3412": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10849,
        11001
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3413": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10849,
        11001
      ],
      "op": "POP",
      "path": "5"
    },
    "3414": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF3"
    },
    "3417": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3418": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3419": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11336,
        11350
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 34
    },
    "3420": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11331,
        11334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD66"
    },
    "3423": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11333,
        11334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3425": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11331,
        11332
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3426": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11331,
        11334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3429": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11331,
        11334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3430": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11331,
        11334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3431": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11322,
        11335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD73"
    },
    "3434": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11322,
        11335
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3435": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11322,
        11329
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x278D00"
    },
    "3439": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11322,
        11335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3442": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11322,
        11335
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3443": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11322,
        11335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3444": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD7D"
    },
    "3447": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11335
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3448": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11319
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3449": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3452": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11306,
        11335
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3453": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3454": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD87"
    },
    "3457": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11350
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3458": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11350
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3459": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11350
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3462": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11306,
        11350
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3463": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11306,
        11350
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3464": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11285,
        11350
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11285,
        11350
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3467": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11509,
        11516
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 35,
      "value": "0x278D00"
    },
    "3471": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11503,
        11508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "3474": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3476": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11498,
        11501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD9E"
    },
    "3479": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11500,
        11501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3481": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11498,
        11499
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3482": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11498,
        11501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3485": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11498,
        11501
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3486": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11498,
        11501
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3487": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3488": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3489": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3490": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "LT",
      "path": "5"
    },
    "3491": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAE"
    },
    "3494": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3495": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAE"
    },
    "3498": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CE"
    },
    "3501": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11476,
        11502
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3502": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3503": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3504": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3506": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3507": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3509": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3511": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3512": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "ADD",
      "path": "5"
    },
    "3513": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11476,
        11502
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3514": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11452
      ],
      "op": "DUP10",
      "path": "5"
    },
    "3515": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC4"
    },
    "3518": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11502
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3519": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11502
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3520": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3523": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11436,
        11502
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3524": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11502
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3525": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCE"
    },
    "3528": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11508
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3529": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11508
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3530": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "3533": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11436,
        11508
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3534": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11508
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3535": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11516
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD8"
    },
    "3538": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11516
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3539": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3540": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11516
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E4"
    },
    "3543": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11436,
        11516
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3544": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11516
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3545": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE2"
    },
    "3548": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3549": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3550": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1198"
    },
    "3553": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11436,
        11537
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3554": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11436,
        11537
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3555": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11400,
        11537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDEC"
    },
    "3558": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11400,
        11537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3559": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11400,
        11412
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3560": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11400,
        11537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1180"
    },
    "3563": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11400,
        11537
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3564": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11400,
        11537
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3565": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11385,
        11537
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3566": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11385,
        11537
      ],
      "op": "POP",
      "path": "5"
    },
    "3567": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11556,
        11561
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0xE05"
    },
    "3570": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11556,
        11561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3571": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10468,
        11576
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3572": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 37
    },
    "3573": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDFD"
    },
    "3576": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3577": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1206"
    },
    "3580": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        10361,
        10364
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3581": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3582": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3583": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "POP",
      "path": "5"
    },
    "3584": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10361,
        10364
      ],
      "op": "POP",
      "path": "5"
    },
    "3585": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC98"
    },
    "3588": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3589": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        10311,
        11586
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11669,
        11693
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3593": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11696,
        11725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE12"
    },
    "3596": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11711,
        11725
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3597": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11696,
        11708
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3598": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11696,
        11725
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11B7"
    },
    "3601": {
      "fn": "LockContract.can_release_percent",
      "jump": "i",
      "offset": [
        11696,
        11725
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3602": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11696,
        11725
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3603": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        11669,
        11725
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "3604": {
      "fn": "LockContract.can_release_percent",
      "offset": [
        8975,
        11786
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "POP"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "op": "POP"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "fn": "LockContract.can_release_percent",
      "jump": "o",
      "offset": [
        8975,
        11786
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3616": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3617": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x40"
    },
    "3619": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3620": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3627": {
      "op": "SHL"
    },
    "3628": {
      "op": "SUB"
    },
    "3629": {
      "op": "DUP5"
    },
    "3630": {
      "op": "AND"
    },
    "3631": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3633": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3634": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3638": {
      "op": "DUP1"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "DUP5"
    },
    "3642": {
      "op": "SWAP1"
    },
    "3643": {
      "op": "MSTORE"
    },
    "3644": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3645": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3646": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3647": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3648": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "3649": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3650": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3651": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3652": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3653": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3656": {
      "op": "SWAP1"
    },
    "3657": {
      "op": "SWAP2"
    },
    "3658": {
      "op": "ADD"
    },
    "3659": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3660": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3661": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3662": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3664": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3665": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "3666": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3667": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "3677": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "3686": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3687": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3688": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE72"
    },
    "3691": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3692": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3693": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3694": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE77"
    },
    "3697": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3698": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3699": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3700": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3701": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "3702": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3703": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3704": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3706": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECC"
    },
    "3709": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3710": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3713": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3714": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3716": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3717": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3719": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3720": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3721": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3725": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3728": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "3761": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3762": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3763": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "3764": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "op": "SUB"
    },
    "3773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "3774": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF49"
    },
    "3777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3778": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3779": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3781": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3786": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "3787": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3788": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3792": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "branch": 63,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3795": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE72"
    },
    "3798": {
      "branch": 63,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3799": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "3800": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3801": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3803": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3804": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3805": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3806": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3807": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "3808": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3809": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEA"
    },
    "3812": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3813": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3814": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1148"
    },
    "3817": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3818": {
      "branch": 64,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3819": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE72"
    },
    "3822": {
      "branch": 64,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3823": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3834": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3837": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3839": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3840": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3846": {
      "op": "DUP3"
    },
    "3847": {
      "op": "ADD"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3884": {
      "op": "DUP3"
    },
    "3885": {
      "op": "ADD"
    },
    "3886": {
      "op": "MSTORE"
    },
    "3887": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "MSTORE"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299"
    },
    "3912": {
      "op": "JUMP"
    },
    "3913": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3914": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3916": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0xF58"
    },
    "3919": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3920": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3921": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3923": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3924": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF62"
    },
    "3927": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3928": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3929": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3930": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "3931": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3932": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3933": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3934": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3935": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3936": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "3937": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 41
    },
    "3942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "3943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "3944": {
      "branch": 59,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC3"
    },
    "3948": {
      "branch": 59,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3952": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3958": {
      "op": "SHL"
    },
    "3959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "MSTORE"
    },
    "3975": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4010": {
      "op": "DUP3"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "MSTORE"
    },
    "4013": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "4022": {
      "op": "SHL"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4025": {
      "op": "DUP3"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "MSTORE"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "4034": {
      "op": "JUMP"
    },
    "4035": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4042": {
      "op": "SHL"
    },
    "4043": {
      "op": "SUB"
    },
    "4044": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 42
    },
    "4045": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "4046": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4047": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 43,
      "value": "0x101A"
    },
    "4050": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4051": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4053": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4062": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4065": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4067": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4068": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "4069": {
      "op": "MSTORE"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4074": {
      "op": "DUP3"
    },
    "4075": {
      "op": "ADD"
    },
    "4076": {
      "op": "MSTORE"
    },
    "4077": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "4121": {
      "op": "JUMP"
    },
    "4122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "SUB"
    },
    "4135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "4136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1036"
    },
    "4144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124F"
    },
    "4149": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4155": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "4159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "4163": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "4164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4166": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4173": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "4174": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1073"
    },
    "4177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4180": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4182": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "4186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "4188": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "4191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4192": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4202": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "4206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1078"
    },
    "4210": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4215": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4216": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4217": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4219": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4220": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4221": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "4222": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 44,
      "value": "0x1088"
    },
    "4225": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4226": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4227": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4228": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1093"
    },
    "4231": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4232": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4235": {
      "op": "POP"
    },
    "4236": {
      "op": "POP"
    },
    "4237": {
      "op": "POP"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "op": "POP"
    },
    "4240": {
      "op": "POP"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4243": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4244": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4246": {
      "branch": 60,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4247": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4248": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A2"
    },
    "4251": {
      "branch": 60,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 45
    },
    "4254": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5B"
    },
    "4257": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4258": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4259": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4260": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4261": {
      "branch": 61,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4262": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B2"
    },
    "4265": {
      "branch": 61,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4266": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4267": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4268": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4269": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4270": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4272": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "4273": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4274": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4275": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 46
    },
    "4276": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4278": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4287": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4288": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4290": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "4291": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x299"
    },
    "4294": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4295": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4296": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126B"
    },
    "4299": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "DUP1"
    },
    "4302": {
      "op": "CALLDATALOAD"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4309": {
      "op": "SHL"
    },
    "4310": {
      "op": "SUB"
    },
    "4311": {
      "op": "DUP2"
    },
    "4312": {
      "op": "AND"
    },
    "4313": {
      "op": "DUP2"
    },
    "4314": {
      "op": "EQ"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4318": {
      "op": "JUMPI"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4321": {
      "op": "DUP1"
    },
    "4322": {
      "op": "REVERT"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "SWAP2"
    },
    "4325": {
      "op": "SWAP1"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "jump": "o",
      "op": "JUMP"
    },
    "4328": {
      "op": "JUMPDEST"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4331": {
      "op": "DUP1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4334": {
      "op": "DUP4"
    },
    "4335": {
      "op": "DUP6"
    },
    "4336": {
      "op": "SUB"
    },
    "4337": {
      "op": "SLT"
    },
    "4338": {
      "op": "ISZERO"
    },
    "4339": {
      "op": "PUSH2",
      "value": "0x10FB"
    },
    "4342": {
      "op": "JUMPI"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4345": {
      "op": "DUP1"
    },
    "4346": {
      "op": "REVERT"
    },
    "4347": {
      "op": "JUMPDEST"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "CALLDATALOAD"
    },
    "4350": {
      "op": "SWAP2"
    },
    "4351": {
      "op": "POP"
    },
    "4352": {
      "op": "PUSH2",
      "value": "0x110B"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4357": {
      "op": "DUP5"
    },
    "4358": {
      "op": "ADD"
    },
    "4359": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4362": {
      "jump": "i",
      "op": "JUMP"
    },
    "4363": {
      "op": "JUMPDEST"
    },
    "4364": {
      "op": "SWAP1"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "SWAP3"
    },
    "4367": {
      "op": "POP"
    },
    "4368": {
      "op": "SWAP3"
    },
    "4369": {
      "op": "SWAP1"
    },
    "4370": {
      "op": "POP"
    },
    "4371": {
      "jump": "o",
      "op": "JUMP"
    },
    "4372": {
      "op": "JUMPDEST"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4377": {
      "op": "DUP3"
    },
    "4378": {
      "op": "DUP5"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "op": "SLT"
    },
    "4381": {
      "op": "ISZERO"
    },
    "4382": {
      "op": "PUSH2",
      "value": "0x1126"
    },
    "4385": {
      "op": "JUMPI"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "DUP1"
    },
    "4389": {
      "op": "REVERT"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4394": {
      "op": "DUP3"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4398": {
      "jump": "i",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "DUP5"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "op": "SLT"
    },
    "4408": {
      "op": "ISZERO"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x1141"
    },
    "4412": {
      "op": "JUMPI"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4415": {
      "op": "DUP1"
    },
    "4416": {
      "op": "REVERT"
    },
    "4417": {
      "op": "JUMPDEST"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "MLOAD"
    },
    "4420": {
      "op": "SWAP2"
    },
    "4421": {
      "op": "SWAP1"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "jump": "o",
      "op": "JUMP"
    },
    "4424": {
      "op": "JUMPDEST"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4429": {
      "op": "DUP3"
    },
    "4430": {
      "op": "DUP5"
    },
    "4431": {
      "op": "SUB"
    },
    "4432": {
      "op": "SLT"
    },
    "4433": {
      "op": "ISZERO"
    },
    "4434": {
      "op": "PUSH2",
      "value": "0x115A"
    },
    "4437": {
      "op": "JUMPI"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4440": {
      "op": "DUP1"
    },
    "4441": {
      "op": "REVERT"
    },
    "4442": {
      "op": "JUMPDEST"
    },
    "4443": {
      "op": "DUP2"
    },
    "4444": {
      "op": "MLOAD"
    },
    "4445": {
      "op": "DUP1"
    },
    "4446": {
      "op": "ISZERO"
    },
    "4447": {
      "op": "ISZERO"
    },
    "4448": {
      "op": "DUP2"
    },
    "4449": {
      "op": "EQ"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0xF5B"
    },
    "4453": {
      "op": "JUMPI"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4456": {
      "op": "DUP1"
    },
    "4457": {
      "op": "REVERT"
    },
    "4458": {
      "op": "JUMPDEST"
    },
    "4459": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4466": {
      "op": "SHL"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "MSTORE"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4479": {
      "op": "REVERT"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "NOT"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "GT"
    },
    "4487": {
      "op": "ISZERO"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4491": {
      "op": "JUMPI"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4498": {
      "jump": "i",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "ADD"
    },
    "4502": {
      "op": "SWAP1"
    },
    "4503": {
      "jump": "o",
      "op": "JUMP"
    },
    "4504": {
      "op": "JUMPDEST"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4510": {
      "op": "NOT"
    },
    "4511": {
      "op": "DIV"
    },
    "4512": {
      "op": "DUP4"
    },
    "4513": {
      "op": "GT"
    },
    "4514": {
      "op": "DUP3"
    },
    "4515": {
      "op": "ISZERO"
    },
    "4516": {
      "op": "ISZERO"
    },
    "4517": {
      "op": "AND"
    },
    "4518": {
      "op": "ISZERO"
    },
    "4519": {
      "op": "PUSH2",
      "value": "0x11B2"
    },
    "4522": {
      "op": "JUMPI"
    },
    "4523": {
      "op": "PUSH2",
      "value": "0x11B2"
    },
    "4526": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4529": {
      "jump": "i",
      "op": "JUMP"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "POP"
    },
    "4532": {
      "op": "MUL"
    },
    "4533": {
      "op": "SWAP1"
    },
    "4534": {
      "jump": "o",
      "op": "JUMP"
    },
    "4535": {
      "op": "JUMPDEST"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4538": {
      "op": "DUP3"
    },
    "4539": {
      "op": "DUP3"
    },
    "4540": {
      "op": "LT"
    },
    "4541": {
      "op": "ISZERO"
    },
    "4542": {
      "op": "PUSH2",
      "value": "0x11C9"
    },
    "4545": {
      "op": "JUMPI"
    },
    "4546": {
      "op": "PUSH2",
      "value": "0x11C9"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4552": {
      "jump": "i",
      "op": "JUMP"
    },
    "4553": {
      "op": "JUMPDEST"
    },
    "4554": {
      "op": "POP"
    },
    "4555": {
      "op": "SUB"
    },
    "4556": {
      "op": "SWAP1"
    },
    "4557": {
      "jump": "o",
      "op": "JUMP"
    },
    "4558": {
      "op": "JUMPDEST"
    },
    "4559": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4574": {
      "op": "MSTORE"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "REVERT"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "DUP3"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x1201"
    },
    "4587": {
      "op": "JUMPI"
    },
    "4588": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4598": {
      "op": "MSTORE"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4603": {
      "op": "MSTORE"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "REVERT"
    },
    "4609": {
      "op": "JUMPDEST"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "DIV"
    },
    "4612": {
      "op": "SWAP1"
    },
    "4613": {
      "jump": "o",
      "op": "JUMP"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "DUP3"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "PUSH2",
      "value": "0x1218"
    },
    "4624": {
      "op": "JUMPI"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x1218"
    },
    "4628": {
      "op": "PUSH2",
      "value": "0x116A"
    },
    "4631": {
      "jump": "i",
      "op": "JUMP"
    },
    "4632": {
      "op": "JUMPDEST"
    },
    "4633": {
      "op": "POP"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4636": {
      "op": "ADD"
    },
    "4637": {
      "op": "SWAP1"
    },
    "4638": {
      "jump": "o",
      "op": "JUMP"
    },
    "4639": {
      "op": "JUMPDEST"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4642": {
      "op": "JUMPDEST"
    },
    "4643": {
      "op": "DUP4"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "LT"
    },
    "4646": {
      "op": "ISZERO"
    },
    "4647": {
      "op": "PUSH2",
      "value": "0x123A"
    },
    "4650": {
      "op": "JUMPI"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "DUP2"
    },
    "4653": {
      "op": "ADD"
    },
    "4654": {
      "op": "MLOAD"
    },
    "4655": {
      "op": "DUP4"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "ADD"
    },
    "4658": {
      "op": "MSTORE"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4661": {
      "op": "ADD"
    },
    "4662": {
      "op": "PUSH2",
      "value": "0x1222"
    },
    "4665": {
      "op": "JUMP"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "DUP4"
    },
    "4668": {
      "op": "DUP2"
    },
    "4669": {
      "op": "GT"
    },
    "4670": {
      "op": "ISZERO"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4674": {
      "op": "JUMPI"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4677": {
      "op": "DUP5"
    },
    "4678": {
      "op": "DUP5"
    },
    "4679": {
      "op": "ADD"
    },
    "4680": {
      "op": "MSTORE"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "POP"
    },
    "4685": {
      "op": "POP"
    },
    "4686": {
      "jump": "o",
      "op": "JUMP"
    },
    "4687": {
      "op": "JUMPDEST"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4690": {
      "op": "DUP3"
    },
    "4691": {
      "op": "MLOAD"
    },
    "4692": {
      "op": "PUSH2",
      "value": "0x1261"
    },
    "4695": {
      "op": "DUP2"
    },
    "4696": {
      "op": "DUP5"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "op": "DUP8"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "op": "PUSH2",
      "value": "0x121F"
    },
    "4704": {
      "jump": "i",
      "op": "JUMP"
    },
    "4705": {
      "op": "JUMPDEST"
    },
    "4706": {
      "op": "SWAP2"
    },
    "4707": {
      "op": "SWAP1"
    },
    "4708": {
      "op": "SWAP2"
    },
    "4709": {
      "op": "ADD"
    },
    "4710": {
      "op": "SWAP3"
    },
    "4711": {
      "op": "SWAP2"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "op": "POP"
    },
    "4714": {
      "jump": "o",
      "op": "JUMP"
    },
    "4715": {
      "op": "JUMPDEST"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4718": {
      "op": "DUP2"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4722": {
      "op": "DUP3"
    },
    "4723": {
      "op": "MLOAD"
    },
    "4724": {
      "op": "DUP1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4727": {
      "op": "DUP5"
    },
    "4728": {
      "op": "ADD"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH2",
      "value": "0x128A"
    },
    "4733": {
      "op": "DUP2"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4736": {
      "op": "DUP6"
    },
    "4737": {
      "op": "ADD"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4740": {
      "op": "DUP8"
    },
    "4741": {
      "op": "ADD"
    },
    "4742": {
      "op": "PUSH2",
      "value": "0x121F"
    },
    "4745": {
      "jump": "i",
      "op": "JUMP"
    },
    "4746": {
      "op": "JUMPDEST"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4749": {
      "op": "ADD"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4752": {
      "op": "NOT"
    },
    "4753": {
      "op": "AND"
    },
    "4754": {
      "op": "SWAP2"
    },
    "4755": {
      "op": "SWAP1"
    },
    "4756": {
      "op": "SWAP2"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "SWAP3"
    },
    "4762": {
      "op": "SWAP2"
    },
    "4763": {
      "op": "POP"
    },
    "4764": {
      "op": "POP"
    },
    "4765": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0bc80c51675d1755cdcb0718a6739da03709868a",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/LockContract.sol)\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title LockContract\n * @dev This contract handles the vesting of a ERC20 tokens for a given beneficiary. Custody of the _token amount\n * can be given to this contract, which will release the _token to the beneficiary following a given schedule.\n * The vesting schedule is established by a key->value pair in the form of _duration->_amounts. This two arrays\n * have the same length and are iterated by the _milestone variable\n */\ncontract LockContract is Context, Ownable  {\n\n    //Token\n    IERC20 public legacy_token;\n\n    //Events\n    event ERC20Released(address indexed _token, uint256 amount);\n\n    //Mappings\n    mapping(address => Investor) public walletToInvestor;\n\n    //Structs\n    struct Investor {\n        address investor_address;// probably can take it out\n\n        uint256 tokens_received;// amount of tokens the Investor has received\n\n        uint256 tokens_promised;// amount of tokens the Investor is owed\n\n        uint256 vesting_start;// saves the date of the initial locking of the contract\n\n        bool under250k_investor;// if true than it is an investor between 50k-250k, if false it is 250k+\n    }\n\n    //Variables\n    address[] investor_address;// array with all the investor aaddresses\n    address[] addresses_O50I;\n    address[] addresses_O250I;\n    uint256[] tokens_O50I;\n    uint256[] tokens_O250I;\n    uint256[] percent_per_milestone;//percentages per month that will be released (in basis points)\n    uint256 initLock;// initial lock period \n    uint256 erc20Released;// total amount of released tokens\n    uint256 numMilestones;// number of milestones (number of payments for each Investor)\n    uint256 num_O50I;// number of under 50k token vested investors\n    uint256 num_O250I;// number of over 50k token vested investors\n    uint256 totalTokens_O50I;// total tokens promised to investors with 50k-250k tokens vested\n    uint256 totalTokens_O250I;// total tokens promised to investors with more than 250k tokens vested\n    uint256 timeLock_O50I;// the time lock to be applied before vesting for investors with 50k-250k tokens vested\n    uint256 timeLock_O250I;//... investors with more than 250k tokens vested\n    address tokenAddress;// token address\n    bool internal locked;   // boolean to prevent reentrancy\n\n    //Functions\n    /**\n     * @dev Set the beneficiary, start timestamp and locking durations and amounts.\n     */\n    constructor(\n        address[] memory _addresses_O50I,// array with the addresses of the investors with 50k to 250k tokens\n        address[] memory _addresses_O250I,// array with the addresses of the investors with more than 250k tokens\n\n        uint256[] memory _tokens_O50I,// array with the token amount to be vested to the equivalent\n                                      // indexed addres in _addresses_O50I\n        uint256[] memory _tokens_O250I,// array with the token amount to be vested to the equivalent\n                                      // indexed addres in _addresses_O250I\n\n        uint256[] memory _percent_per_milestone,// has the basis point values of the percentages \n                                                // of tokens that should be released in total in \n                                                // the indexed month\n\n        uint256 _tokens_O50ITotal,// sum all the tokens for the investors with with 50k-250k tokens vested\n        uint256 _tokens_O250ITotal,// ... more than 250k tokens\n\n        uint256 _timeLock_O50I,// time lock period for investors with with 50k-250k tokens vested\n        uint256 _timeLock_O250I,// ... more than 250k tokens\n\n        address _tokenAddress// address of the token to be used\n    ) {\n\n        // marks the time point in which the contract was deployed and so the time\n        // in which the investors locking period (before vesting) started\n        initLock = block.timestamp;\n\n        // percentage of tokens an investor can withdraw at each milestone\n        percent_per_milestone = _percent_per_milestone;\n\n        // number of investors with...\n        num_O50I = _addresses_O50I.length;// with 50k-250k tokens vested\n        num_O250I = _addresses_O250I.length;// more than 250k tokens vested\n\n        // array of addresses of investors with ...\n        addresses_O50I= _addresses_O50I;// with 50k-250k tokens vested\n        addresses_O250I= _addresses_O250I;// more than 250k tokens vested\n\n        // array of tokens promised to investors with ...\n        tokens_O50I = _tokens_O50I;// with 50k-250k tokens vested\n        tokens_O250I = _tokens_O250I;// more than 250k tokens vested\n\n        // total tokens promised to investors with ...\n        totalTokens_O50I = _tokens_O50ITotal;// with 50k-250k tokens vested\n        totalTokens_O250I = _tokens_O250ITotal;// more than 250k tokens vested\n\n        // create an Investor struct for each investor with less than 50k tokens\n        for (uint i=0; i<num_O50I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O50I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O50I[i];\n            uint256 _investor_tokens = tokens_O50I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp + _timeLock_O50I, \n                                                true);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // create an Investor struct for each investor with more than 250k tokens\n        for (uint i=0; i<num_O250I; i++){\n\n            // Investor address can't be the zero address\n            require(addresses_O250I[i] != address(0),\n                     \"Constructor: locked Investor address is zero address\");\n\n            // get the amount of tokens and the address correpsonding to this investor\n            address _investor_address = addresses_O250I[i];\n            uint256 _investor_tokens = tokens_O250I[i];\n           \n            // create the new Investor struct\n            Investor memory investor = Investor(_investor_address, \n                                                0, \n                                                _investor_tokens, \n                                                block.timestamp + _timeLock_O250I, \n                                                false);\n\n            // map the new Investor address to its struct\n            walletToInvestor[_investor_address]=investor;\n\n        }\n\n        // establish token address\n        tokenAddress = _tokenAddress;\n\n        // establish the IERC20 for legacy token to contract interactions\n        legacy_token = IERC20(_tokenAddress);\n\n        // Initialize the reentrancy variable to not locked\n        locked = false;\n\n        // establish the lock time for the two types of investors\n        timeLock_O50I = _timeLock_O50I;\n        timeLock_O250I = _timeLock_O250I;\n    }\n\n\n    // Modifiers\n    /**\n     * @dev Prevents reentrancy\n     */\n    modifier noReentrant() {\n        require(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n     * @dev Only investors can call functions\n     */\n    modifier onlyInvestor() {\n        require(walletToInvestor[msg.sender].tokens_promised != 0, \"Not an investor\");\n        _;\n    }\n\n    /**\n     * @dev Release the tokens \n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release() public virtual noReentrant() onlyInvestor(){\n\n        // gets the amount of tokens the investor can withdraw\n        uint256 releasable = can_release_percent(msg.sender, uint256(block.timestamp));\n\n        // adds that amount to the total released amount\n        erc20Released += releasable;\n\n        // emits an event\n        emit ERC20Released(tokenAddress, releasable);\n        // transfers the tokens to the investor\n        SafeERC20.safeTransfer(IERC20(tokenAddress), msg.sender, releasable);\n        // updates the investors struct to reflect the withdraw\n        walletToInvestor[msg.sender].tokens_received += releasable;\n    }\n\n\n    /**\n     * @dev Claculates and returns the amount of tokens that can be withdrawn, as function of milestones passed.\n     * Updates the investor struct with the amount of tokens he has withdrawn.\n     */\n    function can_release_percent(address _callerAddress, uint256 _timestamp) internal virtual returns (uint256) {\n\n        // get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[_callerAddress].tokens_received;\n        // gets the investors promised tokens\n        uint256 _tokens_promised = walletToInvestor[_callerAddress].tokens_promised;\n\n        // require that the investor has not already withdrawn everything\n        require(_has_withdrawn < _tokens_promised, \"All tokens have been claimed\");\n        \n        // gets the current time\n        uint256 _current_time = _timestamp;\n        // gets the time in which the investors vesting starts\n        uint256 _vesting_start = walletToInvestor[_callerAddress].vesting_start;\n\n        // require that the locking time for this investor has passed and thevesting has started\n        require(_current_time > _vesting_start, 'Lock time has not passed yet');\n\n        // will save the amount that is calculated that can be released\n        uint256 _can_release = 0;\n        // saves the seconds the investor has spent vesting in each bracket, to allow the token withdraw calc\n        uint256 _second_in_bracket = 0;\n        \n        //Loop through every month until we reach the one the  vesting of this investor is currently on\n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            // if the time the investor has been vesting is bigger than i month\n            if(_current_time > (_vesting_start+2592000*i)){\n\n                // check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // for each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-_vesting_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n        // get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        // return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev Adds a new Investor.\n     */\n    function new_Investor(uint256 _amount, address _newInvestor_address) public {\n\n        // require that the owner locks at least 50k tokens\n        require( _amount >= 50*10**18, \"The investor should lock at least 50k tokens.\");\n\n        // require that the owner has enough legacy tokens to satisfy the promised tokens for locking\n        require(legacy_token.balanceOf(_newInvestor_address)>= _amount, \n        \"You don't have enough Legacy tokens for the price requirement.\");\n\n        // the investor should not already by locked\n        require(walletToInvestor[_newInvestor_address].tokens_promised== 0, \n        \"This address is already in the vesting contract.\");\n\n        // transfer the tokens to the contract\n        legacy_token.transferFrom(_newInvestor_address, address(this), _amount);\n\n        if(_amount >= 50*10**18 && _amount < 250*10**18){\n            addresses_O50I.push(_newInvestor_address);\n            tokens_O50I.push(_amount);\n\n            // create the new Investor struc\n            Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                block.timestamp + timeLock_O50I,\n                                                true);\n\n            // push the new Investor struct to the Investors array\n            walletToInvestor[_newInvestor_address]=investor;  \n            \n        }else{\n            addresses_O250I.push(_newInvestor_address);\n            tokens_O250I.push(_amount);\n\n            // create the new Investor struc\n            Investor memory investor = Investor(_newInvestor_address, \n                                                0, \n                                                _amount, \n                                                block.timestamp + timeLock_O250I,\n         \n                                                true);\n\n            // push the new Investor struct to the Investors array\n            walletToInvestor[_newInvestor_address]=investor;  \n        }\n    }\n\n    /**\n     * @dev View function that an investor can use to see how many tokens he can withdraw\n     */\n    function view_can_release_percent() public view returns (uint256) {\n\n        // get the quatity of tokens he has already withdrawned,\n        uint256 _has_withdrawn = walletToInvestor[msg.sender].tokens_received;\n        // gets the investors promised tokens\n        uint256 _tokens_promised = walletToInvestor[msg.sender].tokens_promised;\n\n        // require that the investor has not already withdrawn everything\n        require(_has_withdrawn < _tokens_promised, \"All tokens have been claimed\");\n        \n        // gets the current time\n        uint256 _current_time = block.timestamp;\n        // gets the time in which the investors vesting starts\n        uint256 _vesting_start = walletToInvestor[msg.sender].vesting_start;\n\n        // require that the locking time for this investor has passed and thevesting has started\n        require(_current_time > _vesting_start, 'Lock time has not passed yet');\n\n        // will save the amount that is calculated that can be released\n        uint256 _can_release = 0;\n        // saves the seconds the investor has spent vesting in each bracket, to allow the token withdraw calc\n        uint256 _second_in_bracket = 0;\n        \n        //Loop through every milestone until we reach the one the  vesting of this investor is currently on\n        for(uint i = 1; i<= percent_per_milestone.length; i++){\n        \n            // if the time the investor has been vesting is bigger than i month\n            if(_current_time > (_vesting_start+2592000*i)){\n\n                // check how much time has elapsed how may percentage brakctes/months \n                    //we have passed since the initLock\n                _second_in_bracket =2592000*i -2592000*(i-1);\n                \n                // for each bracket, claculate the the tokens to be released in that period  \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;// remember the percent_per \n                                                                                // milestone are percents multiplied by 1000 \n                \n            }else{\n                //If the current time is in the middle of one of the months\n                _second_in_bracket = _current_time - 2592000*(i-1)-_vesting_start;\n                \n                _can_release = _can_release + \n                    _tokens_promised * \n                    percent_per_milestone[i-1]/10000/2592000 * _second_in_bracket;\n\n                break;\n            }\n        }\n\n        // get the amount of tokens the investor can actually withdraw: \n        uint256 _able_to_release = _can_release - _has_withdrawn;\n\n        // return \n        return  _able_to_release;\n    }\n\n    /**\n     * @dev View function to get contract balance\n     */\n    function contract_balance() public view returns (uint256) {\n        return legacy_token.balanceOf(address(this));\n    }\n\n    function get_initLock() public view returns(uint256){\n        return initLock;\n    }\n}",
  "sourceMap": "792:16301:5:-:0;;;2733:4872;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;4171:15:5;4160:8;:26;4272:46;;;;:21;;:46;;;;;:::i;:::-;-1:-1:-1;4379:22:5;;4368:8;:33;;;4453:23;;4441:9;:35;4570:31;;:14;;:31;;;;;:::i;:::-;-1:-1:-1;4641:33:5;;;;:15;;:33;;;;;:::i;:::-;-1:-1:-1;4774:26:5;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;4840:28:5;;;;:12;;:28;;;;;:::i;:::-;-1:-1:-1;4965:16:5;:36;;;5041:17;:38;;;-1:-1:-1;5202:935:5;5219:8;;5217:1;:10;5202:935;;;5343:1;-1:-1:-1;;;;;5314:31:5;:14;5329:1;5314:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5314:17:5;:31;5306:117;;;;-1:-1:-1;;;5306:117:5;;4127:2:6;5306:117:5;;;4109:21:6;4166:2;4146:18;;;4139:30;-1:-1:-1;;;;;;;;;;;4185:18:6;;;4178:62;4276:22;4256:18;;;4249:50;4316:19;;5306:117:5;;;;;;;;;5525:25;5553:14;5568:1;5553:17;;;;;;;;:::i;:::-;;;;;;;;;;5611:11;:14;;-1:-1:-1;;;;;5553:17:5;;;;-1:-1:-1;5611:11:5;5623:1;;5611:14;;;;;;:::i;:::-;;;;;;;;;5584:41;;5697:24;5724:284;;;;;;;;5733:17;-1:-1:-1;;;;;5724:284:5;;;;;5801:1;5724:284;;;;5853:16;5724:284;;;;5938:14;5920:15;:32;;;;:::i;:::-;5724:284;;6003:4;5724:284;;;;;;;-1:-1:-1;;;;;6081:35:5;;;-1:-1:-1;6081:35:5;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;6081:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6081:44:5;;;;;;;;;;;-1:-1:-1;5229:3:5;;-1:-1:-1;5229:3:5;;;:::i;:::-;;;;5202:935;;;;6234:6;6229:941;6246:9;;6244:1;:11;6229:941;;;6372:1;-1:-1:-1;;;;;6342:32:5;:15;6358:1;6342:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6342:18:5;:32;6334:118;;;;-1:-1:-1;;;6334:118:5;;4127:2:6;6334:118:5;;;4109:21:6;4166:2;4146:18;;;4139:30;-1:-1:-1;;;;;;;;;;;4185:18:6;;;4178:62;4276:22;4256:18;;;4249:50;4316:19;;6334:118:5;3925:416:6;6334:118:5;6554:25;6582:15;6598:1;6582:18;;;;;;;;:::i;:::-;;;;;;;;;;6641:12;:15;;-1:-1:-1;;;;;6582:18:5;;;;-1:-1:-1;6641:12:5;6654:1;;6641:15;;;;;;:::i;:::-;;;;;;;;;6614:42;;6728:24;6755:286;;;;;;;;6764:17;-1:-1:-1;;;;;6755:286:5;;;;;6832:1;6755:286;;;;6884:16;6755:286;;;;6969:15;6951;:33;;;;:::i;:::-;6755:286;;7035:5;6755:286;;;;;;;-1:-1:-1;;;;;7114:35:5;;;;;:16;:35;;;;;;;;:44;;;;-1:-1:-1;;;;;;7114:44:5;;;;;;;;;;;;;-1:-1:-1;7114:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7114:44:5;;;;;;;;;;;-1:-1:-1;6257:3:5;;-1:-1:-1;6257:3:5;;;:::i;:::-;;;;6229:941;;;-1:-1:-1;7215:12:5;:28;;;7328:36;;-1:-1:-1;;;;;;7328:36:5;-1:-1:-1;;;;;7215:28:5;;;7328:36;;;;;-1:-1:-1;;;;;;7435:14:5;;;;;;7526:13;:30;;;;-1:-1:-1;7566:32:5;-1:-1:-1;792:16301:5;;-1:-1:-1;;;;;;792:16301:5;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;792:16301:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;792:16301:5;;;-1:-1:-1;792:16301:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;792:16301:5;-1:-1:-1;;;;;792:16301:5;;;;;;;;;;;-1:-1:-1;792:16301:5;;;;;;;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:6;247:40;;-1:-1:-1;;;;;302:34:6;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:6:o;426:183::-;486:4;-1:-1:-1;;;;;508:30:6;;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:6;582:14;598:4;578:25;;426:183::o;614:177::-;693:13;;-1:-1:-1;;;;;735:31:6;;725:42;;715:70;;781:1;778;771:12;715:70;614:177;;;:::o;796:683::-;861:5;914:3;907:4;899:6;895:17;891:27;881:55;;932:1;929;922:12;881:55;961:6;955:13;987:4;1011:60;1027:43;1067:2;1027:43;:::i;:::-;1011:60;:::i;:::-;1105:15;;;1191:1;1187:10;;;;1175:23;;1171:32;;;1136:12;;;;1215:15;;;1212:35;;;1243:1;1240;1233:12;1212:35;1279:2;1271:6;1267:15;1291:159;1307:6;1302:3;1299:15;1291:159;;;1373:34;1403:3;1373:34;:::i;:::-;1361:47;;1428:12;;;;1324;;1291:159;;;-1:-1:-1;1468:5:6;796:683;-1:-1:-1;;;;;;796:683:6:o;1484:659::-;1549:5;1602:3;1595:4;1587:6;1583:17;1579:27;1569:55;;1620:1;1617;1610:12;1569:55;1649:6;1643:13;1675:4;1699:60;1715:43;1755:2;1715:43;:::i;1699:60::-;1793:15;;;1879:1;1875:10;;;;1863:23;;1859:32;;;1824:12;;;;1903:15;;;1900:35;;;1931:1;1928;1921:12;1900:35;1967:2;1959:6;1955:15;1979:135;1995:6;1990:3;1987:15;1979:135;;;2061:10;;2049:23;;2092:12;;;;2012;;1979:135;;2148:1640;2424:6;2432;2440;2448;2456;2464;2472;2480;2488;2496;2549:3;2537:9;2528:7;2524:23;2520:33;2517:53;;;2566:1;2563;2556:12;2517:53;2593:16;;-1:-1:-1;;;;;2658:14:6;;;2655:34;;;2685:1;2682;2675:12;2655:34;2708:72;2772:7;2763:6;2752:9;2748:22;2708:72;:::i;:::-;2698:82;;2826:2;2815:9;2811:18;2805:25;2789:41;;2855:2;2845:8;2842:16;2839:36;;;2871:1;2868;2861:12;2839:36;2894:74;2960:7;2949:8;2938:9;2934:24;2894:74;:::i;:::-;2884:84;;3014:2;3003:9;2999:18;2993:25;2977:41;;3043:2;3033:8;3030:16;3027:36;;;3059:1;3056;3049:12;3027:36;3082:74;3148:7;3137:8;3126:9;3122:24;3082:74;:::i;:::-;3072:84;;3202:2;3191:9;3187:18;3181:25;3165:41;;3231:2;3221:8;3218:16;3215:36;;;3247:1;3244;3237:12;3215:36;3270:74;3336:7;3325:8;3314:9;3310:24;3270:74;:::i;:::-;3260:84;;3390:3;3379:9;3375:19;3369:26;3353:42;;3420:2;3410:8;3407:16;3404:36;;;3436:1;3433;3426:12;3404:36;;3459:74;3525:7;3514:8;3503:9;3499:24;3459:74;:::i;:::-;3449:84;;;3573:3;3562:9;3558:19;3552:26;3542:36;;3618:3;3607:9;3603:19;3597:26;3587:36;;3663:3;3652:9;3648:19;3642:26;3632:36;;3708:3;3697:9;3693:19;3687:26;3677:36;;3732:50;3777:3;3766:9;3762:19;3732:50;:::i;:::-;3722:60;;2148:1640;;;;;;;;;;;;;:::o;3793:127::-;3854:10;3849:3;3845:20;3842:1;3835:31;3885:4;3882:1;3875:15;3909:4;3906:1;3899:15;4346:127;4407:10;4402:3;4398:20;4395:1;4388:31;4438:4;4435:1;4428:15;4462:4;4459:1;4452:15;4478:128;4518:3;4549:1;4545:6;4542:1;4539:13;4536:39;;;4555:18;;:::i;:::-;-1:-1:-1;4591:9:6;;4478:128::o;4611:135::-;4650:3;4671:17;;;4668:43;;4691:18;;:::i;:::-;-1:-1:-1;4738:1:6;4727:13;;4611:135::o;:::-;792:16301:5;;;;;;",
  "sourcePath": "contracts/LockContract.sol",
  "type": "contract"
}